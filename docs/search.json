[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This site holds the Stata labs and one lecture for the course EOSE09 - Economy and Society: Regional Development and Growth, offered at Lund University in Sweden."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EOSE09 - Economy and Society: Regional Development and Growth",
    "section": "",
    "text": "Stata Lab 1 Mapping Growth: Basic maps\n\n\n\n\n\n\nVinzent Ostermeyer, adapted Jonathan Jayes\n\n\nJan 30, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStata Lab 2 Mapping Growth: Across Space and Time\n\n\n\n\n\n\nVinzent Ostermeyer, adapted Jonathan Jayes\n\n\nFeb 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResources\n\n\n\n\n\n\nJonathan Jayes\n\n\nMar 30, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "labs/Lab-1.html",
    "href": "labs/Lab-1.html",
    "title": "Stata Lab 1 Mapping Growth: Basic maps",
    "section": "",
    "text": "🗺️ One goal of this course is to teach students how to identify a good map – one which is clear, informative and attractive – and familiarise students with the commands which allow the creation of these maps in Stata.📈\nIn addition, your lab paper (📅 due March 3rd) requires that you include at least 6 maps, so it is worth concentrating in the labs and making use of these resources.📝\n📚 This document is intended to allow you to keep up with the Stata Lab 1 that we will work through in class.📊\nYou can read the document on this website, or download the same information in pdf format here📚.\nIt will include the commands the we use and the output, as well as some hints and tips that will be useful during your projects, I hope.🤞"
  },
  {
    "objectID": "labs/Lab-1.html#getting-started",
    "href": "labs/Lab-1.html#getting-started",
    "title": "Stata Lab 1 Mapping Growth: Basic maps",
    "section": "Getting started",
    "text": "Getting started\nGiven that you have encountered Stata previously in your studies, I will not spend undue time explaining the basics. If you want to brush up on Stata’s syntax, I reccomend having a look at these slides from Oscar Torres-Reyna, or this set of Youtube videos From Sebastian Wai.\n\nInstall additional programs and set-up\nFirst we need to install the packages in Stata that we will make use of. Please do this before our lab session in order to save time.\nWe use the ssc install command, as follows:\nssc install spmap, replace\nssc install geo2xy, replace\nssc install shp2dta, replace\nssc install schemepack, replace\nssc install scheme-burd, replace\nssc install colrspace, replace\nssc install palettes, replace\nssc install egenmore, replace\nssc install outreg2, replace\n\n\n\n\n\n\nNote\n\n\n\nTo run do-files click the “run-button” or highlight the lines of code and hit ctrl + D (Windows) or shift + cmd + D (Mac)\n\n\nRunning the command should produce output in the console that looks like this:\n\n. ssc install geo2xy, replace\n  checking geo2xy consistency and verifying not already installed...\n  installing into c:\\ado\\plus\\... installation complete.\n  ...\n\n\n\n\n\n\n\nalways comment your code\n\n\n\nIn Stata you can comment your code in one line\n// like so\nOr if you want to write a longer string\n/*You can put your longer string of text inside a set of slashes and stars*/\n\n\n\nSetting a directory\nIt is useful to put all of your work inside a specific file directory. This way, Stata knows where to look for your files and where to save output, like regression tables.\nThe path to my folder where I have the files for this lab is:\nC:/Users/User/Documents/Recon/EOSE09/stata_files/\nIf you have a Mac, it will look something like this:\nUsers/Jonathan/Documents/Stata-lab/\nIf you want to change the settings on your Mac to display the file path in your Finder window, follow this link.\nTo tell Stata that this is where I want it to look for my files, I’ll use the cd (current directory) command in my do-file.\ncd \"C:/Users/User/Documents/Recon/EOSE09/stata_files/\" // set your directory\nIf successful, in the console I will see the following output:\n\n. cd \"C:/Users/User/Documents/Recon/EOSE09/stata_files/\" // set your directory\n  C:\\Users\\User\\Documents\\Recon\\EOSE09\\stata_files\n\nYou can call the help window by typing help into the console, and set your Stata version for compatability reasons with the version command, like so:\nhelp // Stata's help function; cf. also the web or Statalist\nversion 16.1 // version control"
  },
  {
    "objectID": "labs/Lab-1.html#importing-the-roses-wolf-dataset-from-excel-into-stata",
    "href": "labs/Lab-1.html#importing-the-roses-wolf-dataset-from-excel-into-stata",
    "title": "Stata Lab 1 Mapping Growth: Basic maps",
    "section": "Importing the Roses-Wolf dataset from Excel into Stata",
    "text": "Importing the Roses-Wolf dataset from Excel into Stata\nAt the moment, the database we want to use to draw our maps is in an excel sheet.\nIt has many tabs, and some lines are filled with headings before the data begins, as show here:\n\n\n\nScreenshot of excel file\n\n\nWhat we want to do is import the data from each tab, and append it together.\nimport excel using RosesWolf_RegionalGDP_v6.xlsx, sheet(\"A1 Regional GDP\") firstrow cellrange(A6:O179) clear // import Excel sheet\nrename (D E F G H I J K L M N O) (year_1900 year_1910 year_1925 year_1938 year_1950 year_1960 year_1970 year_1980 year_1990 year_2000 year_2010 year_2015)\nThis is what the data now looks like inside Stata. It is a wide dataframe, with 173 rows (the number of regions) and 15 variables (3 identifiers and 12 years worth of data)\n\n\n\nScreenshot of Stata format\n\n\n\n\n\n\n\n\nTip\n\n\n\nRecall that the Roses Wolf database has geographic data on GDP and population at the nomenclature of territorial units 2 (NUTS-2) level, from 1900 to 2015.\n\n\nNext we want to be sure that Stata is reading in the values as numbers rather than text. For this we use the destring command.\nimport excel using RosesWolf_RegionalGDP_v6.xlsx, sheet(\"A1 Regional GDP\") firstrow cellrange(A6:O179) clear allstring `// we import each sheet in the Excel file separately and save it as one file`\nrename (D E F G H I J K L M N O) (year_1900 year_1910 year_1925 year_1938 year_1950 year_1960 year_1970 year_1980 year_1990 year_2000 year_2010 year_2015)\ndestring year_*, replace\nIf there are non-numerical values in a string you cannot use destring and should not use the force-option as it would create missing values A better approach is to check all cases that are non-numerical and replace them (e.g. change “one” to “1”)\nOther common data cleaning commands could include:\n// tab var1 if missing(real(var1)) // replace var1 ... if ... // destring var1, replace\nNext we want to take the data from a wide format to a long format. A long format means that each row is an observation, each column is a variable, and each cell has just one value in it.\n\n\n\nReshape graphic\n\n\nhelp reshape\nreshape long year_, i(NUTSCodes Region Countrycurrentborder) j(year)\nrename year_ regional_gdp_millions\nsave regional_gdp, replace \n\n\n\n\n\n\nTip\n\n\n\nNever overwrite your raw data - this could be a big problem if you haven’t saved it somewhere else. Good practice is to save a copy of your data in a different folder before the analysis, and make any changes through your do-file (e.g. changing “one” to “1” in Stata rather than excel)."
  },
  {
    "objectID": "resources/resources-scraper.html",
    "href": "resources/resources-scraper.html",
    "title": "Stata-resources",
    "section": "",
    "text": "Scrape website of Stata for resources and text to make a table.\n\nlibrary(tidyverse)\nlibrary(rvest)\n\nget_info <- function(url_in) {\n  url <- url_in\n\n  html <- read_html(url)\n\n  message(\"Getting info\")\n  titles <- html %>%\n    html_nodes(\"dt\") %>%\n    html_nodes(\"a\") %>%\n    html_text() %>%\n    str_squish() %>%\n    as_tibble() %>%\n    rename(title = value) %>%\n    mutate(rn = row_number())\n\n  links <- html %>%\n    html_nodes(\"dt\") %>%\n    html_nodes(\"a\") %>%\n    html_attr(\"href\") %>%\n    as_tibble() %>%\n    rename(link = value) %>%\n    mutate(rn = row_number())\n\n  descs <- html %>%\n    html_nodes(\"dd\") %>%\n    # html_nodes(\"a\") %>%\n    html_text() %>%\n    str_squish() %>%\n    as_tibble() %>%\n    rename(desc = value) %>%\n    filter(!str_detect(desc, \"[0-9]+ Users\")) %>%\n    mutate(rn = row_number())\n\n  df <- titles %>%\n    inner_join(links) %>%\n    inner_join(descs) %>%\n    select(-rn)\n\n  return(df)\n}\n\nresources <- get_info(\"https://www.stata.com/links/resources-for-learning-stata/\")\n\nresources %>% write_rds(\"resources/stata-resources.rds\")"
  },
  {
    "objectID": "resources/resources.html",
    "href": "resources/resources.html",
    "title": "Resources",
    "section": "",
    "text": "🔥 Welcome to our page of resources for learning Stata, the powerful econometrics software used by researchers and analysts in many fields. 📚 Here you will find a variety of materials to help you get started and become proficient in using Stata, including tutorials, documentation, and examples.🤓 Whether you’re a beginner or an experienced user, these resources will help you make the most of this powerful tool💻📊.\n\nStata commands\nThis Stata tutorial from Oscar Torres Reyna.\n\n\nLinks to a bunch of resources from Stata\n\n\n\n\n\n\n  \n    \n      Resources to help you learn Stata\n    \n    \n      From the Stata website\n    \n  \n  \n    \n      Title and link\n      Description\n    \n  \n  \n    \nStata Online Training Page\n      \nA series of pages giving a step-by-step instruction in Stata. Topics start from basic Stata usage, and progress through common data management tasks through to using Stata for a wide variety of analysis topics.\n    \nStata Tutorial\n      \nA brief and informative introduction to Stata. There are also some nice notes about fitting generalized linear models using Stata.\n    \nStata cheat sheets\n      \nThese compact yet well-organized sheets cover everything you need, from syntax and data processing to plotting and programming, making them handy references to download for quick use.\n    \nArticles on Statistical Computing\n      \nA large collection of well-written and informative pages about a broad set of topics, including an in-depth Introduction to Stata for Researchers, and a careful treatment of Multiple Imputation in Stata.\n    \nResources to help you learn and use Stata\n      \nAn extensive resource of Stata information, including FAQs, learning modules, a quick-reference guide, annotated output, textbook examples, and more. Don't miss the Stata Web Books.\n    \nStata Highlights\n      \nExcerpts from Graduate Statistics I and Graduate Statistics II notes which highlight the use of Stata for solving various problems. In particular, there are some good pointers on interpreting predictive margins and marginal effects.\n    \nSocial Science Research, Stata & OS X Programming\n      \nPosts on research, Stata & OSX programming.\n    \nTips for using Stata\n      \nDescribes some tips to enhance your efficient use of Stata. New users may want to visit the Getting Started with Stata page.\n    \nInternet Guide to Stata\n      \nThis brief guide focuses on Stata for Windows.\n    \nThe Stata Guide\n      \nInformation on Stata, data visualizations, data management, and programming.\n    \nMultilevel Modelling\n      \nThere approximately 150 pages of materials covering fitting multilevel models for continuous and binary dependent variables in Stata using the xtmixed and xtmelogit commands. Users have to register to access the pdfs, datasets and do-files, but all materials are made freely available.\n    \nBiostatistics II\n      \nLecture notes from the second semester biostatistics class at Vanderbilt. These notes contain extensive screen shots of using the Stata menu system to do a wide range of statistical analyses common in the biostatistics world. The datasets used for the examples are also available, so that it is possible to work through the lessons and replicate the results.\n    \nStatistical Modelling in Stata\n      \nLecture notes, exercises and solutions for an introductory statistics course on basic statistical inference. The materials start with the basics and work up through introductory survival analysis.\n    \nIntroduction to Stata\n      \nA 67-page description of Stata, its key features and benefits, and other useful information.\n    \nAn Introduction to Stata\n      \nA series of video tutorials introducing Stata basics—navigating Stata's interface, inspecting and modifying data, and saving commands in a do-file.\n    \nVisualizing data using Stata\n      \nA series of videos for Stata graphics. These videos demonstrate how to create graphs such as histograms, box plots, bar graphs, scatterplots, and fitted regression lines, and they show how to customize the look of a graph.\n    \nThe Stata Project-Oriented Guide\n      \nA series of short tutorials covering the typical steps in a statistical project. The tutorials range from data management to automation with a dash of statistics and postestimation.\n    \nSurvival Analysis with Stata\n      \nLessons, programs, do-files, and a PDF book about survival analysis in Stata. (Updated June 2008)\n    \nRegression with Stata\n      \nThe Statistical Consulting Group at Academic Technology Services has created a “web book” covering a variety of topics on performing regression analysis with Stata. The book does not teach regression but gives examples showing how to use Stata for performing regression analysis. Written for Stata 7.\n    \nWorkshops on “Audit trails, reproducibility and output processing” and “Effective use of Stata Graphics”\n      \nWorkshop notes, Powerpoint presentations, data files, and do-files\n    \ngologit2\n      \nPrograms, readings, and documentation for generalized ordered logit and partial proportional-odds models for ordinal dependent variables (gologit2) and ordinal generalized linear models (oglm).\n    \noglm\n      \nAn introduction to Stata and various commands.\n    \nAn Introduction to Stata\n      \nMicroeconometrics class notes for use with Stata 10\n    \nShort Guides to Microeconometrics (with Stata commands)\n      \nWeekly video postings by StataCorp showing how to do common tasks in Stata.\n    \nStata video tutorials\n      \nNew to Stata? Sign up for the Ready, Set, Go Stata webinar. More experienced user? See the complete list of Stata webinars.\n    \nFree Stata webinars\n      \nNot Elsewhere Classified is the official Stata blog that has articles written by Stata developers and StataCorp staff on the use of Stata and other news related to the use of Stata.\n    \nThe Stata Blog\n      \nAnswers to the most frequently asked questions in statistics, data management, graphics, and operating system issues.\n    \nStata Technical Support FAQs\n      \nStatalist is a forum where over 40,000 Stata users from experts to neophytes maintain a lively dialogue about all things statistical and Stata.\n    \nStatalist\n      \nClassroom and web-based courses, on-site training courses, webinars, NetCourses, and more.\n    \nStata training\n      \nThe Stata Journal is a quarterly publication containing articles about statistics, data analysis, teaching methods, and effective use of Stata's language.\n    \nStata Journal\n      \nAlso see the Stata Technical Bulletin FAQ. Although the SJ superseded the STB, past STB issues contain valuable information. The FAQ includes information on how to obtain over the net the software associated with the published articles.\n    \nVisual overview for creating graphs\n      \nScroll through over 100 graphs that are broken out by category. Click on a graph to see the command that created it.\n    \nDanish Short Course Materials\n      \nDownload our cheat sheets for calling Python from Stata and our guide for working with dates and times in Stata.\n  \n  \n  \n\n\n\n\n\n\nUseful blog posts\nAsjad Naqvi’s mapping guide for Stata part 1\nAsjad Naqvi’s mapping guide for Stata part 2\nA World Bank blog on mapping in Stata\n\n\nYoutube channels\nSebastian Wai’s channel\n\n\nEconometrics Academy from Ani Katchova"
  },
  {
    "objectID": "labs/Lab-2.html",
    "href": "labs/Lab-2.html",
    "title": "Stata Lab 2 Mapping Growth: Across Space and Time",
    "section": "",
    "text": "🗺️ One goal of this course is to teach students how to identify a good map – one which is clear, informative and attractive – and familiarise students with the commands which allow the creation of these maps in Stata.📈\nIn addition, your lab paper (📅 due March 3rd) requires that you include at least 6 maps, so it is worth concentrating in the labs and making use of these resources.📝\n📚 This document is intended to allow you to keep up with the Stata Lab 1 that we will work through in class.📊\nYou can read the document on this website, or download the same information in pdf format here📚.\nIt will include the commands the we use and the output, as well as some hints and tips that will be useful during your projects, I hope.🤞"
  },
  {
    "objectID": "labs/Lab-2.html#getting-started",
    "href": "labs/Lab-2.html#getting-started",
    "title": "Stata Lab 2 Mapping Growth: Across Space and Time",
    "section": "Getting started",
    "text": "Getting started\nGiven that you have encountered Stata previously in your studies, I will not spend undue time explaining the basics. If you want to brush up on Stata’s syntax, I reccomend having a look at these slides from Oscar Torres-Reyna, or this set of Youtube videos From Sebastian Wai.\n\nInstall additional programs and set-up\nFirst we need to install the packages in Stata that we will make use of. Please do this before our lab session in order to save time.\nWe use the ssc install command, as follows:\nssc install spmap, replace\nssc install geo2xy, replace\nssc install shp2dta, replace\nssc install schemepack, replace\nssc install scheme-burd, replace\nssc install colrspace, replace\nssc install palettes, replace\nssc install egenmore, replace\nssc install outreg2, replace\n\n\n\n\n\n\nNote\n\n\n\nTo run do-files click the “run-button” or highlight the lines of code and hit ctrl + D (Windows) or shift + cmd + D (Mac)\n\n\nRunning the command should produce output in the console that looks like this:\n\n. ssc install geo2xy, replace\n  checking geo2xy consistency and verifying not already installed...\n  installing into c:\\ado\\plus\\... installation complete.\n  ...\n\n\n\n\n\n\n\nalways comment your code\n\n\n\nIn Stata you can comment your code in one line\n// like so\nOr if you want to write a longer string\n/*You can put your longer string of text inside a set of slashes and stars*/\n\n\n\nSetting a directory\nIt is useful to put all of your work inside a specific file directory. This way, Stata knows where to look for your files and where to save output, like regression tables.\nThe path to my folder where I have the files for this lab is:\nC:/Users/User/Documents/Recon/EOSE09/stata_files/\nIf you have a Mac, it will look something like this:\nUsers/Jonathan/Documents/Stata-lab/\nIf you want to change the settings on your Mac to display the file path in your Finder window, follow this link.\nTo tell Stata that this is where I want it to look for my files, I’ll use the cd (current directory) command in my do-file.\ncd \"C:/Users/User/Documents/Recon/EOSE09/stata_files/\" // set your directory\nIf successful, in the console I will see the following output:\n\n. cd \"C:/Users/User/Documents/Recon/EOSE09/stata_files/\" // set your directory\n  C:\\Users\\User\\Documents\\Recon\\EOSE09\\stata_files\n\nYou can call the help window by typing help into the console, and set your Stata version for compatability reasons with the version command, like so:\nhelp // Stata's help function; cf. also the web or Statalist\nversion 16.1 // version control"
  },
  {
    "objectID": "labs/Lab-2.html#importing-the-roses-wolf-dataset-from-excel-into-stata",
    "href": "labs/Lab-2.html#importing-the-roses-wolf-dataset-from-excel-into-stata",
    "title": "Stata Lab 2 Mapping Growth: Across Space and Time",
    "section": "Importing the Roses-Wolf dataset from Excel into Stata",
    "text": "Importing the Roses-Wolf dataset from Excel into Stata\nAt the moment, the database we want to use to draw our maps is in an excel sheet.\nIt has many tabs, and some lines are filled with headings before the data begins, as show here:\n\n\n\nScreenshot of excel file\n\n\nWhat we want to do is import the data from each tab, and append it together.\nimport excel using RosesWolf_RegionalGDP_v6.xlsx, sheet(\"A1 Regional GDP\") firstrow cellrange(A6:O179) clear // import Excel sheet\nrename (D E F G H I J K L M N O) (year_1900 year_1910 year_1925 year_1938 year_1950 year_1960 year_1970 year_1980 year_1990 year_2000 year_2010 year_2015)\nThis is what the data now looks like inside Stata. It is a wide dataframe, with 173 rows (the number of regions) and 15 variables (3 identifiers and 12 years worth of data)\n\n\n\nScreenshot of Stata format\n\n\n\n\n\n\n\n\nTip\n\n\n\nRecall that the Roses Wolf database has geographic data on GDP and population at the nomenclature of territorial units 2 (NUTS-2) level, from 1900 to 2015.\n\n\nNext we want to be sure that Stata is reading in the values as numbers rather than text. For this we use the destring command.\nimport excel using RosesWolf_RegionalGDP_v6.xlsx, sheet(\"A1 Regional GDP\") firstrow cellrange(A6:O179) clear allstring `// we import each sheet in the Excel file separately and save it as one file`\nrename (D E F G H I J K L M N O) (year_1900 year_1910 year_1925 year_1938 year_1950 year_1960 year_1970 year_1980 year_1990 year_2000 year_2010 year_2015)\ndestring year_*, replace\nIf there are non-numerical values in a string you cannot use destring and should not use the force-option as it would create missing values A better approach is to check all cases that are non-numerical and replace them (e.g. change “one” to “1”)\nOther common data cleaning commands could include:\n// tab var1 if missing(real(var1)) // replace var1 ... if ... // destring var1, replace\nNext we want to take the data from a wide format to a long format. A long format means that each row is an observation, each column is a variable, and each cell has just one value in it.\n\n\n\nReshape graphic\n\n\nhelp reshape\nreshape long year_, i(NUTSCodes Region Countrycurrentborder) j(year)\nrename year_ regional_gdp_millions\nsave regional_gdp, replace \n\n\n\n\n\n\nTip\n\n\n\nNever overwrite your raw data - this could be a big problem if you haven’t saved it somewhere else. Good practice is to save a copy of your data in a different folder before the analysis, and make any changes through your do-file (e.g. changing “one” to “1” in Stata rather than excel)."
  },
  {
    "objectID": "labs/Lab-1.html#structure",
    "href": "labs/Lab-1.html#structure",
    "title": "Stata Lab 1 Mapping Growth: Basic maps",
    "section": "Structure",
    "text": "Structure\nToday we will be covering the following topics:\n\nInstalling basic packages: We will go over how to install the necessary packages in order to run our analysis. This will include packages such as “spmap” and “geo2xy” which will allow us to create maps in Stata.\nData types: We will discuss the different types of data that we will be working with in this lab. Specifically, we will be using time series data from a spreadsheet and map data from a shapefile. It is important to understand the structure and format of these data types in order to properly analyze and visualize them.\nBasic mapping: Once we have our data, we will learn how to draw a basic map using the “maps” and “maptools” packages. We will go over how to import the shapefile data, how to define the map scale, and how to add different layers to the map such as points, lines, and polygons.\n\nBy the end of this lab, you should have a solid understanding of how to install necessary packages, how to work with different types of data, and how to draw a basic map in Stata.\n📊🗺️💻 Let’s get started!"
  }
]