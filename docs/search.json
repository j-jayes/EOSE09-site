[
  {
    "objectID": "lectures/ideas.html",
    "href": "lectures/ideas.html",
    "title": "Ideas",
    "section": "",
    "text": "Animated figure of beta convergence year by year - see slide in lecture 3 on Italy: Two measures of convergence."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EOSE09 - Economy and Society: Regional Development and Growth",
    "section": "",
    "text": "This site holds the Stata labs and one lecture for the course EOSE09 - Economy and Society: Regional Development and Growth, offered at Lund University in Sweden."
  },
  {
    "objectID": "index.html#labs",
    "href": "index.html#labs",
    "title": "EOSE09 - Economy and Society: Regional Development and Growth",
    "section": "Labs",
    "text": "Labs\n\n\n\n\n\n\n\n\n\n\nStata Lab 1: Mapping Growth - Basic Maps\n\n\n\n\n\n\nVinzent Ostermeyer, adapted Jonathan Jayes\n\n\nFeb 19, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStata Lab 2: Mapping Growth - Across Space and Time\n\n\n\n\n\n\nVinzent Ostermeyer, adapted Jonathan Jayes\n\n\nFeb 27, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStata Lab 1: Exercises\n\n\n\n\n\n\nJonathan Jayes\n\n\nMar 11, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStata Lab 2: Exercises\n\n\n\n\n\n\nJonathan Jayes\n\n\nMar 11, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStata Lab Hints: Basic Graphs\n\n\n\n\n\n\nJonathan Jayes\n\n\nMar 11, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSigma Convergence\n\n\n\n\n\n\nJonathan Jayes\n\n\nMar 11, 2025\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#lectures",
    "href": "index.html#lectures",
    "title": "EOSE09 - Economy and Society: Regional Development and Growth",
    "section": "Lectures",
    "text": "Lectures\n\n\n\n\n\n\n\n\n\n\nData visualization\n\n\n\n\n\n\n\n\n\nMar 11, 2025\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#resources",
    "href": "index.html#resources",
    "title": "EOSE09 - Economy and Society: Regional Development and Growth",
    "section": "Resources",
    "text": "Resources\n\n\n\n\n\n\n\n\n\n\nResources\n\n\n\n\n\n\nJonathan Jayes\n\n\nMar 30, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdditional Data: Eurostat\n\n\n\n\n\n\nJonathan Jayes\n\n\nMar 11, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nHow to install Stata on your personal computers\n\n\n\n\n\n\n\n\n\nMar 11, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nLab 1: Slides on Lab Paper\n\n\n\n\n\n\n\n\n\nMar 11, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nBeta-convergence\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdditional Data: DOSE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBy request: dotted lines to indicate a region of interest\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "resources/resources.html",
    "href": "resources/resources.html",
    "title": "Resources",
    "section": "",
    "text": "üî• Welcome to our page of resources for learning Stata, the powerful econometrics software used by researchers and analysts in many fields. üìö Here you will find a variety of materials to help you get started and become proficient in using Stata, including tutorials, documentation, and examples.ü§ì Whether you‚Äôre a beginner or an experienced user, these resources will help you make the most of this powerful toolüíªüìä.\n\nStata commands\nThis Stata tutorial from Oscar Torres Reyna.\n\n\nLinks to a bunch of resources from Stata\n\n\n\n\n\n\n\n\nResources to help you learn Stata\n\n\nFrom the Stata website\n\n\nTitle and link\nDescription\n\n\n\n\nStata Online Training Page\nA series of pages giving a step-by-step instruction in Stata. Topics start from basic Stata usage, and progress through common data management tasks through to using Stata for a wide variety of analysis topics.\n\n\nStata Tutorial\nA brief and informative introduction to Stata. There are also some nice notes about fitting generalized linear models using Stata.\n\n\nStata cheat sheets\nThese compact yet well-organized sheets cover everything you need, from syntax and data processing to plotting and programming, making them handy references to download for quick use.\n\n\nArticles on Statistical Computing\nA large collection of well-written and informative pages about a broad set of topics, including an in-depth Introduction to Stata for Researchers, and a careful treatment of Multiple Imputation in Stata.\n\n\nResources to help you learn and use Stata\nAn extensive resource of Stata information, including FAQs, learning modules, a quick-reference guide, annotated output, textbook examples, and more. Don't miss the Stata Web Books.\n\n\nStata Highlights\nExcerpts from Graduate Statistics I and Graduate Statistics II notes which highlight the use of Stata for solving various problems. In particular, there are some good pointers on interpreting predictive margins and marginal effects.\n\n\nSocial Science Research, Stata & OS X Programming\nPosts on research, Stata & OSX programming.\n\n\nTips for using Stata\nDescribes some tips to enhance your efficient use of Stata. New users may want to visit the Getting Started with Stata page.\n\n\nInternet Guide to Stata\nThis brief guide focuses on Stata for Windows.\n\n\nThe Stata Guide\nInformation on Stata, data visualizations, data management, and programming.\n\n\nMultilevel Modelling\nThere approximately 150 pages of materials covering fitting multilevel models for continuous and binary dependent variables in Stata using the xtmixed and xtmelogit commands. Users have to register to access the pdfs, datasets and do-files, but all materials are made freely available.\n\n\nBiostatistics II\nLecture notes from the second semester biostatistics class at Vanderbilt. These notes contain extensive screen shots of using the Stata menu system to do a wide range of statistical analyses common in the biostatistics world. The datasets used for the examples are also available, so that it is possible to work through the lessons and replicate the results.\n\n\nStatistical Modelling in Stata\nLecture notes, exercises and solutions for an introductory statistics course on basic statistical inference. The materials start with the basics and work up through introductory survival analysis.\n\n\nIntroduction to Stata\nA 67-page description of Stata, its key features and benefits, and other useful information.\n\n\nAn Introduction to Stata\nA series of video tutorials introducing Stata basics‚Äînavigating Stata's interface, inspecting and modifying data, and saving commands in a do-file.\n\n\nVisualizing data using Stata\nA series of videos for Stata graphics. These videos demonstrate how to create graphs such as histograms, box plots, bar graphs, scatterplots, and fitted regression lines, and they show how to customize the look of a graph.\n\n\nThe Stata Project-Oriented Guide\nA series of short tutorials covering the typical steps in a statistical project. The tutorials range from data management to automation with a dash of statistics and postestimation.\n\n\nSurvival Analysis with Stata\nLessons, programs, do-files, and a PDF book about survival analysis in Stata. (Updated June 2008)\n\n\nRegression with Stata\nThe Statistical Consulting Group at Academic Technology Services has created a ‚Äúweb book‚Äù covering a variety of topics on performing regression analysis with Stata. The book does not teach regression but gives examples showing how to use Stata for performing regression analysis. Written for Stata 7.\n\n\nWorkshops on ‚ÄúAudit trails, reproducibility and output processing‚Äù and ‚ÄúEffective use of Stata Graphics‚Äù\nWorkshop notes, Powerpoint presentations, data files, and do-files\n\n\ngologit2\nPrograms, readings, and documentation for generalized ordered logit and partial proportional-odds models for ordinal dependent variables (gologit2) and ordinal generalized linear models (oglm).\n\n\noglm\nAn introduction to Stata and various commands.\n\n\nAn Introduction to Stata\nMicroeconometrics class notes for use with Stata 10\n\n\nShort Guides to Microeconometrics (with Stata commands)\nWeekly video postings by StataCorp showing how to do common tasks in Stata.\n\n\nStata video tutorials\nNew to Stata? Sign up for the Ready, Set, Go Stata webinar. More experienced user? See the complete list of Stata webinars.\n\n\nFree Stata webinars\nNot Elsewhere Classified is the official Stata blog that has articles written by Stata developers and StataCorp staff on the use of Stata and other news related to the use of Stata.\n\n\nThe Stata Blog\nAnswers to the most frequently asked questions in statistics, data management, graphics, and operating system issues.\n\n\nStata Technical Support FAQs\nStatalist is a forum where over 40,000 Stata users from experts to neophytes maintain a lively dialogue about all things statistical and Stata.\n\n\nStatalist\nClassroom and web-based courses, on-site training courses, webinars, NetCourses, and more.\n\n\nStata training\nThe Stata Journal is a quarterly publication containing articles about statistics, data analysis, teaching methods, and effective use of Stata's language.\n\n\nStata Journal\nAlso see the Stata Technical Bulletin FAQ. Although the SJ superseded the STB, past STB issues contain valuable information. The FAQ includes information on how to obtain over the net the software associated with the published articles.\n\n\nVisual overview for creating graphs\nScroll through over 100 graphs that are broken out by category. Click on a graph to see the command that created it.\n\n\nDanish Short Course Materials\nDownload our cheat sheets for calling Python from Stata and our guide for working with dates and times in Stata.\n\n\n\n\n\n\n\n\n\nUseful blog posts\nAsjad Naqvi‚Äôs mapping guide for Stata part 1\nAsjad Naqvi‚Äôs mapping guide for Stata part 2\nA World Bank blog on mapping in Stata\n\n\nYoutube channels\nSebastian Wai‚Äôs channel\n\n\nEconometrics Academy from Ani Katchova"
  },
  {
    "objectID": "resources/regions-dotted-line.html",
    "href": "resources/regions-dotted-line.html",
    "title": "By request: dotted lines to indicate a region of interest",
    "section": "",
    "text": "I have been asked to show how we can add a dotted line to a map to indicate a particular region of interest.\nYou can download the do file that goes along with this example here."
  },
  {
    "objectID": "resources/regions-dotted-line.html#setup",
    "href": "resources/regions-dotted-line.html#setup",
    "title": "By request: dotted lines to indicate a region of interest",
    "section": "Setup",
    "text": "Setup\nFirst we need to set our working directory and load the data we will be using. We will be using the Roses and Wolf dataset and the NUTS coordinates dataset. These are the same ones that are in the lab 1 folder.\n\nclear all\nset more off\n\n# Set your own directory here\ncd \"/Users/jonathanjayes/Downloads/Lab-1/\"\n\n##¬†Dotted lines around one region\nIf we want to indicate one region that we are interested in on the map, we can use the line option in the spmap command. This will allow us to draw a line around the region we are interested in, and we can customize it to be a dotted line.\nIn order to save the coordinates of a specific region, we read in the coordinates file, and then use the keep command to keep only the coordinates of the region we are interested in. We then save this as a new file.\nThen, we read in the original dataset again, and draw a choropleth map as we did in the previous examples. We then add a line with the line command, and customize it somewhat. We also add a caption to explain it. Sadly it is difficult to make another legend in Stata, so we cannot add a coloured legend for the line.\n\n# First we want to keep the coordinates of a region we are interested in\nuse \"nutscoord.dta\", clear\n\n# Here 183 is the ID for Sydsverige, we can find this with the browse command\nkeep if _ID == 183\n\n# Save these coordinates as another file\nsave nutscoord_sydsverige, replace\n\n\n# Using the original dataset again\nuse regional_dataset, clear\n\n# We add a line with the \"line\" command and customize it somewhat\n# We also add a caption to explain it. Sadly it is difficult to make another legend\nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 1950 ///\n    & country == \"Sweden\", id(_ID) ///\n    line(data(\"nutscoord_sydsverige.dta\") size(2) color(red) pattern(shortdash)) ///\n    fcolor(Blues2) legend(pos(9)) legstyle(2) ///\n    title(\"Regional GDP per capita in Sweden - 1950\", size(medium)) ///\n    caption(\"Red dotted line indicates Sydsverige\") ///\n    osize(0.02 ..) ocolor(white ..) ///\n    clmethod(custom) clbreaks(5000 (1000) 9000)\n\nThis is what the map looks like:"
  },
  {
    "objectID": "resources/regions-dotted-line.html#dotted-lines-around-multiple-regions",
    "href": "resources/regions-dotted-line.html#dotted-lines-around-multiple-regions",
    "title": "By request: dotted lines to indicate a region of interest",
    "section": "Dotted lines around multiple regions",
    "text": "Dotted lines around multiple regions\nSimilarly, we can add a dotted line around multiple regions. We can do this by keeping the coordinates of multiple regions, and then adding a line for each of them. We can also add a caption to explain it.\n\n# Read in the coordinated file\nuse \"nutscoord.dta\", clear\n\n# Here we keep two regions\nkeep if _ID == 161 | _ID == 183\n\n# Save it as another file\nsave nutscoord_stockholm_sydsverige, replace\n\n# Going back to original dataset\nuse regional_dataset, clear\n\nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 1950 ///\n    & country == \"Sweden\", id(_ID) ///\n    line(data(\"nutscoord_stockholm_sydsverige.dta\") size(2) color(green) pattern(shortdash)) ///\n    fcolor(Blues2) legend(pos(9)) legstyle(2) ///\n    title(\"Regional GDP per capita in Sweden - 1950\", size(medium)) ///\n    caption(\"Green dotted line indicates Stockholm and Sydsverige\") ///\n    osize(0.02 ..) ocolor(white ..) ///\n    clmethod(custom) clbreaks(5000 (1000) 9000)"
  },
  {
    "objectID": "resources/adm-resources/ADM-prep.html",
    "href": "resources/adm-resources/ADM-prep.html",
    "title": "ADM-Data-Prep",
    "section": "",
    "text": "Ingest and collect together the data from here\n\nlibrary(tidyverse)\nlibrary(readxl)\n\nPrep: these are the years for each series.\n\nseries_dates &lt;- tribble(\n  ~category, ~early, ~late,\n  \"economy\", 2012, 2020,\n  \"population\", 2011, 2020,\n  \"health\", 2011, 2019,\n  \"education\", 2013, 2021,\n  \"labour_market\", 2012, 2021,\n  \"tourism\", 2013, 2020,\n  \"digital_economy_and_society\", 2012, 2021,\n  \"agriculture\", 2012, 2021,\n  \"transport\", 2012, 2020,\n  \"science_and_technology\", 2011, 2020\n)\n\nseries_dates &lt;- series_dates %&gt;% \n  pivot_longer(-category, values_to = \"year\") %&gt;% \n  mutate(sheet = str_c(category, \"_\", name)) %&gt;% \n  select(sheet, year)\n\nFunction to get data.\n\nget_data &lt;- function(f_name, sheet_name) {\n  message(\"Getting data from \", f_name)\n  \n  df &lt;- readxl::read_excel(f_name, range = cell_rows(1:333))\n  \n  df %&gt;%\n    select(-sortOrder) %&gt;%\n    pivot_longer(-c(\"Region\", \"Code\", \"Country\"), names_to = \"indicator\") %&gt;%\n    mutate(\n      # remove brackets\n      value = str_remove(value, \"\\\\(.*\"),\n      # remove spaces\n      value = str_remove_all(value, \" \"),\n    ) %&gt;%\n    mutate(value = case_when(\n      # replace pct sign\n      str_detect(value, \"%\") ~ parse_number(value) / 100,\n      # otherwise go numeric\n      TRUE ~ as.numeric(value)\n    )) %&gt;% \n    mutate(stat_domain = sheet_name)\n}\n\nGet files in this chunk.\n\nlist_of_files &lt;- list.files(here::here(\"resources\", \"adm-resources\"), pattern = \".xlsx\")\n\ntbl_of_files &lt;- list_of_files %&gt;% \n  as_tibble() %&gt;% \n  filter(!str_detect(value, \"regions_illustrated_excel.xlsx\"),\n  !str_detect(value, \"urbanization.xlsx\")) %&gt;% \n  mutate(file_path = here::here(\"resources/adm-resources/\", value),\n         value = str_remove(value, \"\\\\.xlsx\")) %&gt;% \n  rename(sheet = value)\n\ntbl_of_files &lt;- tbl_of_files %&gt;% \n  mutate(data = pmap(list(file_path, sheet), get_data))\n\ntbl_of_files &lt;- tbl_of_files %&gt;% \n  inner_join(series_dates)\n\ndf &lt;- tbl_of_files %&gt;% \n  unnest(data)\n\n\ndf &lt;- df %&gt;%\n  select(-c(sheet, file_path)) %&gt;%\n  mutate(\n    period = str_extract(stat_domain, \"early|late\"),\n    stat_domain = str_replace_all(stat_domain, \"_\", \" \"),\n    stat_domain = str_remove(stat_domain, \"early|late\"),\n    stat_domain = str_to_title(stat_domain),\n    stat_domain = str_squish(stat_domain),\n    indicator = str_squish(indicator)\n  ) %&gt;%\n  janitor::clean_names() \n\n# series_to_distinct &lt;- c(\n#   \"Population (persons)\",\n#   \"Population density (persons per square kilometre)\",\n#   \"Employment rate (% of population aged 20-64)\",\n#   \"Unemployment rate (% of labour force aged 15-74)\",\n#   \"Gross domestic product (PPS per inhabitant)\",\n#   \"Gross domestic product (PPS per inhabitant in % of the EU-27 average)\"\n# )\n\n\n# df_to_join &lt;- df %&gt;% \n#   filter(indicator %in% series_to_distinct) %&gt;% \n#   distinct(region, code, country, indicator, .keep_all = T)\n\n# df &lt;- df %&gt;% \n#   filter(!indicator %in% series_to_distinct) %&gt;% \n#   bind_rows(df_to_join)\n\ndf &lt;- df %&gt;% \n  arrange(code, stat_domain, indicator, period)\n\n\ndf %&gt;% write_rds(here::here(\"resources/adm-resources/regions_illustrated.rds\"), compress = \"gz\")\ndf %&gt;% \n  write_excel_csv(here::here(\"resources/adm-resources/regions_illustrated.csv\"))\n\ndf &lt;- readr::read_rds(\"resources/adm-resources/regions_illustrated.rds\")\n\ndf %&gt;% \n  write_excel_csv2(\"resources/adm-resources/regions_illustrated_excel.csv\")\n\nFix Norway names\n\ndf = df %&gt;% \nmutate(region = case_when(\n  str_detect(region, \"2 016\") ~ str_replace(region, \"2 016\", \"2016\"),\n  TRUE ~ region\n)) \n\nMake uniform with Roses and Wolf data\n\ndf_wide = df %&gt;% \nrename(nuts_code = code)  %&gt;% \nselect(-c(stat_domain, year)) %&gt;%\ndistinct() %&gt;%\ngroup_by(region, nuts_code, country, indicator, period) %&gt;%\nslice(1) %&gt;% \nungroup() %&gt;%\npivot_wider(names_from = indicator, values_from = value)  %&gt;% janitor::clean_names()  %&gt;% \nfilter(!is.na(nuts_code)) \n\ndf_wide %&gt;% \ncount(nuts_code, country, sort = T)\n\nshorten_var_names &lt;- function(df, max_length = 32) {\n  # Get the column names\n  names &lt;- colnames(df)\n  \n  # Abbreviate the names to the max_length\n  short_names &lt;- abbreviate(names, minlength = max_length)\n  \n  # Replace spaces with underscores\n  short_names &lt;- gsub(\" \", \"_\", short_names)\n  \n  # Remove consecutive underscores\n  short_names &lt;- gsub(\"_+\", \"_\", short_names)\n  \n  # If the name ends with an underscore, remove it\n  short_names &lt;- sub(\"_$\", \"\", short_names)\n  \n  # Manually truncate the names if they are still too long\n  short_names &lt;- substr(short_names, 1, max_length)\n  \n  # Rename the columns in the data frame\n  colnames(df) &lt;- short_names\n  \n  return(df)\n}\n\n# Apply the function to your data frame\ndf_wide &lt;- shorten_var_names(df_wide)\n\ndf_wide %&gt;%\nwrite_dta(here::here(\"resources\", \"stata\", \"eurostat_data_wide.dta\"), version = 14)\n\n\nshorten_var_names &lt;- function(names, max_length = 32) {\n  # Abbreviate the names to the max_length\n  short_names &lt;- abbreviate(names, minlength = max_length)\n  \n  # Replace spaces with underscores\n  short_names &lt;- gsub(\" \", \"_\", short_names)\n  \n  # Remove consecutive underscores\n  short_names &lt;- gsub(\"_+\", \"_\", short_names)\n  \n  # If the name ends with an underscore, remove it\n  short_names &lt;- sub(\"_$\", \"\", short_names)\n  \n  return(short_names)\n}\n\n# Your variable names\nvar_names &lt;- c(\"region\", \"nuts_code\", \"country\", \"period\", \n               \"adult_participation_in_education_and_training_percent_of_population_aged_25_64\", \n               \"air_transport_of_freight_1_000_tonnes_loaded_and_unloaded\", \n               \"air_transport_of_passengers_1_000_passengers_arrivals_and_depatures\")\n\n# Apply the function\nshort_var_names &lt;- shorten_var_names(var_names)\n\n# Print the shortened variable names\nprint(short_var_names)\n\n\nlibrary(haven)\n\nstata &lt;- read_dta(here::here(\"resources\", \n                                    \"adm-resources\", \n                                    \"RosesWolf_Regional_Fahad.dta\"))\n\ndf &lt;- readxl::read_excel(here::here(\"resources\", \n                                    \"adm-resources\", \n                                    \"urbanization.xlsx\"), skip = 3) %&gt;%\n  janitor::clean_names()\n\ndf &lt;- df %&gt;%\n  select(geo_codes, geo_labels, contains(\"pct\")) %&gt;% \n  rename_with(.cols = contains(\"pct\"), .fn = ~ str_c(.x, \"_2021\"))\n\ndf %&gt;% \n  rename(NUTS_CODE = geo_codes) %&gt;% \n  filter(NUTS_CODE %in% stata$nuts) %&gt;% \n  write_dta(here::here(\n    \"resources\",\n    \"adm-resources\",\n    \"urbanisation.dta\"\n  ))\n\nstata &lt;- stata %&gt;% \n  left_join(df, by = c(\"nuts\" = \"geo_codes\")) \n\nstata %&gt;%\n  filter(country == \"Italy\") %&gt;%\n  write_dta(here::here(\n    \"resources\",\n    \"adm-resources\",\n    \"RosesWolf_Regional_Added_pop_densiy.dta\"\n  ))\n\nCheck the shapefile\n\nlibrary(sf)\n\nshapefile &lt;- st_read(here::here(\"resources\", \"stata\", \"NUTS_RG_20M_2021_4326.shp\"))\n\nshapefile  %&gt;% \nfilter(LEVL_CODE == 2) %&gt;%\nrename(nuts_code = NUTS_ID) %&gt;%\nst_write(here::here(\"resources\", \"stata\", \"NUTS_RG_20M_2021_4326_LEVL_CODE_2.shp\"), append = F)\n\nshapefile %&gt;% \ncount(LEVL_CODE)\n\nshapefile %&gt;% \nfilter(LEVL_CODE == 2) %&gt;%\nggplot(aes(geometry = geometry)) + \n  geom_sf()"
  },
  {
    "objectID": "resources/adm-resources/ADM-prep.html#purpose",
    "href": "resources/adm-resources/ADM-prep.html#purpose",
    "title": "ADM-Data-Prep",
    "section": "",
    "text": "Ingest and collect together the data from here\n\nlibrary(tidyverse)\nlibrary(readxl)\n\nPrep: these are the years for each series.\n\nseries_dates &lt;- tribble(\n  ~category, ~early, ~late,\n  \"economy\", 2012, 2020,\n  \"population\", 2011, 2020,\n  \"health\", 2011, 2019,\n  \"education\", 2013, 2021,\n  \"labour_market\", 2012, 2021,\n  \"tourism\", 2013, 2020,\n  \"digital_economy_and_society\", 2012, 2021,\n  \"agriculture\", 2012, 2021,\n  \"transport\", 2012, 2020,\n  \"science_and_technology\", 2011, 2020\n)\n\nseries_dates &lt;- series_dates %&gt;% \n  pivot_longer(-category, values_to = \"year\") %&gt;% \n  mutate(sheet = str_c(category, \"_\", name)) %&gt;% \n  select(sheet, year)\n\nFunction to get data.\n\nget_data &lt;- function(f_name, sheet_name) {\n  message(\"Getting data from \", f_name)\n  \n  df &lt;- readxl::read_excel(f_name, range = cell_rows(1:333))\n  \n  df %&gt;%\n    select(-sortOrder) %&gt;%\n    pivot_longer(-c(\"Region\", \"Code\", \"Country\"), names_to = \"indicator\") %&gt;%\n    mutate(\n      # remove brackets\n      value = str_remove(value, \"\\\\(.*\"),\n      # remove spaces\n      value = str_remove_all(value, \" \"),\n    ) %&gt;%\n    mutate(value = case_when(\n      # replace pct sign\n      str_detect(value, \"%\") ~ parse_number(value) / 100,\n      # otherwise go numeric\n      TRUE ~ as.numeric(value)\n    )) %&gt;% \n    mutate(stat_domain = sheet_name)\n}\n\nGet files in this chunk.\n\nlist_of_files &lt;- list.files(here::here(\"resources\", \"adm-resources\"), pattern = \".xlsx\")\n\ntbl_of_files &lt;- list_of_files %&gt;% \n  as_tibble() %&gt;% \n  filter(!str_detect(value, \"regions_illustrated_excel.xlsx\"),\n  !str_detect(value, \"urbanization.xlsx\")) %&gt;% \n  mutate(file_path = here::here(\"resources/adm-resources/\", value),\n         value = str_remove(value, \"\\\\.xlsx\")) %&gt;% \n  rename(sheet = value)\n\ntbl_of_files &lt;- tbl_of_files %&gt;% \n  mutate(data = pmap(list(file_path, sheet), get_data))\n\ntbl_of_files &lt;- tbl_of_files %&gt;% \n  inner_join(series_dates)\n\ndf &lt;- tbl_of_files %&gt;% \n  unnest(data)\n\n\ndf &lt;- df %&gt;%\n  select(-c(sheet, file_path)) %&gt;%\n  mutate(\n    period = str_extract(stat_domain, \"early|late\"),\n    stat_domain = str_replace_all(stat_domain, \"_\", \" \"),\n    stat_domain = str_remove(stat_domain, \"early|late\"),\n    stat_domain = str_to_title(stat_domain),\n    stat_domain = str_squish(stat_domain),\n    indicator = str_squish(indicator)\n  ) %&gt;%\n  janitor::clean_names() \n\n# series_to_distinct &lt;- c(\n#   \"Population (persons)\",\n#   \"Population density (persons per square kilometre)\",\n#   \"Employment rate (% of population aged 20-64)\",\n#   \"Unemployment rate (% of labour force aged 15-74)\",\n#   \"Gross domestic product (PPS per inhabitant)\",\n#   \"Gross domestic product (PPS per inhabitant in % of the EU-27 average)\"\n# )\n\n\n# df_to_join &lt;- df %&gt;% \n#   filter(indicator %in% series_to_distinct) %&gt;% \n#   distinct(region, code, country, indicator, .keep_all = T)\n\n# df &lt;- df %&gt;% \n#   filter(!indicator %in% series_to_distinct) %&gt;% \n#   bind_rows(df_to_join)\n\ndf &lt;- df %&gt;% \n  arrange(code, stat_domain, indicator, period)\n\n\ndf %&gt;% write_rds(here::here(\"resources/adm-resources/regions_illustrated.rds\"), compress = \"gz\")\ndf %&gt;% \n  write_excel_csv(here::here(\"resources/adm-resources/regions_illustrated.csv\"))\n\ndf &lt;- readr::read_rds(\"resources/adm-resources/regions_illustrated.rds\")\n\ndf %&gt;% \n  write_excel_csv2(\"resources/adm-resources/regions_illustrated_excel.csv\")\n\nFix Norway names\n\ndf = df %&gt;% \nmutate(region = case_when(\n  str_detect(region, \"2 016\") ~ str_replace(region, \"2 016\", \"2016\"),\n  TRUE ~ region\n)) \n\nMake uniform with Roses and Wolf data\n\ndf_wide = df %&gt;% \nrename(nuts_code = code)  %&gt;% \nselect(-c(stat_domain, year)) %&gt;%\ndistinct() %&gt;%\ngroup_by(region, nuts_code, country, indicator, period) %&gt;%\nslice(1) %&gt;% \nungroup() %&gt;%\npivot_wider(names_from = indicator, values_from = value)  %&gt;% janitor::clean_names()  %&gt;% \nfilter(!is.na(nuts_code)) \n\ndf_wide %&gt;% \ncount(nuts_code, country, sort = T)\n\nshorten_var_names &lt;- function(df, max_length = 32) {\n  # Get the column names\n  names &lt;- colnames(df)\n  \n  # Abbreviate the names to the max_length\n  short_names &lt;- abbreviate(names, minlength = max_length)\n  \n  # Replace spaces with underscores\n  short_names &lt;- gsub(\" \", \"_\", short_names)\n  \n  # Remove consecutive underscores\n  short_names &lt;- gsub(\"_+\", \"_\", short_names)\n  \n  # If the name ends with an underscore, remove it\n  short_names &lt;- sub(\"_$\", \"\", short_names)\n  \n  # Manually truncate the names if they are still too long\n  short_names &lt;- substr(short_names, 1, max_length)\n  \n  # Rename the columns in the data frame\n  colnames(df) &lt;- short_names\n  \n  return(df)\n}\n\n# Apply the function to your data frame\ndf_wide &lt;- shorten_var_names(df_wide)\n\ndf_wide %&gt;%\nwrite_dta(here::here(\"resources\", \"stata\", \"eurostat_data_wide.dta\"), version = 14)\n\n\nshorten_var_names &lt;- function(names, max_length = 32) {\n  # Abbreviate the names to the max_length\n  short_names &lt;- abbreviate(names, minlength = max_length)\n  \n  # Replace spaces with underscores\n  short_names &lt;- gsub(\" \", \"_\", short_names)\n  \n  # Remove consecutive underscores\n  short_names &lt;- gsub(\"_+\", \"_\", short_names)\n  \n  # If the name ends with an underscore, remove it\n  short_names &lt;- sub(\"_$\", \"\", short_names)\n  \n  return(short_names)\n}\n\n# Your variable names\nvar_names &lt;- c(\"region\", \"nuts_code\", \"country\", \"period\", \n               \"adult_participation_in_education_and_training_percent_of_population_aged_25_64\", \n               \"air_transport_of_freight_1_000_tonnes_loaded_and_unloaded\", \n               \"air_transport_of_passengers_1_000_passengers_arrivals_and_depatures\")\n\n# Apply the function\nshort_var_names &lt;- shorten_var_names(var_names)\n\n# Print the shortened variable names\nprint(short_var_names)\n\n\nlibrary(haven)\n\nstata &lt;- read_dta(here::here(\"resources\", \n                                    \"adm-resources\", \n                                    \"RosesWolf_Regional_Fahad.dta\"))\n\ndf &lt;- readxl::read_excel(here::here(\"resources\", \n                                    \"adm-resources\", \n                                    \"urbanization.xlsx\"), skip = 3) %&gt;%\n  janitor::clean_names()\n\ndf &lt;- df %&gt;%\n  select(geo_codes, geo_labels, contains(\"pct\")) %&gt;% \n  rename_with(.cols = contains(\"pct\"), .fn = ~ str_c(.x, \"_2021\"))\n\ndf %&gt;% \n  rename(NUTS_CODE = geo_codes) %&gt;% \n  filter(NUTS_CODE %in% stata$nuts) %&gt;% \n  write_dta(here::here(\n    \"resources\",\n    \"adm-resources\",\n    \"urbanisation.dta\"\n  ))\n\nstata &lt;- stata %&gt;% \n  left_join(df, by = c(\"nuts\" = \"geo_codes\")) \n\nstata %&gt;%\n  filter(country == \"Italy\") %&gt;%\n  write_dta(here::here(\n    \"resources\",\n    \"adm-resources\",\n    \"RosesWolf_Regional_Added_pop_densiy.dta\"\n  ))\n\nCheck the shapefile\n\nlibrary(sf)\n\nshapefile &lt;- st_read(here::here(\"resources\", \"stata\", \"NUTS_RG_20M_2021_4326.shp\"))\n\nshapefile  %&gt;% \nfilter(LEVL_CODE == 2) %&gt;%\nrename(nuts_code = NUTS_ID) %&gt;%\nst_write(here::here(\"resources\", \"stata\", \"NUTS_RG_20M_2021_4326_LEVL_CODE_2.shp\"), append = F)\n\nshapefile %&gt;% \ncount(LEVL_CODE)\n\nshapefile %&gt;% \nfilter(LEVL_CODE == 2) %&gt;%\nggplot(aes(geometry = geometry)) + \n  geom_sf()"
  },
  {
    "objectID": "resources/lab-1-slides.html",
    "href": "resources/lab-1-slides.html",
    "title": "Lab 1: Slides on Lab Paper",
    "section": "",
    "text": "Here is a link to the slides that we spoke through in the lab session today, detailing what is expected for the lab paper.\nDownload them at the link below the image.\n\n\n\nLab 1 Slides"
  },
  {
    "objectID": "labs/sigma-convergence.html",
    "href": "labs/sigma-convergence.html",
    "title": "Sigma Convergence",
    "section": "",
    "text": "I received a request to calculate and plot sigma convergence for Sweden using Stata.\nFor a bit of background, from your textbook, the chapter called ‚ÄúFrom Empire to Republic‚Äù by Max-Stephan Schulze, we have the following:\nWe can calculate the population weighted coefficient of variation as follows in Stata:"
  },
  {
    "objectID": "labs/sigma-convergence.html#setup",
    "href": "labs/sigma-convergence.html#setup",
    "title": "Sigma Convergence",
    "section": "Setup",
    "text": "Setup\n\nclear all\n\n# Set your working directory and read in the data\ncd \"/Users/jonathanjayes/Downloads/Lab-1\"\n\nuse \"regional_dataset\", clear\n \n# Select country of interest\nkeep if country == \"Sweden\"\n# Choose time period\nkeep if year &gt;= 1950\n# xtset tells Stata we will do time series operations\nxtset _ID year"
  },
  {
    "objectID": "labs/sigma-convergence.html#calculating-the-coefficient-of-variation",
    "href": "labs/sigma-convergence.html#calculating-the-coefficient-of-variation",
    "title": "Sigma Convergence",
    "section": "Calculating the coefficient of variation",
    "text": "Calculating the coefficient of variation\nThe coefficient of variation is a measure of relative variability. It is calculated as the ratio of the standard deviation to the mean. In this case, we are calculating the coefficient of variation of GDP per capita across regions in Sweden for each year in the dataset since 1950. The formula is:\n\\[CV_t^w = \\frac{\\sigma_t^{y,w}}{\\overline{y_t^w}}\\]\nWhere: - \\(CV_t^w\\) is the population-weighted coefficient of variation at time \\(t\\)\n\n\\(\\sigma_t^{y,w} = \\sqrt{\\sum_{i=1}^{N}w_{i,t}(y_{i,t} - \\overline{y_t^w})^2}\\) is the population-weighted standard deviation of GDP per capita levels, and\n\\(\\overline{y_t^w} = \\sum_{i=1}^{N}w_{i,t}y_{i,t}\\) is the population-weighted mean GDP per capita\n\nWe can calculate this in Stata using the following code:\n\n# For population-weighted sigma convergence\n# Step 1: Calculate population weights for each region in each year\nbysort year: egen total_pop_year = sum(regional_population)\ngen pop_weight = regional_population / total_pop_year\n\n# Step 2: Calculate weighted mean GDP per capita for each year\nbysort year: egen w_mean_gdp = sum(regional_gdp_cap_1990 # pop_weight)\n\n# Step 3: Calculate weighted variance and then weighted standard deviation\ngen sq_dev = (regional_gdp_cap_1990 - w_mean_gdp)^2\nbysort year: egen w_var_gdp = sum(sq_dev # pop_weight)\ngen w_sd_gdp = sqrt(w_var_gdp)\n\n# Step 4: Calculate population-weighted coefficient of variation\ngen w_cv_gdp = w_sd_gdp / w_mean_gdp"
  },
  {
    "objectID": "labs/sigma-convergence.html#plotting-the-coefficient-of-variation",
    "href": "labs/sigma-convergence.html#plotting-the-coefficient-of-variation",
    "title": "Sigma Convergence",
    "section": "Plotting the coefficient of variation",
    "text": "Plotting the coefficient of variation\nIt is a stylistic choice to plot the coefficient of variation as a line graph with points, and to add a linear trend line to show the overall trend. This is done with the twoway command in Stata. You can also just use a scatter plot and a line of best fit if you prefer.\nWhen plotting this over time, a downward trend in w_cv_gdp would indicate sigma convergence (decreasing inequality), while an upward trend would indicate sigma divergence (increasing inequality).\n\n# Step 5: Create the weighted sigma convergence plot\ntwoway (connected w_cv_gdp year, lcolor(blue) mcolor(blue) msymbol(circle)) ///\n       (lfit w_cv_gdp year, lcolor(red)) ///\n       , title(\"Population-weighted Sigma-convergence\") subtitle(\"Sweden 1950 - 2015\") ///\n       ytitle(\"Population-weighted CV of GDP per capita\") xtitle(\"Year\") ///\n       legend(label(1 \"Annual weighted CV\") label(2 \"Linear trend\"))"
  },
  {
    "objectID": "labs/sigma-convergence.html#compare-to-unweighted-coefficient-of-variation",
    "href": "labs/sigma-convergence.html#compare-to-unweighted-coefficient-of-variation",
    "title": "Sigma Convergence",
    "section": "Compare to unweighted coefficient of variation",
    "text": "Compare to unweighted coefficient of variation\nFinally, we can compare the population-weighted coefficient of variation to the unweighted coefficient of variation. The unweighted coefficient of variation is calculated in the same way as the weighted version, but without the population weights. We can then plot both measures on the same graph for comparison.\n\n# Step 6: Compare weighted and unweighted measures\n# First calculate the unweighted CV as before\nbysort year: egen mean_gdp = mean(regional_gdp_cap_1990)\nbysort year: egen sd_gdp = sd(regional_gdp_cap_1990)\ngen cv_gdp = sd_gdp / mean_gdp\n\n# Then plot both measures for comparison\ntwoway (connected w_cv_gdp year, lcolor(blue) mcolor(blue) msymbol(circle)) ///\n       (connected cv_gdp year, lcolor(red) mcolor(red) msymbol(diamond)) ///\n       , title(\"Sigma-convergence: Weighted vs Unweighted\") subtitle(\"Germany 1950 - 2015\") ///\n       ytitle(\"Coefficient of variation\") xtitle(\"Year\") ///\n       legend(label(1 \"Population-weighted CV\") label(2 \"Unweighted CV\"))"
  },
  {
    "objectID": "labs/sigma-convergence.html#relationship-with-beta-convergence",
    "href": "labs/sigma-convergence.html#relationship-with-beta-convergence",
    "title": "Sigma Convergence",
    "section": "Relationship with Beta Convergence",
    "text": "Relationship with Beta Convergence\nBeta (\\(\\beta\\)) convergence is necessary but not sufficient for sigma convergence. Mathematically, this relationship can be expressed as:\n\\[\\sigma_{t+1}^2 = (1-\\beta)^2\\sigma_t^2 + \\sigma_{\\varepsilon}^2\\]\nWhere: - \\(\\beta\\) is the beta convergence coefficient - \\(\\sigma_{\\varepsilon}^2\\) is the variance of random shocks\nThis equation shows that even with strong beta convergence (high \\(\\beta\\)), sigma convergence may not occur if random shocks (\\(\\sigma_{\\varepsilon}^2\\)) are sufficiently large."
  },
  {
    "objectID": "labs/Lab-hints-graphs.html",
    "href": "labs/Lab-hints-graphs.html",
    "title": "Stata Lab Hints: Basic Graphs",
    "section": "",
    "text": "For your projects, you can use any kind of plots in addition to the maps we have learned to draw in the first lab.\nIn this little note, I take you through drawing scatter plots, line plots and bar plots.\nI have taken inspiration from Germ√°n Rodr√≠guez‚Äô notes."
  },
  {
    "objectID": "labs/Lab-hints-graphs.html#intro",
    "href": "labs/Lab-hints-graphs.html#intro",
    "title": "Stata Lab Hints: Basic Graphs",
    "section": "",
    "text": "For your projects, you can use any kind of plots in addition to the maps we have learned to draw in the first lab.\nIn this little note, I take you through drawing scatter plots, line plots and bar plots.\nI have taken inspiration from Germ√°n Rodr√≠guez‚Äô notes."
  },
  {
    "objectID": "labs/Lab-hints-graphs.html#graphing",
    "href": "labs/Lab-hints-graphs.html#graphing",
    "title": "Stata Lab Hints: Basic Graphs",
    "section": "Graphing",
    "text": "Graphing\nLet‚Äôs get started!\n\nLoad data\nAs before we will use the regional_dataset.dta file saved in our working directories.\n\ncd \"C:/Users/User/Documents/Recon/EOSE09/stata_files/\" # set your directory\nuse regional_dataset, clear\n\n\n\nScatter plots\nScatterplots show the extent of correlation between two variables (on the x- and y-axes). Including colour and shaped markers can allow us to compare groups of data.\nWe can draw a basic scatter plot in stata:\n\ngraph twoway scatter regional_gdp_cap_1990 year if region == \"Stockholm\"\n\n\nWe can add a line of best fit with a quadratic curve by using the qfit or quadratic fit command. Notice that we are layering two plots on one set of axes (the scatter plot and the line of best fit) with the twoway command. In addition we add some labels and format the y-axis.\n\ngraph twoway (scatter regional_gdp_cap_1990 year if region == \"Stockholm\") ///\n             (qfit regional_gdp_cap_1990 year if region == \"Stockholm\") ///\n                     ,legend(order(1 \"Stockholm\" 2 \"Quadratic fit\")) ///\n                     ylabel(,format(%9.0fc)) ///\n                     ytitle(Regional GDP per capita in 1990 International Dollars)\n\n\n\n\nLine plots\nLine plots are great for showing trends over time.\nWe can draw a basic line plot with the line command in Stata:\n\nline regional_gdp_cap_1990 year if region == \"Stockholm\"         \n\n\nAgain we can use the twoway command to plot different regions on our line plot. The legend provided by Stata is not super helpful, either in its information or placement.\n\ngraph twoway (line regional_gdp_cap_1990 year if region == \"Stockholm\") ///\n             (line regional_gdp_cap_1990 year if region == \"Sydsverige\") ///\n                   (line regional_gdp_cap_1990 year if region == \"V√§stsverige\")\n\n\nWe can change that by specifying labels in our legend with the legend option and placement with the pos option.\n\ngraph twoway (line regional_gdp_cap_1990 year if region == \"Stockholm\") ///\n             (line regional_gdp_cap_1990 year if region == \"Sydsverige\") ///\n                   (line regional_gdp_cap_1990 year if region == \"V√§stsverige\") ///\n                  ,legend(order(1 \"Stockholm\" 2 \"Sydsverige\" 3 \"V√§stsverige\") /// \n                  ring(0) pos(5)) ylabel(,format(%9.0fc))\n\n\n\n\nBar plots\nBar plots are a great way to show compaisons between groups.\nFirst we create a variable to select three regions in our plot with the gen command:\n\ngen include_in_bar = .\nreplace include_in_bar = 1 if region == \"London Counties\" | region == \"Wales\" | region == \"Northern Ireland\" \n\nThen we can draw a basic bar graph. Here the variables we want to compare are named before the if command specifies which segment of the data we want to use. The over option tells Stata that we want to use of bar graph to compare different regions.\n\ngraph bar employment_share_agriculture employment_share_industry ///\nemployment_share_services if include_in_bar == 1 & year == 1900 ///\n,over(region) \n\n\nWe can turn this into a stacked bar graph that makes it easier to compare the proportions between regions (as by definition they must sum to 100 percent) with the stack option.\n\ngraph bar employment_share_agriculture employment_share_industry ///\nemployment_share_services if include_in_bar == 1 & year == 1900 ///\n,over(region) stack \n\n\nFinally we can add some nice labels, a y-axis that makes sense and a title:\n\ngraph bar employment_share_agriculture employment_share_industry ///\nemployment_share_services if include_in_bar == 1 & year == 1900 ///\n    ,over(region) stack title(Employment Composition in 1900) ///\n    legend(order(1 \"Agriculture\" 2 \"Industry\" 3 \"Services\")) ///\n    ylab(0 \"0\" .25 \"25\" .5 \"50\" .75 \"75\" 1 \"100\") ///\n    ytitle(\"Employment share (percent)\")\n\n\nI hope that this is useful!"
  },
  {
    "objectID": "labs/Lab-hints-graphs.html#tip-on-executing-code-in-.do-files",
    "href": "labs/Lab-hints-graphs.html#tip-on-executing-code-in-.do-files",
    "title": "Stata Lab Hints: Basic Graphs",
    "section": "Tip on executing code in .do files",
    "text": "Tip on executing code in .do files\nTo execute a command in Stata you can highlight the code and then run it with the execute section button, or click ctrl + d on windows or cmd + d on mac.\n\nIf you choose to copy the code from the .do file into the console, you need to remove the linebreak indicators (///) which tell Stata that the code line continues after the break."
  },
  {
    "objectID": "labs/Lab-2-exercises.html",
    "href": "labs/Lab-2-exercises.html",
    "title": "Stata Lab 2: Exercises",
    "section": "",
    "text": "Set your working directory and read in the data\n\nclear all\nset more off\ncd \"/Users/jonathanjayes/Downloads/Lab-1\" // set your directory\n\n# Read in the data\nuse regional_dataset, clear"
  },
  {
    "objectID": "labs/Lab-2-exercises.html#setup",
    "href": "labs/Lab-2-exercises.html#setup",
    "title": "Stata Lab 2: Exercises",
    "section": "",
    "text": "Set your working directory and read in the data\n\nclear all\nset more off\ncd \"/Users/jonathanjayes/Downloads/Lab-1\" // set your directory\n\n# Read in the data\nuse regional_dataset, clear"
  },
  {
    "objectID": "labs/Lab-2-exercises.html#question-1",
    "href": "labs/Lab-2-exercises.html#question-1",
    "title": "Stata Lab 2: Exercises",
    "section": "Question 1",
    "text": "Question 1\nMake a subplot map that compares relative regional GDP per capita in 4 different years and join the maps together (your chosen region).\nTry and make it such that there is only one legend in one subplot\n\n# loop through maps without \nforeach i of numlist 1950 (10) 1970 {\n        spmap relative_gdp_cap_country using \"nutscoord.dta\" if year == `i' & country == \"France\", id(_ID) ///\n            fcolor(YlOrRd) legend(pos(5)) legstyle(1) ///\n            osize(0.02 ..) ocolor(white ..) ///\n            clmethod(custom) clbreaks(0 0.8 1 1.2 3) ///\n            name(relative_gdp_cap_map_`i', replace) ///\n            title(`i') ///\n            leg(off)\n}\n\nspmap relative_gdp_cap_country using \"nutscoord.dta\" if year == 1980 & country == \"France\", id(_ID) ///\n            fcolor(YlOrRd) legend(pos(5)) legstyle(1) ///\n            osize(0.02 ..) ocolor(white ..) ///\n            clmethod(custom) clbreaks(0 0.8 1 1.2 3) ///\n            name(relative_gdp_cap_map_1980, replace) ///\n            title(1980) ///\n            legend(pos(9))\n\ngraph combine relative_gdp_cap_map_1950 relative_gdp_cap_map_1960 relative_gdp_cap_map_1970 relative_gdp_cap_map_1980, title(\"Relative regional GDP per capita\")\n\n\n\n\nOutput"
  },
  {
    "objectID": "labs/Lab-2-exercises.html#question-2",
    "href": "labs/Lab-2-exercises.html#question-2",
    "title": "Stata Lab 2: Exercises",
    "section": "Question 2",
    "text": "Question 2\nMake a beta convergence plot (your region of choice) Add labels to the plot for three of your regions\nSee this post for more information on beta convergence."
  },
  {
    "objectID": "labs/Lab-2-exercises.html#question-3",
    "href": "labs/Lab-2-exercises.html#question-3",
    "title": "Stata Lab 2: Exercises",
    "section": "Question 3",
    "text": "Question 3\nMake a map that highlights a region that you want to discuss with a dotted line (any region)\nSee this post for more information on how to make a map with a dotted line to highlight a region."
  },
  {
    "objectID": "labs/Lab-1-exercises.html",
    "href": "labs/Lab-1-exercises.html",
    "title": "Stata Lab 1: Exercises",
    "section": "",
    "text": "üìà Stata is a powerful software for data analysis and visualization. This exercise set aims to showcase the capabilities of Stata in creating informative graphics üìä. We will be using data on the UK and Sweden üá¨üáßüá∏üá™ to demonstrate the process of making a map üó∫Ô∏è, a combined plot üìà, and a summary table üìä. The purpose of this accompanying post is to provide a step-by-step guide üí° on how to use Stata‚Äôs built-in tools üõ†Ô∏è to create effective visualizations üé® that help communicate insights from your data üôå."
  },
  {
    "objectID": "labs/Lab-1-exercises.html#purpose",
    "href": "labs/Lab-1-exercises.html#purpose",
    "title": "Stata Lab 1: Exercises",
    "section": "",
    "text": "üìà Stata is a powerful software for data analysis and visualization. This exercise set aims to showcase the capabilities of Stata in creating informative graphics üìä. We will be using data on the UK and Sweden üá¨üáßüá∏üá™ to demonstrate the process of making a map üó∫Ô∏è, a combined plot üìà, and a summary table üìä. The purpose of this accompanying post is to provide a step-by-step guide üí° on how to use Stata‚Äôs built-in tools üõ†Ô∏è to create effective visualizations üé® that help communicate insights from your data üôå."
  },
  {
    "objectID": "labs/Lab-1-exercises.html#get-started",
    "href": "labs/Lab-1-exercises.html#get-started",
    "title": "Stata Lab 1: Exercises",
    "section": "Get started",
    "text": "Get started\nAs before, we want to load our data from the regional_dataset.dta file.\n\ncd \"C:/Users/User/Documents/Recon/EOSE09/stata_files/\" # set your directory\nuse regional_dataset, clear\n\nformat regional_gdp_cap_1990 %12.0fc # 12 numbers left of the decimal point; 0 to the right; commas to denote thousands\n\n\nQuestion 1\n‚Ä¢ Map of GDP per capita in Sweden and the United Kingdom in 1990\nThere are two ways to do this.\n\nMethod 1: use their locations on a map\nFirst we create a variable for if the country is Sweden or the UK.\nThen we use this vairable to create the map with an if statement.\nNote that you need to change your breaks in order to display the full range of data.\n\ngen uk_sv = .\nreplace uk_sv = 1 if country == \"Sweden\" | country == \"United Kingdom\"\n\nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 1990 & uk_sv == 1, id(_ID) fcolor(Blues2) legend(pos(9)) legstyle(2) \n    title(\"Regional GDP per Capita - 1990\", size(medium)) \n    clmethod(custom) clbreaks(0 12000 15000 16000 17000 18000 21000)\n\n\n\n\nMethod 2: graph combine\nHere we make two graphs with the same scale, but only the graph for Sweden includes a legend.\nThe UK map has the legend suppressed with the leg(off) command.\nThen we name each, and combine it with a title in the final step.\n\nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 1990 & country == \"United Kingdom\", id(_ID) fcolor(Blues2) ///\n    title(\"United Kingdom\", size(medium)) ///\n    name(UK_GDP_1990, replace) ///\n    leg(off)\n    \nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 1990 & country == \"Sweden\", id(_ID) fcolor(Blues2) legend(pos(10)) legstyle(2) ///\n    title(\"Sweden\", size(medium)) ///\n    clmethod(custom) clbreaks(0 12000 15000 16000 17000 18000 22000) ///\n    name(SV_GDP_1990, replace)\n    \ngraph combine UK_GDP_1990 SV_GDP_1990, graphregion(color(white)) ///\n    title(\"Regional GDP per Capita - 1990\") ///\n    note(Source: Ros√©s-Wolf (2020), size(small) position(5)) ///\n    scheme(s2mono)\n\n\n\n\n\nQuestion 2\n‚Ä¢ Map of share of employment in industry in 2010 across the whole dataset\nFirst we must ask where the cutoffs should be in the legend.\nWe can draw a density plot to find out.\n\nkdensity employment_share_industry if year == 2010\n\n\nNext we use this information to create breaks between 10 percent and 40 percent, where the bulk of the distribution is.\n\nspmap employment_share_industry using \"nutscoord.dta\" if year == 2010, id(_ID) fcolor(Greens) legstyle(2) ///\n    title(\"Employment Share Industry - 2010\", size(large)) ///\n    osize(0.02 ..) ocolor(white ..) ///\n    clmethod(custom) clbreaks(0 (0.1) 0.5) ///\n    legend(pos(9) size(medium) rowgap(1.5) label(6 \"40-50 %\") label(5 \"30-40 %\") ///\n    label(4 \"20-30 %\") label(3 \"10-20 %\") label(2 \"0-10 %\") label(1 \"No Data\")) ///\n    ndfcolor(gray) ndocolor(white ..) ndsize(0.02 ..)\n\n\n\n\nQuestion 3\n‚Ä¢ Map of share of employment in services in 1950 in Scandinavia\nGenerate variable for Scandnavian countries\n\ngen scandinavia = .\nreplace scandinavia = 1 if country == \"Sweden\" | country == \"Denmark\" | country == \"Norway\"\n\nCheck where the weight of the distribution is\n\nkdensity employment_share_services if year == 1950 & scandinavia == 1\n\n\n\nspmap employment_share_services using \"nutscoord.dta\" if year == 1950 & scandinavia == 1, id(_ID) fcolor(Reds) legstyle(2) ///\n    title(\"Employment Share Services - 1950\", size(large)) ///\n    osize(0.02 ..) ocolor(white ..) ///\n    clmethod(custom) clbreaks(0 (0.1) .7) ///\n    legend(pos(9) size(medium) rowgap(1.5) label(8 \"60-70 %\") label(7 \"50-60 %\") ///\n    label(6 \"40-50 %\") label(5 \"30-40 %\") ///\n    label(4 \"20-30 %\") label(3 \"10-20 %\") label(2 \"0-10 %\") label(1 \"No Data\")) ///\n    ndfcolor(gray) ndocolor(white ..) ndsize(0.02 ..)\n\n\n\n\nQuestion 4\nScatterplot of GDP per capita in 1990 dollars on the x-axis and share of employment in services on the y-axis for the year 2015. Make the colour of the points on the scatter plot show what country it is.\nHere we need an additional package to help us.\n\nssc install sepscatter\n\nBasic scatter plot\n\nsepscatter regional_gdp_cap_1990 employment_share_services if year == 2015, separate(country)\n\n\nAdd in linear regression line\n\nsepscatter regional_gdp_cap_1990 employment_share_services if year == 2015, separate(country) addplot(lfit regional_gdp_cap_1990 employment_share_services if regional_gdp_cap_1990 &gt; 0.5)\n\n\n\n\nQuestion 5\n‚Ä¢ Make a table of the mean GDP per capita by country in 2000. Export it with the Outreg2 command.\nRemember how we made a national GDP per capita variable\n\nbysort country year: egen national_gdp_1990 = total(regional_gdp_1990)\nbysort country year: egen national_population = total(regional_population)\ngen national_gdp_cap_1990 = national_gdp_1990 / national_population\n\nNow format this number\n\nformat national_gdp_cap_1990 %12.0fc # 12 numbers left of the decimal point; 0 to the right; commas to denote thousands\n\nWe could do this with Outreg2. We can also just keep the data that we want, and export it as a csv file. This is quick and dirty, but it works.\n\nkeep country national_gdp_cap_1990 year\n\nkeep if year == 2000\n\nduplicates drop\n\nexport delimited using national_gdp_cap_1990.csv, replace \n\nOpen this file in excel Go to the data tab, select text to columns, delimited, comma, and then format it.\nWe can make a nice little bar graph with in Excel too."
  },
  {
    "objectID": "labs/Lab-Q-and-A.html",
    "href": "labs/Lab-Q-and-A.html",
    "title": "Q and A",
    "section": "",
    "text": "In the article below I share the help that I provided to students who asked about manual colour palettes in Stata and how to calculate Moran‚Äôs I in Stata, a measure of spatial autocorrelation."
  },
  {
    "objectID": "labs/Lab-Q-and-A.html#purpose",
    "href": "labs/Lab-Q-and-A.html#purpose",
    "title": "Q and A",
    "section": "",
    "text": "In the article below I share the help that I provided to students who asked about manual colour palettes in Stata and how to calculate Moran‚Äôs I in Stata, a measure of spatial autocorrelation."
  },
  {
    "objectID": "labs/Lab-Q-and-A.html#choose-specific-colours-for-choropleth",
    "href": "labs/Lab-Q-and-A.html#choose-specific-colours-for-choropleth",
    "title": "Q and A",
    "section": "Choose specific colours for choropleth",
    "text": "Choose specific colours for choropleth\nQ: Could you help me with the code and command I need to use in Stata to change the color of a specific region in a choropleth map?\nA: Sure! We can choose our own colours for a palette with their RGB codes\n\n\n\n\n\n\nRGB colour codes\n\n\n\nWhat are RGB Color Codes?\nRGB color codes are a set of numerical values used to specify colors in digital devices such as computers, televisions, and smartphones. RGB stands for red, green, and blue, which are the primary colors used in digital displays. Each color is represented by a value between 0 and 255, with 0 indicating no intensity and 255 indicating maximum intensity.\nUsing RGB Color Codes\nRGB color codes are commonly used to specify different types of colors, including those used in web design, graphic design, and data visualization. For example, the color ‚Äúmidnightblue‚Äù can be represented by the hex code 191970 or the RGB values (25, 25, 112). In this case, the first two digits of the hex code represent the intensity of red, the second two digits represent green, and the last two digits represent blue. Similarly, the RGB values represent the intensity of red, green, and blue, respectively.\nIn data visualization, RGB color codes are often used to create choropleth maps that display different colors based on the value of a particular variable in a specific region. By using RGB color codes, users can create maps that are visually appealing and easy to interpret.\n\n\nFirst you can choose your colours by Googling a colour that you like and copying across it‚Äôs rgb code:\n\n\n\nGoogle colours\n\n\nIn this case we want three colours for three different groups. Let‚Äôs choose some from the Okabe-Ito palette.\n\n\n\n\n\nOkabe-Ito colours\n\n\n\n\nNext in Stata we import the data\n\n# set up\nclear all\nset more off\n\nuse regional_dataset, clear\n\nNow we create some groups\n\n# manual legends\n\nkeep if country == \"France\"\n\n# set groups\n\ngen groups = .\n\nreplace groups = 1 if region == \"Alsace\" |  region == \"Champagne-Ardenne\" | ///\n    region == \"Bretagne\" | ///\n    region == \"Franche-Comt√©\" | region == \"Languedoc-Roussillon\" | ///\n    region == \"Lorraine\" | region == \"Midi-Pyr√©n√©es\" | region == \"Nord - Pas-de-Calais\" | ///\n    region == \"Provence-Alpes-C√¥te d'Azur\" | region == \"Corse\" | region == \"Picardie\"\n\nreplace groups = 2 if region == \"Aquitaine\" | region == \"Auvergne\" | region == \"Basse-Normandie\" | ///\n    region == \"Bourgogne\" | ///\n    region == \"Centre\" | region == \"Centre\" | region == \"Centre\" | region == \"Centre\" | ///\n    region == \"Haute-Normandie\" | region == \"Limousin\" | region == \"Pays de la Loire\" | ///\n    region == \"Poitou-Charentes\" | region == \"Rh√¥ne-Alpes\"\n\nreplace groups = 3 if region == \"√éle de France\"\n\nNow we can map the data, putting our RGB colour codes into the fcolor command: fcolor(\"230 159 0\" \"86 180 233\" \"0 158 115\"). In addition, we label our groups in the legend and set appropriate breaks with the clbreaks command.\n\n# Orange: \"230 159 0\"\n# Blue: \"86 180 233\"\n# Green: \"0 158 115\"\n\n\n # Put the rgb values for the colours into the `fcolor` command, and then put the labels into the legend.\nspmap groups using \"nutscoord.dta\" if year == 1950, id(_ID) fcolor(\"230 159 0\" \"86 180 233\" \"0 158 115\") legend(pos(9)) legstyle(2) ///\n    title(\"Regional GDP per Capita - 1950\", size(medium)) ///\n    osize(0.02 ..) ocolor(white ..) /// \n    clmethod(custom) clbreaks(0 1 2 3) ///\n    legend(order(2 \"MLP\" 3 \"EM\" 4 \"JLM\"))\n\nThis is what the map looks like:\n\n\n\nMap of France with regions"
  },
  {
    "objectID": "labs/Lab-Q-and-A.html#morans-i",
    "href": "labs/Lab-Q-and-A.html#morans-i",
    "title": "Q and A",
    "section": "Moran‚Äôs I",
    "text": "Moran‚Äôs I\nQ: How do I calculate Moran‚Äôs I in Stata?\nA: We need to calculate the spatial weighting matrix, and then calculate Moran‚Äôs I.\n\n\n\n\n\n\nMoran‚Äôs I\n\n\n\nMoran‚Äôs I is a measure of spatial autocorrelation‚Äìhow related the values of a variable are based on the locations where they were measured. In other words, global spatial autocorrelation measures the extent to which regions are interdependent.\n\n\nTo calculate Moran‚Äôs I, first we need to calculate the spatial weighting matrix. This matrix shows us how far each region is away from every other region. To calculate this matrix, we need to find the midpoint of each region. There are multiple ways to do this, but we will go with the simplest, which is to take the mean of all of the coordinates that make up the polygon.\nWe install the user written command that allows us to calculate the spatial weighting matrix sg162.\n\nclear all\nset more off\n\n # Install required user written command\nssc install sg162\n\nNext we find the mean x and y coordinates of each region and join this to our data from the regional_dataset.\n\nuse nutscoord, clear \nbysort _ID: egen mean_x = mean(_X)\nbysort _ID: egen mean_y = mean(_Y)\nkeep _ID mean_x mean_y\nduplicates drop\nmerge 1:m _ID using regional_dataset\nkeep if _merge == 3\ndrop _merge\n\nNext we choose a year to calculate Moran‚Äôs I for:\n\nkeep if year == 2000\n\nAnd calculate the spatial weighting matrix with the spatwmat command.\nThe band option allows us to drop any outliers which are too far away to be considered neighbours. We include all regions by setting the band‚Äôs upper bound very high.\n\nspatwmat, name(nutsweights) xcoord(mean_x) ycoord(mean_y) band(0 1.2e+06 )\n\nThe output that we get looks like this:\n\n\n\nSpatial weighting matrix output\n\n\nTo calculate Moran‚Äôs I for 2010 with regional GDP per capita, we use the weights we have calculated and the following command:\n\nspatgsa regional_gdp_cap_1990, weights(nutsweights) moran\n\nThe output looks like this:\n\n\n\nMoran‚Äôs I calculation output\n\n\nBased on these results, we can reject the null hypothesis that there is zero spatial autocorrelation present in the variable regional_gdp_cap_1990 at alpha = .05. In other words, regional GDP per capita is related to geography in 2010."
  },
  {
    "objectID": "labs/Lab-2.html",
    "href": "labs/Lab-2.html",
    "title": "Stata Lab 2: Mapping Growth - Across Space and Time",
    "section": "",
    "text": "In this lab we will look at comparing maps across time, dealing with breaks, experimenting with colours, loops, and labels.\n\n\nAs before we will use the regional dataset. Be sure to save this do-file in the same directory as the dataset, and so set your working directory correctly.\n\nclear all\nset more off\n\nuse regional_dataset, clear"
  },
  {
    "objectID": "labs/Lab-2.html#purpose",
    "href": "labs/Lab-2.html#purpose",
    "title": "Stata Lab 2: Mapping Growth - Across Space and Time",
    "section": "",
    "text": "In this lab we will look at comparing maps across time, dealing with breaks, experimenting with colours, loops, and labels.\n\n\nAs before we will use the regional dataset. Be sure to save this do-file in the same directory as the dataset, and so set your working directory correctly.\n\nclear all\nset more off\n\nuse regional_dataset, clear"
  },
  {
    "objectID": "labs/Lab-2.html#comparing-maps-over-time",
    "href": "labs/Lab-2.html#comparing-maps-over-time",
    "title": "Stata Lab 2: Mapping Growth - Across Space and Time",
    "section": "Comparing maps over time",
    "text": "Comparing maps over time\nMaking breaks in the right place is difficult! In the first plot we show regional GDP per capita from 1950. In the second, the same series is shown but for the year 2010. As you can see, because we have set the top level of the breaks too low, only Calabria in Southern Italy shows up on our map!\n\nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 1950, id(_ID) fcolor(Blues2) legend(pos(9)) legstyle(2) \n    title(\"Regional GDP per Capita - 1950\", size(medium)) \n    osize(0.02 ..) ocolor(white ..) \n    clmethod(custom) clbreaks(0 (2000) 12000)\n\n\nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 2010, id(_ID) fcolor(Blues2) legend(pos(9)) legstyle(2) \n    title(\"Regional GDP per Capita - 2010\", size(medium)) \n    osize(0.02 ..) ocolor(white ..) \n    clmethod(custom) clbreaks(0 (2000) 12000)\n\n\n\n\n\n\n\n\n\n\nRegion GDP per capita in 1950 and 2010 - same legend breaks\n\n\n\n\n\n\n\nRegion GDP per capita in 1950 and 2010 - same legend breaks\n\n\n\n\n\nIn our side-by-side figure above we encounter a challenge in comparing maps over time - we have both an evolving metric on aggregate (regional GDP per capita increases in real terms from 1950 to 2010) and within regions (with regions containing large cities seeing faster growth than rural areas, for example). As such, choosing the same breaks on both maps is inappropriate.\nWe can show the evolution of the distribution with two density plots drawn on the same axes.\n\nrange atx 0 40000\n\nkdensity regional_gdp_cap_1990 if year == 1950, gen(xp densityp) at(atx) nograph \nkdensity regional_gdp_cap_1990 if year == 2010 , gen(xm densitym) at(atx) nograph \n\nline densityp xp   \n    || line densitym xm,  yaxis(2)    \n    ||,  xtitle(\"\") legend(pos(6) row(1)) ytitle(\"\") ytitle(\"\", axis(2)) \n    legend(order(1 \"1950\" 2 \"2010\")) title(\"Distributions of regional GDP per capita\")\n\n\n\n\n\n\n\n\n\n\n\nLetting Stata select breaks\nInstead of setting bounds based on thresholds that we choose, in the map below, we allow Stata to select the breaks based on the data that we are mapping.\nIn this case, Stata breaks the distribution up into four brackets, with the lowest containing the observations from the first to 25th percentile, the second from the 26th percentile to the median, and so on. Because clmethod(quantile) is actually the default classification method, we don‚Äôt need to specify it in our command.\n\nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 1950, id(_ID) fcolor(Blues2) legend(pos(9)) legstyle(2) \n    title(\"Regional GDP per Capita - 1950\", size(medium)) \n    osize(0.02 ..) ocolor(white ..)\n\n\n\n\n\n\n\n\n\n\nWhen we do this for two maps showing the same variable in two time periods, we can use quantile breaks to highlight the change between the periods - which regions have seen growth and which have dallied behind.\nIn the code below, we produce two maps with Stata‚Äôs default four bins based on the distribution of regional GDP per capita and compare them.\n\nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 1950, id(_ID) fcolor(YlGnBu) legend(pos(9)) legstyle(2) \n    title(\"Regional GDP per Capita - 1950\", size(medium)) \n    osize(0.02 ..) ocolor(white ..) \n    clmethod(quantile) name(graph_1950, replace)\n    \nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 2010, id(_ID) fcolor(YlGnBu) legend(pos(9)) legstyle(2) \n    title(\"Regional GDP per Capita - 2010\", size(medium)) \n    osize(0.02 ..) ocolor(white ..) \n    clmethod(quantile) name(graph_2010, replace)\n\ngraph combine graph_1950 graph_2010\n\n\n\n\n\n\n\n\n\n\n\n\nSpecifying quantile breaks\nWe can also increase the number of breaks by specifying the method and number of breaks: clmethod(quantile) clnumber(8).\n\nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 1950, id(_ID) fcolor(YlOrRd) legend(pos(9)) legstyle(2) \n    title(\"Regional GDP per Capita - 1950\", size(medium)) \n    osize(0.02 ..) ocolor(white ..) \n    clmethod(quantile) clnumber(8)\n\n\n\n\n\n\n\n\n\n\nFurther, we can specify the exact breaks - in this case showing the regional GDP per capita relative to the average for the countries in our dataset.\n\n\n\n\n\n\nNote\n\n\n\nYou can compare with maps 2.4a and 2.4b in the course book.\n\n\n\nspmap relative_gdp_cap_eu using \"nutscoord.dta\" if year == 1900, id(_ID) fcolor(YlOrRd) legend(pos(9)) legstyle(2) \n    osize(0.02 ..) ocolor(white ..) title(1900) \n    clmethod(custom) clbreaks(0 0.8 1 1.2 3) \n    name(graph_1900, replace)\n\nspmap relative_gdp_cap_eu using \"nutscoord.dta\" if year == 2010, id(_ID) fcolor(YlOrRd) legend(pos(9)) legstyle(2) \n    osize(0.02 ..) ocolor(white ..) title(2010) \n    clmethod(custom) clbreaks(0 0.8 1 1.2 3) \n    name(graph_2010, replace)\n\ngraph combine graph_1900 graph_2010\n\n\n\n\n\n\nRelative regional GDP per capita"
  },
  {
    "objectID": "labs/Lab-2.html#looking-at-one-country",
    "href": "labs/Lab-2.html#looking-at-one-country",
    "title": "Stata Lab 2: Mapping Growth - Across Space and Time",
    "section": "Looking at one country",
    "text": "Looking at one country\nWe can highlight one country by using the if as well as the & operators:\n\nspmap employment_share_industry using \"nutscoord.dta\" \n  if year == 1950 & country == \"Sweden\", id(_ID)\n\n\n\n\n\n\nhighlighting Sweden\n\n\n\n\nWe can generate groups using the | (pronounced OR) operator:\n\ngen group_1 = 0\nreplace group_1 = 1 if country == \"Sweden\" | country == \"Denmark\"\n\nspmap employment_share_industry using \"nutscoord.dta\" if year == 1950 & group_1 == 1, id(_ID) \n    fcolor(Blues2) legend(pos(5) size(3.5)) legstyle(2) \n    title(\"Employment Share Industry - 1950\", size(6)) \n    osize(0.02 ..) ocolor(white ..) \n    ndfcolor(gray) ndocolor(none ..) ndsize(0.02 ..)\n\n\n\n\n\n\nhighlighting Sweden and Denmark"
  },
  {
    "objectID": "labs/Lab-2.html#experimenting-with-colours",
    "href": "labs/Lab-2.html#experimenting-with-colours",
    "title": "Stata Lab 2: Mapping Growth - Across Space and Time",
    "section": "Experimenting with colours",
    "text": "Experimenting with colours\nWe can choose from a large selection of the spmap colour palettes depending on the context.\nHere is the list that you get if you navigate to fcolor after typing\n\nhelp spmap\n\n\n\n\n\n\nStata‚Äôs fill colour palettes\n\n\n\n\nHere is an example of the Heat colour palette, showing national GDP per capita in 1950.\n\nspmap national_gdp_cap_1990 using \"nutscoord.dta\" if year == 1950, id(_ID) fcolor(Heat)\n\n\n\n\n\n\nExample of Heat colour palette\n\n\n\n\nThe viridis colour palette is a fantastic sequential palette, here is is used to show the share of employment in industry in 1950.\n\ncolorpalette viridis, n(8) nograph\nlocal colors `r(p)''\nspmap employment_share_industry using \"nutscoord.dta\" if year == 1950, \n  id(_ID) fcolor(\"`colors'\") legstyle(2) \n    title(\"1950\", size(large)) \n    osize(0.02 ..) ocolor(white ..) \n    clmethod(custom) clbreaks(0 (0.1) 0.8) \n    legend(pos(9) region(fcolor(gs15)) size(2.5)) legtitle(\"1 = 100%\") \n    ndfcolor(gray) ndocolor(white ..) ndsize(0.02 ..) \n    title(\"Employment share in industry in 1950\")\n\n\n\n\n\n\nExample of viridis colour palette\n\n\n\n\nWe can also reverse the palette so that high is blue and low is yellow. Finally we can customize the background with the command graphregion(color(navy)) which makes the graph background navy.\nPersonally I don‚Äôt think this adds anything to our understanding - I would stay far away from supurfluous colour but you can do this in Stata.\n\ncolorpalette viridis, n(8) nograph reverse\nlocal colors `r(p)''\nspmap employment_share_industry using \"nutscoord.dta\" if year == 1950, id(_ID) fcolor(\"`colors'\") legstyle(2) \n    title(\"1950\", size(large) color(white)) \n    osize(0.02 ..) ocolor(white ..) \n    clmethod(custom) clbreaks(0 (0.1) 0.8) \n    legend(pos(9) region(fcolor(navy)) color(white) size(2.5)) legtitle(\"1 = 100%\") \n    ndfcolor(gray) ndocolor(white ..) ndsize(0.02 ..) graphregion(color(navy))\n\n\n\n\n\n\nAnother example of viridis colour palette"
  },
  {
    "objectID": "labs/Lab-2.html#globals-and-locals",
    "href": "labs/Lab-2.html#globals-and-locals",
    "title": "Stata Lab 2: Mapping Growth - Across Space and Time",
    "section": "Globals and locals",
    "text": "Globals and locals\n\nWhy use them?\nIn Stata, locals and globals are used to create and store values that can be reused in different parts of the program.\nlocals are temporary variables that are only stored in memory while the program or do-file is running. They can be used to define values that are specific to a certain block of code or section of the program. Once the program or do-file is finished running, the locals are deleted from memory.\nglobals, on the other hand, are stored in memory until you exit Stata, and can be accessed from any part of the program or do-file. They can be used to define values that need to persist throughout the entire analysis or across different datasets.\nThese macros are useful to shorten code and to iterate through a loop multiple times.\n\n\nHow to use them\nIn the code below we make use of locals twice:\n\nforeach var of varlist employment_share_industry employment_share_services {\n    foreach i of numlist 1950 (10) 1970 {\n        spmap `var' using \"nutscoord.dta\" if year == `i', id(_ID)\n    }\n}\n\nThis Stata code creates a series of maps using the spmap command.\nThe foreach loop iterates over two variables, employment_share_industry and employment_share_services. For each of these variables, the loop creates a map for three years between 1950 and 1970. Specifically, it creates maps for the years 1950, 1960, and 1970, using a step size of 10.\nThe spmap command is used to create the maps. The first argument of spmap is the variable to be mapped, which is specified using the varlist option and the local macro var. The second argument is the data file containing the spatial coordinates of the regions, specified as ‚Äúnutscoord.dta‚Äù. The third argument specifies the condition for which the map is created, in this case year == `i', which ensures that only the observations corresponding to the current year of the loop are included. The id(_ID) option tells spmap to use the _ID variable in the dataset as the unique identifier for the regions being mapped.\n\n\nExample of an output\nHere we make a global macro with a variable list of two variables.\nThen we loop through the list of variables to make a map for each, and name the map with the variable and the year. Finally we combine them in a single image.\n\nglobal varlist employment_share_industry employment_share_services\n\nforeach var of varlist $varlist {\n    foreach i of numlist 1950 (10) 1970 {\n        spmap `var' using \"nutscoord.dta\" if year == `i', id(_ID) name(`var'_`i', replace)\n    }\n}\n\n\ngraph combine employment_share_industry_1960 employment_share_industry_1970 employment_share_industry_1980 employment_share_industry_1990\n\n\n\n\n\n\nExample of graph combine used in conjunction with global and local macros\n\n\n\n\n\n\nMacros treat strings and numbers differently\nStrings need quotes and displaying them works just like other locals.\n\nlocal a \"Hello\"\nlocal b \"World\"\ndi \"`a' `b'\"\n\nHello World\nNumbers don‚Äôt need quotes and you can operate on them with operators, for example, the plus opertor.\n\nlocal x = 1\nlocal y = 2\ndi `x' + `y'\n\n3"
  },
  {
    "objectID": "labs/Lab-2.html#graph-themes",
    "href": "labs/Lab-2.html#graph-themes",
    "title": "Stata Lab 2: Mapping Growth - Across Space and Time",
    "section": "Graph themes",
    "text": "Graph themes\nYou can make your graphs more visually appealing by choosing some nice schemes. Have a look online and don‚Äôt be afraid to download some using the ssc install command.\nHere we show the burd and swift_red schemes.\n\n# Prep\nreplace employment_share_industry = employment_share_industry * 100\nreplace employment_share_services = employment_share_services * 100\n\ntwoway line employment_share_industry employment_share_services year if country == \"Sweden\", \n    by(region, note(\"\")) subtitle(, lstyle(none) size(small)) \n    xlabel(1900 (50) 2000) ylabel(0 (40) 80) ytitle(Share in %) \n    legend(size(vsmall)) scheme(burd)\n\ntwoway line employment_share_industry employment_share_services year if country == \"Sweden\", \n    by(region, note(\"\")) subtitle(, lstyle(none) size(small)) \n    xlabel(1900 (50) 2000) ylabel(0 (40) 80) ytitle(Share in %) \n    legend(size(vsmall)) scheme(swift_red)\n\n\n\n\n\n\n\n\n\n\nRegion GDP per capita in 1950 and 2010 - same legend breaks\n\n\n\n\n\n\n\nRegion GDP per capita in 1950 and 2010 - same legend breaks"
  },
  {
    "objectID": "labs/Lab-2.html#labelling",
    "href": "labs/Lab-2.html#labelling",
    "title": "Stata Lab 2: Mapping Growth - Across Space and Time",
    "section": "Labelling",
    "text": "Labelling\nWe can label regions with a little bit of effort. I would do this maybe just once in your lab reports so that the reader is familiar with the context of your chosen regions.\n\nuse nutscoord, clear # by request: to label the regions\nbysort _ID: egen mean_x = mean(_X)\nbysort _ID: egen mean_y = mean(_Y)\nkeep _ID mean_x mean_y\nduplicates drop\nmerge 1:m _ID using regional_dataset\nkeep if _merge == 3\nkeep if country == \"France\"\nkeep _ID mean_x mean_y region\nduplicates drop\nsave labels_regions, replace\nuse regional_dataset, clear\nkeep if country == \"France\"\nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 1950, \n    id(_ID) fcolor(Oranges) ndfcolor(gray) \n    osize(0.02 ..) ocolor(gs8 ..) legend(color(white) pos(7)) legstyle(2) \n    label(data(labels_regions) xcoord(mean_x) ycoord(mean_y) \n    label(region) size(*0.5) length(50) color(grey)) graphregion(color(navy))\n\n\n\n\n\n\n\nTip\n\n\n\nTo have multiple lines of labels see this Statalist link"
  },
  {
    "objectID": "labs/Lab-2.html#extra-material",
    "href": "labs/Lab-2.html#extra-material",
    "title": "Stata Lab 2: Mapping Growth - Across Space and Time",
    "section": "Extra material",
    "text": "Extra material\n\nbysort country year: egen test_1 = total(regional_gdp_1990) # pay attention to the sorting when calculating totals\nbysort country (year): egen test_2 = total(regional_gdp_1990)\nbr country region year regional_gdp_1990 national_gdp_1990 test_1 test_2\nassert test_1 != test_2 # useful to test whether a condition holds (or not)\nassert test_1 == national_gdp_1990\n\nreplace employment_share_agriculture = employment_share_agriculture * 100\nbysort country region (year): gen change_share_agriculture_1 = employment_share_agriculture[_n] - employment_share_agriculture[_n-1] # cf. also the time operators l., f. and d. as well as xtset and tsset\n\n\nlink to world maps; can be converted into Stata format; use e.g.¬†‚ÄúWorld Country Polygons - Very High Definition‚Äù; already contains some data\nOther World Bank data; can e.g.¬†be matched to the maps\nread these articles (bloomberg and Manuel Gimond) on how to make good maps and discuss."
  },
  {
    "objectID": "labs/Lab-1.html",
    "href": "labs/Lab-1.html",
    "title": "Stata Lab 1: Mapping Growth - Basic Maps",
    "section": "",
    "text": "üó∫Ô∏è One goal of this course is to teach students how to identify a good map ‚Äì one which is clear, informative and attractive ‚Äì and familiarise students with the commands which allow the creation of these maps in Stata.üìà\nIn addition, your lab paper (üìÖ due March 21st) requires that you include at least 6 maps, so it is worth concentrating in the labs and making use of these resources.üìù\nüìö This document is intended to allow you to keep up with the Stata Lab 1 that we will work through in class.üìä\nYou can read the document on this website, or download the same information in pdf format hereüìö.\nIt will include the commands the we use and the output, as well as some hints and tips that will be useful during your projects, I hope.ü§û"
  },
  {
    "objectID": "labs/Lab-1.html#purpose",
    "href": "labs/Lab-1.html#purpose",
    "title": "Stata Lab 1: Mapping Growth - Basic Maps",
    "section": "",
    "text": "üó∫Ô∏è One goal of this course is to teach students how to identify a good map ‚Äì one which is clear, informative and attractive ‚Äì and familiarise students with the commands which allow the creation of these maps in Stata.üìà\nIn addition, your lab paper (üìÖ due March 21st) requires that you include at least 6 maps, so it is worth concentrating in the labs and making use of these resources.üìù\nüìö This document is intended to allow you to keep up with the Stata Lab 1 that we will work through in class.üìä\nYou can read the document on this website, or download the same information in pdf format hereüìö.\nIt will include the commands the we use and the output, as well as some hints and tips that will be useful during your projects, I hope.ü§û"
  },
  {
    "objectID": "labs/Lab-1.html#structure",
    "href": "labs/Lab-1.html#structure",
    "title": "Stata Lab 1: Mapping Growth - Basic Maps",
    "section": "Structure",
    "text": "Structure\nToday we will be covering the following topics:\n\nInstalling basic packages: We will go over how to install the necessary packages in order to run our analysis. This will include packages such as ‚Äúspmap‚Äù and ‚Äúgeo2xy‚Äù which will allow us to create maps in Stata.\nData types: We will discuss the different types of data that we will be working with in this lab. Specifically, we will be using time series data from a spreadsheet and map data from a shapefile. It is important to understand the structure and format of these data types in order to properly analyze and visualize them.\nBasic mapping: Once we have our data, we will learn how to draw a basic map using the ‚Äúmaps‚Äù and ‚Äúmaptools‚Äù packages. We will go over how to import the shapefile data, how to define the map scale, and how to add different layers to the map such as points, lines, and polygons.\n\nBy the end of this lab, you should have a solid understanding of how to install necessary packages, how to work with different types of data, and how to draw a basic map in Stata.\nüìäüó∫Ô∏èüíª Let‚Äôs get started!"
  },
  {
    "objectID": "labs/Lab-1.html#getting-started",
    "href": "labs/Lab-1.html#getting-started",
    "title": "Stata Lab 1: Mapping Growth - Basic Maps",
    "section": "Getting started",
    "text": "Getting started\nGiven that you have encountered Stata previously in your studies, I will not spend undue time explaining the basics. If you want to brush up on Stata‚Äôs syntax, I recommend having a look at these slides from Oscar Torres-Reyna, or this set of Youtube videos From Sebastian Wai. I‚Äôve put together a comprehensive set of resources on this page here.\n\nInstall additional programs and set-up\nFirst we need to install the packages in Stata that we will make use of. Please do this before our lab session in order to save time.\nWe use the ssc install command, as follows:\n\nssc install spmap, replace\nssc install geo2xy, replace\nssc install shp2dta, replace\nssc install schemepack, replace\nssc install scheme-burd, replace\nssc install colrspace, replace\nssc install palettes, replace\nssc install egenmore, replace\nssc install outreg2, replace\n\n\n\n\n\n\n\nNote\n\n\n\nTo run do-files click the ‚Äúrun-button‚Äù or highlight the lines of code and hit ctrl + D (Windows) or shift + cmd + D (Mac)\n\n\nRunning the command should produce output in the console that looks like this:\n\n. ssc install geo2xy, replace\n¬†¬†checking geo2xy consistency and verifying not already installed...\n¬†¬†installing into c:\\ado\\plus\\... installation complete.\n¬†¬†...\n\n\n\n\n\n\n\nAlways comment your code\n\n\n\nCommenting your code is a good practice to get into. It helps you remember what you were doing when you come back to your code later, and it helps your partner understand what you are doing.\nIn Stata you can comment your code in one line\n# like so\nOr if you want to write a longer string\n/*You can put your longer string of text inside a set of slashes and stars*/\n\n\n\nTry and make your comments more useful than these!\n\n\n\n\n\nSetting a directory\nIt is useful to put all of your work inside a specific file directory. This way, Stata knows where to look for your files and where to save output, like regression tables.\nThe path to my folder where I have the files for this lab is:\nC:/Users/User/Documents/Recon/EOSE09/stata_files/\nIf you have a Mac, it will look something like this:\nUsers/Jonathan/Documents/Stata-lab/\nIf you want to change the settings on your Mac to display the file path in your Finder window, follow this link.\nTo tell Stata that this is where I want it to look for my files, I‚Äôll use the cd (current directory) command in my do-file.\n\ncd \"C:/Users/User/Documents/Recon/EOSE09/stata_files/\" # set your directory\n\nIf successful, in the console I will see the following output:\n\n. cd \"C:/Users/User/Documents/Recon/EOSE09/stata_files/\" # set your directory\n¬†¬†C:\\Users\\User\\Documents\\Recon\\EOSE09\\stata_files\n\nYou can call the help window by typing help into the console, and set your Stata version for compatability reasons with the version command, like so:\n\nhelp # Stata's help function; cf. also the web or Statalist\nversion 16.1 # version control"
  },
  {
    "objectID": "labs/Lab-1.html#data-types",
    "href": "labs/Lab-1.html#data-types",
    "title": "Stata Lab 1: Mapping Growth - Basic Maps",
    "section": "Data types",
    "text": "Data types\nIn order to draw a map in Stata, we need to combine the information from our shapefile (which contains the geographic information such as the shape and location of the features on the map) with the information from our spreadsheet (which contains the data we want to display on the map, such as population or income).\nThe process of combining these two types of data is called ‚Äújoining‚Äù or ‚Äúmerging‚Äù and it allows us to link the attributes from the spreadsheet to the geographic features in the shapefile. Without joining the data, we would only have the shape of the features on the map, but not the information we want to display.\nYou are likely familiar with the first type of data, it is a wide dataset in an excel spreadsheet.\nThe second is a shapefile - a file that stores the information a software program needs to draw a map.\n\n\n\n\n\n\nShapefiles üó∫Ô∏èüìäüíªüìÇ\n\n\n\nA shapefile is a type of data file that is used to store geographic information, such as the location of streets, buildings, and other features on a map. It is a common format used in geographic information systems (GIS) software.\nA shapefile consists of four components with different file extensions:\n\n.shp (shapefile): This file stores the actual geometric data for the features in the map, such as the shape of a street or a building.\n.shx (shape index): This file stores the index of the geometric data in the .shp file, which is used to quickly access the data in the correct order.\n.dbf (database file): This file stores the attribute data for the features in the map, such as the name of a street or the population of a building.\n.prj (projection file): This file stores information about the coordinate system and projection used for the data in the shapefile. This is important for ensuring that the map is displayed correctly and that measurements are accurate.\n\nTogether, these four files make up a complete shapefile and are necessary to properly display and analyze the geographic information.\n\n\n\nImporting the Roses-Wolf dataset from Excel into Stata\nAt the moment, the database we want to use to draw our maps is in an excel sheet.\nIt has many tabs, and some lines are filled with headings before the data begins, as shown here:\n\n\n\nScreenshot of excel file\n\n\nWhat we want to do is import the data from each tab, and append it together.\n\nimport excel using RosesWolf_RegionalGDP_v6.xlsx, sheet(\"A1 Regional GDP\") firstrow cellrange(A6:O179) clear # import Excel sheet\n\nrename (D E F G H I J K L M N O) (year_1900 year_1910 year_1925 year_1938 year_1950 year_1960 year_1970 year_1980 year_1990 year_2000 year_2010 year_2015)\n\nThis is what the data now looks like inside Stata. It is a wide dataframe, with 173 rows (the number of regions) and 15 variables (3 identifiers and 12 years worth of data)\n\n\n\nScreenshot of Stata format\n\n\n\n\n\n\n\n\nTip\n\n\n\nRecall that the Roses Wolf database has geographic data on GDP and population at the nomenclature of territorial units 2 (NUTS-2) level, from 1900 to 2015.\nIf you want to have a look at this data in more detail, have a look at this Shiny app.\n\n\nNext we want to be sure that Stata is reading in the values as numbers rather than text. For this we use the destring command.\n\nimport excel using RosesWolf_RegionalGDP_v6.xlsx, sheet(\"A1 Regional GDP\") firstrow cellrange(A6:O179) clear allstring `# we import each sheet in the Excel file separately and save it as one file`\n\nrename (D E F G H I J K L M N O) (year_1900 year_1910 year_1925 year_1938 year_1950 year_1960 year_1970 year_1980 year_1990 year_2000 year_2010 year_2015)\n    destring year_*, replace\n\nIf there are non-numerical values in a string you cannot use destring and should not use the force-option as it would create missing values A better approach is to check all cases that are non-numerical and replace them (e.g.¬†change ‚Äúone‚Äù to ‚Äú1‚Äù)\nOther common data cleaning commands could include:\n# tab var1 if missing(real(var1)) # replace var1 ... if ... # destring var1, replace\nNext we want to take the data from a wide format to a long format. A long format means that each row is an observation, each column is a variable, and each cell has just one value in it.\n\n\n\nReshape graphic\n\n\nThe reshape command in Stata is used to change the shape of the data from one format to another. In this specific case, the reshape long option is used to change the data from a ‚Äúwide‚Äù format to a ‚Äúlong‚Äù format.\nThe variables that come after ‚Äúyear_‚Äù are the variables that will be converted from wide to long format. In this case, ‚Äúyear_‚Äù is not a variable, it is a prefix of the variables that will be reshaped.\nThe option i(NUTSCodes Region Countrycurrentborder) specifies the identifier variables, which are variables that uniquely identify the observations in the dataset and will not be reshaped. In this case, ‚ÄúNUTSCodes‚Äù, ‚ÄúRegion‚Äù, and ‚ÄúCountrycurrentborder‚Äù are the identifier variables.\nThe option j(year) specifies the variable that will be used as the new variable name for the reshaped variables. In this case, the new variable name will be ‚Äúyear‚Äù and it will be the identifier of the year of the data.\nWe save the data as a .dta file with the save command. The replace option overwrites any file with the same name in the directory.\n\nhelp reshape # Read up about the command here\nreshape long year_, i(NUTSCodes Region Countrycurrentborder) j(year)\nrename year_ regional_gdp_millions\nsave regional_gdp, replace \n\n\n\n\n\n\n\nTip\n\n\n\nNever overwrite your raw data - this could be a big problem if you haven‚Äôt saved it somewhere else. Good practice is to save a copy of your data in a different folder before the analysis, and make any changes through your do-file (e.g.¬†changing ‚Äúone‚Äù to ‚Äú1‚Äù in Stata rather than excel).\n\n\nNow we can see the data in a long format if we use the browse (br) command:\n\nWe repeat this process for the remaining sheets in the Excel workbook.\n\nimport excel using RosesWolf_RegionalGDP_v6.xlsx, sheet(\"A1b Regional GDP (2011PPP)\") firstrow cellrange(A6:O179) clear allstring # repetition of the steps above for each sheet\nrename (D E F G H I J K L M N O) (year_1900 year_1910 year_1925 year_1938 year_1950 year_1960 year_1970 year_1980 year_1990 year_2000 year_2010 year_2015)\ndestring year_*, replace\nreshape long year_, i(NUTSCodes Region Countrycurrentborder) j(year)\nrename year_ regional_gdp_2011_ppp_millions\nsave regional_gdp_2011_ppp, replace\n...\n\n\n\nImporting the shapefiles into Stata\nDescribe importing a shapefile into Stata\n\nclear # clear the dataset in memory\n    \nshp2dta using regions_nuts2, database(regions) coordinates(nutscoord) genid(_ID) replace\n\nNow we have a little data cleaning to do: There are three particular regions that need to be joined together in the Roses-Wolf database in order to be plotted correctly. If we don‚Äôt correct these, there will be holes in our map, as shown below:\n\n\n\nScreenshot from my Shiny app\n\n\n\nuse regions, clear # fixing the identifier of the NUTS_Codes so that the merge below works for all regions in the dataset\nreplace NUTS_CODE = \"AT12+AT13\" if NUTS_CODE == \"AT123\"\nreplace NUTS_CODE = \"DE71+DE72\" if NUTS_CODE == \"DE712\"\nreplace NUTS_CODE = \"DE91+DE92\" if NUTS_CODE == \"DE912\"\nsave regions, replace\n\n\nProjections\nMap projections are methods used to represent the surface of the Earth on a flat map. Different projections have different properties, such as preserving area, shape, or direction, and each has its own set of distortions. The Mercator projection is a cylindrical projection that was developed in the 16th century for navigation. It is particularly useful for representing the entire globe at once, but it distorts the size and shape of landmasses near the poles.\n\n\n\n\n\n\nMercator popularity\n\n\n\nWeb Mercator, also known as Google Web Mercator, Spherical Mercator, WGS 84 Web Mercator or WGS 84/Pseudo-Mercator, is a variant of the Mercator projection that is optimized for use on the web. It is the projection used by Google Maps, OpenStreetMap, and many other online mapping services.\n\n\n\nObligatory XKCD comic\n\n\nHave a look at this link to the Stata forum that explains different projections.\n\n\nWe will use the Albers projection, which is saved as nutscoord.dta in your working directory.\n\nuse nutscoord, clear # we use the Albers projection; every projection looks a bit different\n\nLet‚Äôs give a gander what the projection looks using the scatter command.\n\nscatter _Y _X\nscatter _Y _X, msize(tiny) msymbol(point)\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Scatter with no options\n\n\n\n\n\n\n\n\n\n\n\n(b) Scatter specifying msize and msymbol\n\n\n\n\n\n\n\nFigure¬†1: Comparison of scatter plots\n\n\n\n\n\n\n\n\n\nScatter options\n\n\n\nThe msize() option in the scatter command is used to set the size of the markers in the graph. The markers can be circles, squares, or other shapes, and the size option controls their overall size. The value of the option can be a number, which represents the size in units of the graph, or a variable name, which represents the size relative to the values of that variable.\nThe msymbol() option in the scatter command is used to set the shape of the markers in the graph. The markers can be circles, squares, or other shapes, and the msymbol option controls their shape. The value of the option can be a number, which represents the shape, or a variable name, which represents the shape relative to the values of that variable.\n\n\nYou can experiment with other projections, have a look at the geo2xy help file:\n\nhelp geo2xy\n\n\n\n\nStata‚Äôs projections\n\n\n\n\n\nMerge shapefiles and data together\nWe‚Äôre nearly there! Now we have both file types in the correct format in Stata. All that is left to do is merge them together so that we can plot maps with the Roses-Wolf data.\nWe start by importing our clean, long format data.\n\nuse regional_gdp, clear # we merge all created files together\n\nWe are going to use the merge command. Read more about it by typing help merge into the console.\n\n\n\nMerge explained\n\n\n\n\n\n\n\n\nMerge types\n\n\n\n1:1 matches occur when each observation in one dataset has a unique match in the other dataset, based on the specified variable(s). This is the most common type of match and is the default behavior of the merge command.\n1:m matches occur when one observation in one dataset has multiple matches in the other dataset, based on the specified variable(s). This can happen when there are duplicate values in the specified variable(s) in one of the datasets.\nm:m matches occur when multiple observations in one dataset have multiple matches in the other dataset, based on the specified variable(s). This is the least common type of match, as it requires duplicate values in the specified variable(s) in both datasets.\n\n\n\nmerge 1:1 NUTSCodes year using regional_gdp_2011_ppp # this is a 1:1 merge\ndrop _merge\n\nYou should get output that looks like so:\n\n. merge 1:1 NUTSCodes year using regional_gdp_2011_ppp # this is a 1:1 merge\n¬†¬†¬†Result # of obs.\n¬†¬†¬†‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì\n¬†¬†¬†not matched 0\n¬†¬†¬†matched 2,076 (_merge==3)\n¬†¬†¬†‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì\n\nWe now repeat the process for all of our variables in the Roses-Wolf database.\n\nmerge 1:1 NUTSCodes year using population, assert(match) nogen\nmerge 1:1 NUTSCodes year using share_agriculture, assert(match) nogen\nmerge 1:1 NUTSCodes year using share_industry, assert(match) nogen\nmerge 1:1 NUTSCodes year using share_services, assert(match) nogen\n\nNow we add in area to all of the variables with an m:1 merge\n\nmerge m:1 NUTSCodes using area_km2, assert(match) nogen # this is a m:1 merge; there is also a 1:m merges; m:m merges are a bad idea\n\nLet‚Äôs fix our nomenclature\n\nrename NUTSCodes NUTS_CODE\nmerge m:1 NUTS_CODE using regions\n\nLet‚Äôd now drop all of the regions for which there is map information, but no data from the Roses-Wolf database.\n\ndrop if _merge == 2 # we keep all regions that are merged and delete those for which we have geographical information but no data\ndrop _merge\norder _ID, after(NUTS_CODE)\n\nWonderful! Now we have joined together our geographic information from the shapefiles with the data from the Roses-Wolf database."
  },
  {
    "objectID": "labs/Lab-1.html#formatting-and-creating-variables",
    "href": "labs/Lab-1.html#formatting-and-creating-variables",
    "title": "Stata Lab 1: Mapping Growth - Basic Maps",
    "section": "Formatting and Creating Variables",
    "text": "Formatting and Creating Variables\nThis next section is first setting up some calculated variables (e.g.¬†dividing GDP by population for GDP per capita) and secondly adding nice names that are easy to understand what we are up to.\nWe start by renaming our variables from title case to snake case (where words are in lower case and separated by underscores)\n\nrename Countrycurrentborder country\n\nrename (Region regional_gdp_millions regional_gdp_2011_ppp_millions population_thousands area_km2) (region regional_gdp_1990 regional_gdp_2011 regional_population regional_area) # cleaning the dataset\n\nNext we change our GDP and population values from being denominated in millions and thousands to basic levels.\n\nreplace regional_gdp_1990 = regional_gdp_1990 * 1000000\nreplace regional_gdp_2011 = regional_gdp_2011 * 1000000\nreplace regional_population = regional_population * 1000\n\nNext we sum across countries and years to create a summary value for national GDP and national population from the regional values.\n\nbysort country year: egen national_gdp_1990 = total(regional_gdp_1990)\nbysort country year: egen national_population = total(regional_population)\n\nCreating per capita values at national and regional levels:\n\ngen national_gdp_cap_1990 = national_gdp_1990 / national_population\ngen regional_gdp_cap_1990 = regional_gdp_1990 / regional_population\ngen regional_gdp_cap_2011 = regional_gdp_2011 / regional_population\nsort country region year\n\nCreating a population density variable:\n\ngen population_density = regional_population / regional_area # you often have to calculate new variables, which you then can map\n\nNext we are going to make use of a very powerful command, egen , in combiation with the xtile command to create five groups of regions, based on their where they fall in percentile of regional GDP per capita, for every year which we have data on them.\n\negen q_regional_gdp_cap_1990 = xtile(regional_gdp_cap_1990), n(5) by(year) # you can change the number of groups\nsort country region year\n\nNow we are going to create a variable for GDP per capita at the regional level for each region, relative to the average of the entire sample.\n\nbysort year: egen mean_gdp_cap_eu = mean(regional_gdp_cap_1990)\nsort country region year\ngen relative_gdp_cap_eu = regional_gdp_cap_1990 / mean_gdp_cap_eu\n\nHere we do the same for the country level.\n\nbysort year country: egen mean_gdp_cap_country = mean(regional_gdp_cap_1990)\nsort country region year\ngen relative_gdp_cap_country = regional_gdp_cap_1990 / mean_gdp_cap_country\n\nFinally, we are going to add some nice labels so that when we draw our graphs they get nice legends by default.\nIn Stata you can have a variable name (e.g.¬†‚Äúcountry‚Äù), and a variable label (a long string e.g.¬†‚ÄúCountry in Current Borders‚Äù).\n\nlabel variable _ID \"Region ID\"\nlabel variable year \"Year\"\nlabel variable country \"Country in Current Borders\"\nlabel variable regional_gdp_1990 \"Regional GDP in 1990 International Dollars\"\nlabel variable regional_population \"Regional Population\"\nlabel variable employment_share_agriculture \"Regional Share of Employment in Agriculture\"\nlabel variable employment_share_industry \"Regional Share of Employment in Industry\"\nlabel variable employment_share_services \"Regional Share of Employment in Services\"\nlabel variable regional_area \"Area in KM2\"\nlabel variable national_gdp_1990 \"National GDP in 1990 International Dollars\"\nlabel variable national_gdp_cap_1990 \"National GDP per Capita in 1990 International Dollars\"\nlabel variable regional_gdp_cap_1990 \"Regional GDP per Capita in 1990 International Dollars\"\nlabel variable national_population \"National Population\"\n\nformat region NUTS_CODE %20s\n\nsave regional_dataset, replace"
  },
  {
    "objectID": "labs/Lab-1.html#summary-statistics",
    "href": "labs/Lab-1.html#summary-statistics",
    "title": "Stata Lab 1: Mapping Growth - Basic Maps",
    "section": "Summary statistics",
    "text": "Summary statistics\nIn this section we use the tab and summarize commands to create summary statistics. To export our summary statistics, we use the outreg2 command.\n\nTab for summaries of categorical variables.\n\nuse regional_dataset, clear\n\ntab country\n\n\n\ntab region\n\n\n\nSummarize for summaries of numeric variables\n\nsummarize national_gdp_cap_1990 if year == 1950, detail\nsummarize regional_gdp_cap_1990 if year == 1950, detail\nsummarize regional_gdp_cap_1990 if year == 2000, detail\n\n\n\n\n\n\n\nTip\n\n\n\nYou can use the option , detail or simply , d after the summarize command to get summary values across the distribution, rather than just at the mean of the distribution.\n\n\n\n\nExporting summary tables\nHere the outreg2 command makes a table in MS Word format. To learn more about outreg2, see this link.\n\noutreg2 using sum_table.doc, replace sum(log) keep(regional_gdp_cap_1990) eqkeep(N mean sd) label\noutreg2 if year == 1950 using sum_table_1950.doc, replace sum(log) keep(regional_gdp_cap_1990) eqkeep(N mean sd) label\n\nWe can also use the browse command (shortened to br) to provide an easy to read summary within Stata.\n\nsort year regional_gdp_cap_1990\nbr region country regional_gdp_cap_1990 if year == 1900 # compare with \n\nWe can compare this summary with table 2.6 in the course book.\n\n\nbr region country regional_gdp_cap_1990 if year == 2010"
  },
  {
    "objectID": "labs/Lab-1.html#basic-maps",
    "href": "labs/Lab-1.html#basic-maps",
    "title": "Stata Lab 1: Mapping Growth - Basic Maps",
    "section": "Basic maps",
    "text": "Basic maps\nNow we get to the fun part! Let‚Äôs load our nice and tidy dataset.\n\nuse regional_dataset, clear\n\nhelp spmap\n\n\n¬†¬†¬†¬†¬†¬†spmap is aimed at visualizing several kinds of spatial data, and is\n¬†¬†¬†¬†¬†¬†particularly suited for drawing thematic maps and displaying the results\n¬†¬†¬†¬†¬†¬†of spatial data analyses.\n\n\nBasic command\nHere we draw a map with just the outline of our regions. We use the nutscoord.dta file as our map.\n\nspmap using \"nutscoord.dta\" if year == 1950, id(_ID)\n\n\n\n\nAdding titles and notes\n\nspmap using \"nutscoord.dta\" if year == 1960, id(_ID) ///\n    title(\"My first Map\", size(large)) ///\n    note(\"Source: Ros√©s-Wolf (2020)\", size(vsmall) pos(5))\n\n\n\n\nIntroducing a fill\nLet‚Äôs now map the variable for National GDP per capita to the fill aesthetic for the year 1950.\n\nspmap national_gdp_cap_1990 using \"nutscoord.dta\" if year == 1950, id(_ID)\n\nNotice that we now get a legend in the bottom left hand corner that shows us what the different colours on the map mean. Look at Sweden and Denmark go!\n\n\n\nChange the colour palette\nHere we use the palette Blues2 to specify what colours we want to fill our base map polygons.\n\nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 1950, id(_ID) fcolor(Blues2)\n\n\n\n\nChange the formatting of the legend\n\nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 1950, id(_ID) fcolor(Blues2) legend(pos(9)) legstyle(2)\n\nThat‚Äôs a bit better! The numbers still look horrid though.\n\n\n\nFix legend formatting\n\nhelp format // you can format any variable\nformat regional_gdp_cap_1990 %12.0fc // 12 numbers left of the decimal point; 0 to the right; commas to denote thousands\nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 1950, id(_ID) fcolor(Blues2) legend(pos(9)) legstyle(2)\n\n\n\n\n\n\n\nStata number formatting\n\n\n\nIn Stata, the number formatting for graphs is controlled by format codes.\nThe format code ‚Äú%12.0fc‚Äù is a combination of four parts:\n\n‚Äú%12‚Äù specifies the number of spaces to the left of the decimal point, in this case 12 spaces.\n‚Äú.0‚Äù specifies the number of decimal places to be displayed, in this case 0.\n‚Äúf‚Äù specifies the data type, in this case a floating point number\n‚Äúc‚Äù specifies the format of the number, in this case including commas as the thousands separator.\n\nIn general, format codes can be used to control the appearance of numbers in tables, graphs and other outputs in Stata. Each format code has a combination of width, decimal places and data type specifiers to format the numbers as desired.\n\n\nThat‚Äôs better!\n\n\n\nChange legend breaks and add a title\nLet‚Äôs make the numbers in the legend more logical:\n\n\n\n\n\n\nTip\n\n\n\nIn Stata, the clmethod() command is used to specify the method for creating breaks (or intervals) on a color scale in a graph. The clbreaks() command is used to specify the values of the breaks.\nIn this specific example, the command ‚Äúclmethod(custom) clbreaks(0 (1000) 12000)‚Äù is used to create a custom color scale with the following properties:\n\nThe scale starts at 0.\nThe gradations of the scale are 1,000.\nThe top end of the scale is 12,000.\n\nThe clbreaks() command is set to ‚Äú0 (1000) 12000‚Äù which means that the color scale starts at 0 and continues to increase in increments of 1,000 up to 12,000. In other words, the scale will have 12 breaks or intervals: 0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000, 11000, 12000.\nThis custom scale will be used to colour the data points in the graph accordingly.\nIt‚Äôs important to note that the command ‚Äúclmethod(custom)‚Äù is required to use the custom breaks defined in the ‚Äúclbreaks()‚Äù command.\n\n\nThe number of breaks is a stylistic choice and can impact the message that the reader takes away. Consider how the dark blue areas stand out in Sweden and the UK in the second figure, compared to the first.\n(I think you see by now what the graph editor looks like - I‚Äôm saving the image from the editor from now on.)\n\nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 1950, id(_ID) fcolor(Blues2) legend(pos(9)) legstyle(2) ///\n    title(\"Regional GDP per Capita - 1950 \", size(medium)) ///\n    osize(0.02 ..) ocolor(gs8 ..) ///\n    clmethod(custom) clbreaks(0 (1000) 12000)\n\n\nspmap regional_gdp_cap_1990 using \"nutscoord.dta\" if year == 1950, id(_ID) fcolor(Blues2) legend(pos(9)) legstyle(1) ///\n    title(\"Regional GDP per Capita - 1950\", size(medium)) ///\n    osize(0.02 ..) ocolor(white ..) ///\n    clmethod(custom) clbreaks(0 3000 (1000) 6000 12000)\n\n\n\n\n\n\n\n\n\n\nLots of breaks\n\n\n\n\n\n\n\nFewer breaks\n\n\n\n\n\n\nComparison of breaks\n\n\n\n\n\nWhat do we do about the areas with no data?\nLet‚Äôs have a look at the employment share in industry.\nLook at the North of the UK in 1950 - such a powerhouse!\n\n\n\n\n\n\nTip\n\n\n\nThe ndfcolor(gray) command makes areas with no data greyed out (note the US spelling of gray vs grey)\n\n\n\nspmap employment_share_industry using \"nutscoord.dta\" if year == 1950, id(_ID) fcolor(Blues2) legend(pos(9)) legstyle(2) ///\n    title(\"Employment Share Industry - 1950\", size(medium)) ///\n    osize(0.02 ..) ocolor(white ..) ///\n    ndfcolor(gray) ndocolor(none ..) ndsize(0.02 ..)\n\nspmap employment_share_industry using \"nutscoord.dta\" if year == 1950, id(_ID) fcolor(Blues2) legend(pos(9)) legstyle(2) ///\n    title(\"Employment Share Industry - 1950\", size(medium)) ///\n    osize(0.02 ..) ocolor(white ..) ///\n    clmethod(custom) clbreaks(0 (0.2) 0.8) ///\n    ndfcolor(gray) ndocolor(none ..) ndsize(0.02 ..)\n    \nspmap employment_share_industry using \"nutscoord.dta\" if year == 1950, id(_ID) fcolor(Blues2) legstyle(2) ///\n    title(\"Employment Share Industry - 1950\", size(large)) ///\n    osize(0.02 ..) ocolor(white ..) ///\n    clmethod(custom) clbreaks(0 (0.2) 0.8) ///\n    legend(pos(9) size(medium) rowgap(1.5) label(5 \"60-80 %\") label(4 \"40-60 %\") ///\n    label(3 \"20-40 %\") label(2 \"0-20 %\") label(1 \"No data\")) ///\n    ndfcolor(gray) ndocolor(white ..) ndsize(0.02 ..)\n\n\n\n\n\n\n\n\n\n\nDefault legend\n\n\n\n\n\n\n\nBreaks by 20 percent\n\n\n\n\n\n\n\nA well formatted legend\n\n\n\n\n\n\nMore legend comparisons"
  },
  {
    "objectID": "resources/Additional-map-data.html",
    "href": "resources/Additional-map-data.html",
    "title": "Additional Data: Eurostat",
    "section": "",
    "text": "In addition to the database that we have used so far, we can introduce more data from Eurostat.\nYou can have a look at their nice interactive web-based tool here or in the iframe below."
  },
  {
    "objectID": "resources/Additional-map-data.html#using-this-data-in-stata",
    "href": "resources/Additional-map-data.html#using-this-data-in-stata",
    "title": "Additional Data: Eurostat",
    "section": "Using this data in Stata",
    "text": "Using this data in Stata\nTo use this data in Stata, you must download the dofile, datafile and coordinates file here:\n\nDofile\nDatafile\nCoordinates file"
  },
  {
    "objectID": "resources/Additional-map-data.html#series",
    "href": "resources/Additional-map-data.html#series",
    "title": "Additional Data: Eurostat",
    "section": "Series",
    "text": "Series\n\n\n\n\n\n\n\n\nList of indicators\n\n\n\n\nAgriculture\n\n\nEmployment rate (% of population aged 20-64)\n\n\nGross domestic product (PPS per inhabitant in % of the EU-27 average)\n\n\nGross domestic product (PPS per inhabitant)\n\n\nLivestock farming, Dairy cows\n\n\nLivestock farming, Live goats\n\n\nLivestock farming, Live sheep\n\n\nLivestock farming, Live swine, domestic species\n\n\nLivestock farming, bovine animals (1 000 heads of livestock)\n\n\nPopulation (persons)\n\n\nPopulation density (persons per square kilometre)\n\n\nProduction of cow milk on farms (1 000 tonnes)\n\n\nUnemployment rate (% of labour force aged 15-74)\n\n\nEconomy\n\n\nEmployment rate, Females (% of population aged 20-64)\n\n\nEmployment rate, Males (% of population aged 20-64)\n\n\nEmployment rate, Total (% of population aged 20-64)\n\n\nGross domestic product (Euro per inhabitant in % of the EU-27 average)\n\n\nGross domestic product (Euro per inhabitant)\n\n\nGross domestic product (PPS per inhabitant in % of the EU-27 average)\n\n\nGross domestic product (PPS per inhabitant)\n\n\nGross value added at basic prices (million EUR)\n\n\nIncome of private households, Balance of primary incomes/National income, net (PPS per inhabitant, based on final consumption)\n\n\nIncome of private households, Disposable income, net (PPS per inhabitant, based on final consumption)\n\n\nPopulation (persons)\n\n\nPopulation density (persons per square kilometre)\n\n\nReal growth rate of regional gross value added, Index, 2015=100 (% change on previous year)\n\n\nReal growth rate of regional gross value added, Percentage change on previous period (% change on previous year)\n\n\nUnemployment rate (% of labour force aged 15-74)\n\n\nEducation\n\n\nAdult participation in education and training (% of population aged 25-64)\n\n\nEarly leavers from education and training (% of population aged 18-24)\n\n\nEmployment rate (% of population aged 20-64)\n\n\nEmployment rate of recent graduates (% of population aged 20-34)\n\n\nGross domestic product (PPS per inhabitant in % of the EU-27 average)\n\n\nGross domestic product (PPS per inhabitant)\n\n\nParticipation in early childhood education (% of 4 year-olds)\n\n\nParticipation in education, Primary and lower secondary education (levels 1 and 2) (%)\n\n\nParticipation in education, Tertiary education (levels 5-8) (%)\n\n\nPopulation (persons)\n\n\nPopulation density (persons per square kilometre)\n\n\nStudents in upper secondary education, Upper secondary education - general (%)\n\n\nStudents in upper secondary education, Upper secondary education - vocational (%)\n\n\nTertiary educational attainment, Females (% of population aged 25-64)\n\n\nTertiary educational attainment, Females (% of population aged 30-34)\n\n\nTertiary educational attainment, Males (% of population aged 25-64)\n\n\nTertiary educational attainment, Males (% of population aged 30-34)\n\n\nTertiary educational attainment, Total (% of population aged 25-64)\n\n\nTertiary educational attainment, Total (% of population aged 30-34)\n\n\nUnemployment rate (% of labour force aged 15-74)\n\n\nYoung people neither in employment nor in education and training (% of population aged 15-24)\n\n\nHealth\n\n\nAll causes of death (crude death rate)\n\n\nDeath due to cancer (crude death rate)\n\n\nDeath due to diseases of the circulatory system (crude death rate)\n\n\nDeath due to diseases of the respiratory system (crude death rate)\n\n\nEmployment rate (% of population aged 20-64)\n\n\nGross domestic product (PPS per inhabitant in % of the EU-27 average)\n\n\nGross domestic product (PPS per inhabitant)\n\n\nHospital beds (per 100 000 inhabitants)\n\n\nMedical doctors (per 100 000 inhabitants)\n\n\nPopulation (persons)\n\n\nPopulation density (persons per square kilometre)\n\n\nUnemployment rate (% of labour force aged 15-74)\n\n\nLabour Market\n\n\nEconomic activity rate (% of population aged 15-64)\n\n\nEmployment rate, From 15 to 24 years\n\n\nEmployment rate, From 20 to 64 years\n\n\nEmployment rate, From 55 to 64 years\n\n\nGross domestic product (PPS per inhabitant in % of the EU-27 average)\n\n\nGross domestic product (PPS per inhabitant)\n\n\nLong-term unemployment share, Females (% of labour force aged 15-74)\n\n\nLong-term unemployment share, Males (% of labour force aged 15-74)\n\n\nLong-term unemployment share, Total (% of labour force aged 15-74)\n\n\nPopulation (persons)\n\n\nPopulation density (persons per square kilometre)\n\n\nUnemployment rate, Females (% of labour force aged 15-74)\n\n\nUnemployment rate, Males (% of labour force aged 15-74)\n\n\nUnemployment rate, Total (% of labour force aged 15-74)\n\n\nYoung people neither in employment nor in education and training (% of population aged 15-24)\n\n\nYouth unemployment rate, Females (% of labour force aged 15-24)\n\n\nYouth unemployment rate, Males (% of labour force aged 15-24)\n\n\nYouth unemployment rate, Total (% of labour force aged 15-24)\n\n\nPopulation\n\n\nEmployment rate (% of population aged 20-64)\n\n\nGross domestic product (PPS per inhabitant in % of the EU-27 average)\n\n\nGross domestic product (PPS per inhabitant)\n\n\nInfant mortality rate (deaths per 1 000 live births)\n\n\nLife expectancy at birth, Females (years)\n\n\nLife expectancy at birth, Males (years)\n\n\nLife expectancy at birth, Total (years)\n\n\nPopulation change, Crude rate of natural change of population (per 1 000 persons)\n\n\nPopulation change, Crude rate of net migration plus statistical adjustment (per 1 000 persons)\n\n\nPopulation change, Crude rate of total population change (per 1 000 persons)\n\n\nPopulation density (persons per square kilometre)\n\n\nPopulation, 65 years or over (persons)\n\n\nPopulation, From 15 to 64 years (persons)\n\n\nPopulation, Less than 15 years (persons)\n\n\nPopulation, Total (persons)\n\n\nTotal fertility rate (live births per woman)\n\n\nUnemployment rate (% of labour force aged 15-74)\n\n\nScience And Technology\n\n\nEmployment in high - tech sectors (% of total employment)\n\n\nEmployment rate (% of population aged 20-64)\n\n\nGross domestic product (PPS per inhabitant in % of the EU-27 average)\n\n\nGross domestic product (PPS per inhabitant)\n\n\nHuman resources in science and technology (% of labour force)\n\n\nIntramural R & D expenditure (% of gross domestic product)\n\n\nPopulation (persons)\n\n\nPopulation density (persons per square kilometre)\n\n\nResearchers in all sectors (% of total employment)\n\n\nUnemployment rate (% of labour force aged 15-74)\n\n\nTourism\n\n\nBedroom occupancy rate in hotels and similar establishments\n\n\nNights spent in tourist accommodation (per 1 000 inhabitants)\n\n\nNights spent in tourist accommodation (per square kilometre)\n\n\nPopulation density (persons per square kilometre)\n\n\nTransport\n\n\nAir transport of freight (1 000 tonnes, loaded and unloaded)\n\n\nAir transport of passengers (1 000 passengers, arrivals and depatures)\n\n\nEmployment rate (% of population aged 20-64)\n\n\nFatal road accidents (per million inhabitants)\n\n\nGross domestic product (PPS per inhabitant in % of the EU-27 average)\n\n\nGross domestic product (PPS per inhabitant)\n\n\nMaritime transport of freight (1 000 tonnes, loaded and unloaded)\n\n\nMaritime transport of passengers (1 000 passengers, embarked and disembarked)\n\n\nMotorisation rate (passenger cars per 1 000 inhabitants)\n\n\nNetworks, Motorways (km per 1 000 square km)\n\n\nNetworks, Total railway lines (km per 1 000 square km)\n\n\nPopulation (persons)\n\n\nPopulation density (persons per square kilometre)\n\n\nUnemployment rate (% of labour force aged 15-74)"
  },
  {
    "objectID": "resources/Additional-map-data.html#plots",
    "href": "resources/Additional-map-data.html#plots",
    "title": "Additional Data: Eurostat",
    "section": "Plots",
    "text": "Plots\n\n\nCode\nplot_levels &lt;- function(indicator_in, period_in) {\n  df_map %&gt;%\n    filter(\n      indicator == indicator_in,\n      period == period_in\n    ) %&gt;%\n    ggplot(aes(fill = value, geometry = geometry)) +\n  geom_sf(data = world, aes(geometry = geometry), fill = \"grey\", colour = \"white\") +\n  geom_sf() +\n  coord_sf(xlim = c(-23, 42), ylim = c(35, 70), crs = st_crs(4326)) +\n    scale_fill_viridis_c(labels = scales::number_format()) +\n    labs(fill = indicator_in) +\n    theme(legend.position = \"bottom\") +\n    guides(fill = guide_colourbar(title.position = \"top\", title.hjust = 0.5, barwidth = 20)) +\n    labs(title = indicator_in)\n}\n\nplot_pc &lt;- function(indicator_in, period_in) {\n  stat_domain_in &lt;- df_map %&gt;%\n    filter(\n      indicator == indicator_in,\n      period == period_in\n    ) %&gt;%\n    distinct(stat_domain) %&gt;%\n    pull()\n\n\n  df_map %&gt;%\n    filter(\n      indicator %in% c(indicator_in, \"Population (persons)\"),\n      period == period_in,\n      stat_domain == stat_domain_in\n    ) %&gt;%\n    distinct(region, indicator, value, .keep_all = T) %&gt;%\n    group_by(region) %&gt;%\n    mutate(value_pc = value[indicator == indicator_in] / value[indicator == \"Population (persons)\"]) %&gt;%\n    ggplot(aes(fill = value_pc, geometry = geometry)) +\n  geom_sf(data = world, aes(geometry = geometry), fill = \"grey\", colour = \"white\") +\n  geom_sf() +\n  coord_sf(xlim = c(-23, 42), ylim = c(35, 70), crs = st_crs(4326)) +\n    scale_fill_viridis_c(labels = scales::number_format()) +\n    labs(\n      fill = str_c(indicator_in, \" per capita\"),\n      title = str_c(indicator_in, \" per capita\")\n    ) +\n    theme(legend.position = \"bottom\") +\n    guides(fill = guide_colourbar(title.position = \"top\", title.hjust = 0.5, barwidth = 20))\n}\n\nplot_scatter &lt;- function(indicator_in, period_in) {\n  df_map %&gt;%\n    filter(\n      indicator %in% c(indicator_in, \"Gross domestic product (Euro per inhabitant)\"),\n      period == period_in\n    ) %&gt;%\n    distinct(region, indicator, .keep_all = T) %&gt;%\n    select(-c(stat_domain, year)) %&gt;%\n    pivot_wider(names_from = indicator, values_from = value) %&gt;%\n    mutate(country = fct_lump(country, 10)) %&gt;%\n    ggplot(aes(\n      x = `Gross domestic product (Euro per inhabitant)`,\n      y = .data[[indicator_in]],\n      colour = country\n    )) +\n    geom_point() +\n    geom_smooth(aes(group = 1), se = F) +\n    scale_x_continuous(labels = scales::dollar_format(prefix = \"‚Ç¨\")) +\n    labs(\n      colour = \"Country\",\n      title = str_c(\"Scatterplot of GDP per capita and\\n\", indicator_in)\n    )\n}\n\n\n\n\nAgricultureEconomyEducationHealthPopulation\n\n\nWhat can we say about milk production? Look at Switzerland go!\n\n\n\n\n\n\n\n\n\nHow about sheep farming? Sheesh have a look at Crete!\n\n\n\n\n\n\n\n\n\nThere isn‚Äôt a super clear relationship between number of cows and GDP per capita. Good news that you can farm in a rich country still!\n\n\n\n\n\n\n\n\n\n\n\nWhy does Turkey have such a low level of employment among women?\n\n\n\n\n\n\n\n\n\nIt seems that there is a strong relationship between GDP per capita and the economic activity rate. Can you guess about the direction of causality?\n\n\n\n\n\n\n\n\n\nDo we see agglomeration effects with higher GDP per capita in areas with higher population density? Note the logged y axis.\n\n\n\n\n\n\n\n\n\n\n\nLook at how well Scandinavia compares to Western Europe in rates of university education among women!\n(I don‚Äôt know why France is mising‚Ä¶)\n\n\n\n\n\n\n\n\n\nWho leaves school early? Maybe people in places where formal education is not that enticing?\n\n\n\n\n\n\n\n\n\nLook at how the countries separate here - wow!\n\n\n\n\n\n\n\n\n\n\n\nSee how few hospital beds Sweden has compared to Norway.\n\n\n\n\n\n\n\n\n\nSeems like you have to be a rich country in order to live long enough to die from cancer :(\n\n\n\n\n\n\n\n\n\nLook at how the countries separate here - wow!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInteresting demographic trends! You have to be rich enough to have children in a rich country!"
  },
  {
    "objectID": "resources/adm-resources/dose-prep.html",
    "href": "resources/adm-resources/dose-prep.html",
    "title": "Prepare DOSE data for Stata",
    "section": "",
    "text": "The shapefiles are huge. We need to reduce the size of the shapefiles to make them more manageable.\nRead in the big file and select the right layer, downloaded from here\nRead in the data from DOSE\nSelect the parts of the world that we need\nNow we want to drop the regions that are incorrect\nMake a map after joining the data to the map\nLet‚Äôs make world_filtered a simpler shape so that it is smaller"
  },
  {
    "objectID": "resources/adm-resources/dose-prep.html#we-need-to-join-up-the-shapefiles-with-the-data-from-dose",
    "href": "resources/adm-resources/dose-prep.html#we-need-to-join-up-the-shapefiles-with-the-data-from-dose",
    "title": "Prepare DOSE data for Stata",
    "section": "",
    "text": "The shapefiles are huge. We need to reduce the size of the shapefiles to make them more manageable.\nRead in the big file and select the right layer, downloaded from here\nRead in the data from DOSE\nSelect the parts of the world that we need\nNow we want to drop the regions that are incorrect\nMake a map after joining the data to the map\nLet‚Äôs make world_filtered a simpler shape so that it is smaller"
  },
  {
    "objectID": "resources/resources-scraper.html",
    "href": "resources/resources-scraper.html",
    "title": "Stata-resources",
    "section": "",
    "text": "Scrape website of Stata for resources and text to make a table.\n\nlibrary(tidyverse)\nlibrary(rvest)\n\nget_info &lt;- function(url_in) {\n  url &lt;- url_in\n\n  html &lt;- read_html(url)\n\n  message(\"Getting info\")\n  titles &lt;- html %&gt;%\n    html_nodes(\"dt\") %&gt;%\n    html_nodes(\"a\") %&gt;%\n    html_text() %&gt;%\n    str_squish() %&gt;%\n    as_tibble() %&gt;%\n    rename(title = value) %&gt;%\n    mutate(rn = row_number())\n\n  links &lt;- html %&gt;%\n    html_nodes(\"dt\") %&gt;%\n    html_nodes(\"a\") %&gt;%\n    html_attr(\"href\") %&gt;%\n    as_tibble() %&gt;%\n    rename(link = value) %&gt;%\n    mutate(rn = row_number())\n\n  descs &lt;- html %&gt;%\n    html_nodes(\"dd\") %&gt;%\n    # html_nodes(\"a\") %&gt;%\n    html_text() %&gt;%\n    str_squish() %&gt;%\n    as_tibble() %&gt;%\n    rename(desc = value) %&gt;%\n    filter(!str_detect(desc, \"[0-9]+ Users\")) %&gt;%\n    mutate(rn = row_number())\n\n  df &lt;- titles %&gt;%\n    inner_join(links) %&gt;%\n    inner_join(descs) %&gt;%\n    select(-rn)\n\n  return(df)\n}\n\nresources &lt;- get_info(\"https://www.stata.com/links/resources-for-learning-stata/\")\n\nresources %&gt;% write_rds(\"resources/stata-resources.rds\")"
  },
  {
    "objectID": "resources/resources-scraper.html#purpose",
    "href": "resources/resources-scraper.html#purpose",
    "title": "Stata-resources",
    "section": "",
    "text": "Scrape website of Stata for resources and text to make a table.\n\nlibrary(tidyverse)\nlibrary(rvest)\n\nget_info &lt;- function(url_in) {\n  url &lt;- url_in\n\n  html &lt;- read_html(url)\n\n  message(\"Getting info\")\n  titles &lt;- html %&gt;%\n    html_nodes(\"dt\") %&gt;%\n    html_nodes(\"a\") %&gt;%\n    html_text() %&gt;%\n    str_squish() %&gt;%\n    as_tibble() %&gt;%\n    rename(title = value) %&gt;%\n    mutate(rn = row_number())\n\n  links &lt;- html %&gt;%\n    html_nodes(\"dt\") %&gt;%\n    html_nodes(\"a\") %&gt;%\n    html_attr(\"href\") %&gt;%\n    as_tibble() %&gt;%\n    rename(link = value) %&gt;%\n    mutate(rn = row_number())\n\n  descs &lt;- html %&gt;%\n    html_nodes(\"dd\") %&gt;%\n    # html_nodes(\"a\") %&gt;%\n    html_text() %&gt;%\n    str_squish() %&gt;%\n    as_tibble() %&gt;%\n    rename(desc = value) %&gt;%\n    filter(!str_detect(desc, \"[0-9]+ Users\")) %&gt;%\n    mutate(rn = row_number())\n\n  df &lt;- titles %&gt;%\n    inner_join(links) %&gt;%\n    inner_join(descs) %&gt;%\n    select(-rn)\n\n  return(df)\n}\n\nresources &lt;- get_info(\"https://www.stata.com/links/resources-for-learning-stata/\")\n\nresources %&gt;% write_rds(\"resources/stata-resources.rds\")"
  },
  {
    "objectID": "resources/beta-convergence.html",
    "href": "resources/beta-convergence.html",
    "title": "Beta-convergence",
    "section": "",
    "text": "In your lectures you have seen that within a country, the poorer regions tend to grow faster than the richer regions. This is known as beta-convergence, or sometimes the ‚Äúcatch-up effect‚Äù.\nIn this exercise, we will look at the data and see if we can find evidence of beta-convergence Germany since 1950. (Technically, we are looking at unconditional beta-convergence, as distinct from conditional beta-convergence, which holds the investment rate and the population growth rate constant).\nYou can download the do-file for this exercise here."
  },
  {
    "objectID": "resources/beta-convergence.html#setup",
    "href": "resources/beta-convergence.html#setup",
    "title": "Beta-convergence",
    "section": "Setup",
    "text": "Setup\nFirst we need to set our working directory and load the data we will be using. We will use the Roses and Wolf dataset that you have used in the previous labs and exercises.\n\nclear all\nset more off\n\n# Set your own directory here\ncd \"/Users/jonathanjayes/Downloads/Lab-1/\"\n\n# Read in the data\nuse regional_dataset, clear"
  },
  {
    "objectID": "resources/beta-convergence.html#calculating-growth-rates",
    "href": "resources/beta-convergence.html#calculating-growth-rates",
    "title": "Beta-convergence",
    "section": "Calculating growth rates",
    "text": "Calculating growth rates\nWe will start by calculating the growth rates of the GDP per capita (in levels) for each region in Germany for each time period in our dataset.\nThere are a few ways to calculate growth rates. I choose to show two: the method suggested in Roses and Wolf (2018) - the average growth rate method - and the compound annual growth rate (CAGR) method.\nIn Chapter 2: Regional Economic Development in Europe, 1900-2010, A description of the patterns your textbook reads: ‚ÄúThe general approach is to regress the average annual growth rate in GDP per capita of a region over some period on the level of GDP per capita at the beginning of the period (in logs)‚Äù (p.¬†22).\nWe do this by taking the variable GDP per capita in 1990 dollars and then calculating the growth rate by taking the difference between GDP per capita in year t and GDP per capita in year t-1, dividing by GDP per capita in year t-1, and then multiplying by the difference in years to get an annual growth rate in each period.\nWe will then calculate the average growth rate by taking the mean of the growth rates for each region.\n\n# Step 1: generate log GDP per capita variable for use later\ngen log_gdp_pc = log(regional_gdp_cap_1990)\n \nkeep if country == \"Germany\"\n\n# Step 2: calculate the growth in GDP per capita from 1950 onwards\nkeep if year &gt;= 1950\n\n# xtset tells Stata we will do time series operations\nxtset _ID year\n\n# Generate the growth rate by taking the difference between GDP per capita in year t and GDP per capita in year t-1, dividing by GDP per capita in year t-1, and then multiplying by the difference in years to get an annual growth rate in each period.\nbysort _ID (year): gen growth_regional_gdp_cap_1990 = (regional_gdp_cap_1990[_n]-regional_gdp_cap_1990[_n-1]) / (regional_gdp_cap_1990[_n-1] * (year - year[_n-1]))\n\n# Take the mean of the growth rates for each region\nbysort _ID: egen mean_growth_rate = mean(growth_regional_gdp_cap_1990)\n\n# Step 3: save the GDP per capita from 1950\nkeep if year == 1950"
  },
  {
    "objectID": "resources/beta-convergence.html#beta-convergence-plot",
    "href": "resources/beta-convergence.html#beta-convergence-plot",
    "title": "Beta-convergence",
    "section": "Beta-convergence plot",
    "text": "Beta-convergence plot\nHere we draw a scatterplot with the mean growth rate on the y-axis and the initial GDP per capita (logged) on the x-axis. We also add a linear regression line to the graph.\nWe use the twoway command to draw the graph. The scatter option tells Stata to draw a scatter plot, and the lfit option tells Stata to draw a linear regression line. We also add a title and subtitle to the graph, and label the axes.\n\n# Then draw the graph with a scatter plot and a linear regression line.\ntwoway (scatter mean_growth_rate log_gdp_pc) ///\n (lfit mean_growth_rate log_gdp_pc, legend(label(1 \"NUTS2 Regions\") label(2 \"Linear regression line\"))) ///\n, title(\"Beta-convergence plot\") subtitle(\"Germany 1950 - 2015\") ytitle(\"Average growth rate since 1950\") ///\nxtitle(\"Initial GDP per capita (logged)\")"
  },
  {
    "objectID": "resources/beta-convergence.html#beta-convergence-graph-with-labels",
    "href": "resources/beta-convergence.html#beta-convergence-graph-with-labels",
    "title": "Beta-convergence",
    "section": "Beta-convergence graph with labels",
    "text": "Beta-convergence graph with labels\nWe can also add labels to the points in the graph. We do this by adding the mlabel option to the scatter command. This can help us identify which regions of interest are which.\n\ngen region_labels = region if region == \"Berlin\" | region == \"Schleswig-Holstein\" | region == \"Hamburg\"\n\n# Then draw the graph with two lines through out scatter points. Label the points\ntwoway (scatter mean_growth_rate log_gdp_pc, mlabel(region_labels)) ///\n (lfit mean_growth_rate log_gdp_pc, legend(label(1 \"NUTS2 Regions\") label(2 \"Linear regression line\"))) ///\n, title(\"Beta-convergence plot\") subtitle(\"Germany 1950 - 2015\") ytitle(\"Average growth rate since 1950\") ///\nxtitle(\"Initial GDP per capita (logged)\")"
  },
  {
    "objectID": "resources/beta-convergence.html#compound-annual-growth-rate-method",
    "href": "resources/beta-convergence.html#compound-annual-growth-rate-method",
    "title": "Beta-convergence",
    "section": "Compound annual growth rate method",
    "text": "Compound annual growth rate method\nWe can also calculate the growth rates using the compound annual growth rate (CAGR) method. This is a common method for calculating growth rates.\nThe formula for the compound annual growth rate is:\n\\[CAGR = \\left(\\frac{V_f}{V_i}\\right)^{\\frac{1}{n}} - 1\\]\nWhere \\(V_f\\) is the final value, \\(V_i\\) is the initial value, and \\(n\\) is the number of periods.\nHere we calculate the CAGR for each region in Germany:\nWe start by keeping only the data for Germany and the years 1950 and 2015. We then reshape the data to make it wide. This creates two new variables, log_gdp_pc1950 and log_gdp_pc2015, which we use to calculate the CAGR for each region. We then calculate the CAGR for each region and scale it to percentage for a more sensible y-axis in the plot below.\n\n# Read in the data\nuse regional_dataset, clear\n\n\n# Step 1: generate log GDP per capita variable\ngen log_gdp_pc = log(regional_gdp_cap_1990)\n \n# Step 2: calculate the growth in GDP per capita from 1950 onwards\nkeep if country == \"Germany\"\n\nkeep if year == 1950 | year == 2015\n\nkeep region year log_gdp_pc _ID\n\n# Make data wide so that we can \nreshape wide log_gdp_pc, i(_ID) j(year)\n\ngenerate cagr = (exp(log(log_gdp_pc2015/log_gdp_pc1950)/65)) - 1\n\n# Step 3: scale to percentage for a more sensible y-axis in plot below\nreplace cagr = cagr * 100"
  },
  {
    "objectID": "resources/beta-convergence.html#beta-convergence-plot-with-cagr",
    "href": "resources/beta-convergence.html#beta-convergence-plot-with-cagr",
    "title": "Beta-convergence",
    "section": "Beta-convergence plot with CAGR",
    "text": "Beta-convergence plot with CAGR\nWe can now draw a scatterplot with the CAGR on the y-axis and the initial GDP per capita (logged) on the x-axis. We also add a linear regression line to the graph.\n\nAgain we can add labels to the points in the graph. We do this by adding the mlabel option to the scatter command. This can help us identify which regions of interest are which."
  },
  {
    "objectID": "resources/beta-convergence.html#which-method-to-use-to-calculate-growth-rates",
    "href": "resources/beta-convergence.html#which-method-to-use-to-calculate-growth-rates",
    "title": "Beta-convergence",
    "section": "Which method to use to calculate growth rates?",
    "text": "Which method to use to calculate growth rates?\nThe two methods give us slightly different results, but the overall pattern is the same. The CAGR method is more commonly used, but the average growth rate method is also valid. The CAGR method is more sensitive to the start and end years, so it is important to choose the start and end years carefully."
  },
  {
    "objectID": "resources/installing-stata.html",
    "href": "resources/installing-stata.html",
    "title": "How to install Stata on your personal computers",
    "section": "",
    "text": "This is a guide for downloading and installing Stata on your personal computer.\nIf your Stata license has expired, you can follow the steps below to renew it, you do not need to download the software again, just the license file (.pdf)."
  },
  {
    "objectID": "resources/installing-stata.html#step-1-go-to-lu-software-downloads-page",
    "href": "resources/installing-stata.html#step-1-go-to-lu-software-downloads-page",
    "title": "How to install Stata on your personal computers",
    "section": "Step 1: Go to LU software downloads page",
    "text": "Step 1: Go to LU software downloads page\nThe page can be found here.\nIt looks like this (in English):\n\n\n\nSoftware downloads page"
  },
  {
    "objectID": "resources/installing-stata.html#step-2-log-in-to-the-lu-service-desk-programme-portal-at-the-bottom-of-the-page",
    "href": "resources/installing-stata.html#step-2-log-in-to-the-lu-service-desk-programme-portal-at-the-bottom-of-the-page",
    "title": "How to install Stata on your personal computers",
    "section": "Step 2: Log in to the LU service desk programme portal at the bottom of the page",
    "text": "Step 2: Log in to the LU service desk programme portal at the bottom of the page\nYou need to be connected to the LU network to access this page, or the LU VPN I believe. Here is the link to the LU service desk programme portal.\n\n\n\nService desk portal"
  },
  {
    "objectID": "resources/installing-stata.html#step-3-log-in-with-your-lu-credentials",
    "href": "resources/installing-stata.html#step-3-log-in-with-your-lu-credentials",
    "title": "How to install Stata on your personal computers",
    "section": "Step 3: Log in with your LU credentials",
    "text": "Step 3: Log in with your LU credentials\nYou will be asked to log in with your student account.\n\n\n\nLog in"
  },
  {
    "objectID": "resources/installing-stata.html#step-4-download-stata-and-the-license-file-.pdf",
    "href": "resources/installing-stata.html#step-4-download-stata-and-the-license-file-.pdf",
    "title": "How to install Stata on your personal computers",
    "section": "Step 4: Download Stata and the license file (.pdf)",
    "text": "Step 4: Download Stata and the license file (.pdf)\nYou will be able to download Stata and the license file from the page that opens after you log in and select your operating system.\n\n\n\nDownload Stata and the license file"
  },
  {
    "objectID": "resources/installing-stata.html#step-5-install-stata",
    "href": "resources/installing-stata.html#step-5-install-stata",
    "title": "How to install Stata on your personal computers",
    "section": "Step 5: Install Stata",
    "text": "Step 5: Install Stata\nRun the installer and follow the instructions. You will be asked to enter the license, code and authorization number from the license PDF file you downloaded in step 4.\nWhen installed correctly, it should look like this, noting when the license expires:\n\n\n\nStata installed correctly"
  },
  {
    "objectID": "resources/dose-demo.html",
    "href": "resources/dose-demo.html",
    "title": "Additional Data: DOSE",
    "section": "",
    "text": "The data that you should use in your project is an amazing compilation of sub-national economic data all the way from 1900 to 2015. It covers all of Europe.\nIn your project, you may want to add some colour to your story by comparing the economic development of your country to other countries outside of the dataset, be it in the Americas or Asia.\nThe DOSE ‚Äì Global data set of reported sub-national economic output dataset is a great resource for this. It contains data on regional economic development for 83 countries in the world, at varying times from 1960 to today.\nI have formatted it into Stata format and saved a shapefile that you can use to create maps to supplement your analysis, if you wish.\nYou can download the Stata data file here\nYou can download the coordinates file here\nYou can download a dofile to create maps here\n\nVariables\nThere are several variables in the dataset. Here are the labels for each of them, as you can use in Stata.\n\nlabel variable country \"Full-length country name\"\nlabel variable GID_0 \"3-digits ISO-Code\"\nlabel variable region \"Primary region name\"\nlabel variable GID_1 \"GADM-identifier for level-1 administrative unit, or customly created identifier\"\nlabel variable year \"Calendar year\"\nlabel variable grp_lcu \"Gross regional product in local currency and current prices\"\nlabel variable pop \"Regional population estimate\"\nlabel variable grp_pc_lcu \"Gross regional product per capita in local currency and current prices\"\nlabel variable grp_pc_usd \"Gross regional product per capita in US dollar and current prices\"\nlabel variable grp_pc_lcu_2015 \"Gross regional product per capita in local currency and 2015 prices\"\nlabel variable grp_pc_usd_2015 \"Gross regional product per capita in US dollar and US 2015 prices\"\nlabel variable grp_pc_lcu2015_usd \"Gross regional product per capita in local 2015 prices and converted to US dollar using the 2015 exchange rate\"\nlabel variable cpi_2015 \"Worldbank Consumer Price Index with base year 2015\"\nlabel variable deflator_2015 \"Worldbank national GDP deflator with base year 2015\"\nlabel variable fx \"FRED market exchange rate (local currency to one USD)\"\nlabel variable PPP \"Purchasing Power Parity exchange rate (local currency to one international dollar)\"\nlabel variable StructChange \"Categorical variable indicating the start of a new data source, changes in administrative boundaries, and when regional time series were extended to a previous version of DOSE\"\nlabel variable T_a \"Area-weighted annual mean temperature\"\nlabel variable P_a \"Area-weighted annual total precipitation\"\n\n\n\nData coverage\nNot every country has data for every year. Here is a plot showing the data coverage for a selection of half of the countries in the dataset.\n\n\n\n\n\n\n\n\n\n\n\nExample: GDP per capita\nWe might want to plot the evolution of gross regional product per capita in South African and Mozambique to contrast with Sweden and Finland.\nWe want to know what the names of the regions are first:\n\n\nReading layer `dose_v2_map_file' from data source \n  `/Users/jonathanjayes/Documents/PhD/EOSE09-site/data/dose_v2_map_file.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1602 features and 11 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -179.9984 ymin: -55.9797 xmax: 179.9979 ymax: 83.11042\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\n\n\n\nNext we can create a facet plot and fill the polygons with the GRP per capita in 2000, 2004, 2008, 2012, and 2016."
  },
  {
    "objectID": "lectures/lecture-1.html#purpose",
    "href": "lectures/lecture-1.html#purpose",
    "title": "Data visualization",
    "section": "Purpose",
    "text": "Purpose\n\n\n\nGet you excited about storytelling with data\nShow some tips and tricks to make your maps and charts pop\n\n\n\n\n\n\nHans Rosling‚Äôs the best stats you‚Äôve ever seen\n\n\n\nIf you have not seen Hans Rosling‚Äôs TED talk, I highly recommend it. It is a great example of how to tell a story with data.\nHans Rosling was a Swedish doctor, who was passionate about using data to tell stories. He was a professor of international health at the Karolinska Institute in Stockholm, and he co-founded the Gapminder Foundation that was great at geting policy makers excited about data based decision making.\n\n\nThis is not about the software. Rather, it is about the theory behind communicating well with data"
  },
  {
    "objectID": "lectures/lecture-1.html#structure",
    "href": "lectures/lecture-1.html#structure",
    "title": "Data visualization",
    "section": "Structure",
    "text": "Structure\n\n\n\nImproving your maps\nOvercoming Excel\nTelling a story with data\nReproducing figures for publication\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nToday‚Äôs lecture will begin with a little addition to the excercises that we worked on yesterday. Then we will talk about Excel as a software, how to tell a story with your data, and we will end with a little demonstration about how to reproduce figures for your own analysis.\n\n\nA cartoon in the style of Aardman Animations depicting an animatronic computer fighting with a spreadsheet, vibrant green lighting"
  },
  {
    "objectID": "lectures/lecture-1.html#everything-is-a-story",
    "href": "lectures/lecture-1.html#everything-is-a-story",
    "title": "Data visualization",
    "section": "Everything is a story",
    "text": "Everything is a story\n\n\nThis is a line that Abed says to Jeff in one of my favorite TV shows, Comunity.\nCan I get a show of hands, who has seen Community?\nIn any case, Community‚Äôs creator Dan Harmon really likes this idea about everything being a story."
  },
  {
    "objectID": "lectures/lecture-1.html#dan-harmons-story-circle",
    "href": "lectures/lecture-1.html#dan-harmons-story-circle",
    "title": "Data visualization",
    "section": "Dan Harmon‚Äôs Story Circle",
    "text": "Dan Harmon‚Äôs Story Circle\n\n\nSo Dan Harmon also wrote Rick and Morty. Can I get a show of hands, who has seen Rick and Morty?\nGreat! So Dan Harmon has this idea of the story circle. It is a way to structure a story, demonstrated here with an eight part pie chart showing an example of a Rick and Morty episode.\nRead the parts of the story circle out loud."
  },
  {
    "objectID": "lectures/lecture-1.html#our-story-circle",
    "href": "lectures/lecture-1.html#our-story-circle",
    "title": "Data visualization",
    "section": "Our Story Circle",
    "text": "Our Story Circle\n\n\nZone of comfort: Data in excel\nWant something: to be better at communicating with your data\nEnter an unfamiliar situation: Looking closely at maps and charts\nAdapt to it: Practice discussing the differences\nGet what they wanted: Banging chart skills\nPay a heavy price: Hard to concentrate - relax with an inspiring video\nReturn to familiar situation: your projects\nHaving changed: I hope you learn something."
  },
  {
    "objectID": "lectures/lecture-1.html#section",
    "href": "lectures/lecture-1.html#section",
    "title": "Data visualization",
    "section": "",
    "text": "Improving your maps\n\nLegend breaks"
  },
  {
    "objectID": "lectures/lecture-1.html#recap-from-lab-1-exercises",
    "href": "lectures/lecture-1.html#recap-from-lab-1-exercises",
    "title": "Data visualization",
    "section": "Recap from Lab 1 exercises",
    "text": "Recap from Lab 1 exercises\n\nMake a map of the share of employment in industry in the year 2010 across the whole dataset"
  },
  {
    "objectID": "lectures/lecture-1.html#recap-from-lab-1-exercises-1",
    "href": "lectures/lecture-1.html#recap-from-lab-1-exercises-1",
    "title": "Data visualization",
    "section": "Recap from Lab 1 exercises",
    "text": "Recap from Lab 1 exercises\n\n\n\n‚àí+\n01:00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDiscuss with your neighbour:\n\nWhat do we like?\nWhat is confusing?\n\n\nspmap employment_share_industry using \"nutscoord.dta\" \n  if year == 2010, \n  id(_ID) fcolor(Spectral) legstyle(2) \n    title(\"Employment Share Industry - 2010\", size(large)) \n    osize(0.02 ..) ocolor(white ..) \n    clmethod(custom) clbreaks(0 (0.2) 1)\n    legend(pos(9) size(medium) rowgap(1.5) \n    label(6 \"80-100 %\") label(5 \"60-80 %\") \n    label(4 \"40-60 %\") label(3 \"20-40 %\") label(2 \"0-20 %\") \n    label(1 \"No Data\")) \n    ndfcolor(gray) ndocolor(white ..) ndsize(0.02 ..)\n\n\n\nSo I am going to ask you to turn to your neighbour, and discuss what you like about this map, and what is confusing about it.\nYou should hear a sound when the time is up. I‚Äôm really proud of the countdown timer and the sound in the slides and will be very sad if it doesn‚Äôt work, but if it doesn‚Äôt, I‚Äôll just shout.\nOkay - what do we think? Feel free to raise your hands if you want to report back."
  },
  {
    "objectID": "lectures/lecture-1.html#lets-plot-the-distribution-of-the-data",
    "href": "lectures/lecture-1.html#lets-plot-the-distribution-of-the-data",
    "title": "Data visualization",
    "section": "Let‚Äôs plot the distribution of the data",
    "text": "Let‚Äôs plot the distribution of the data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhistogram employment_share_industry if year == 2010, \n  color(midblue)\n\n\n\nSo in Stata we can make a histogram of our data with the hisogram command. This allows us to see the distribution of the data - for each region in the dataset, we look what the value is of regional share of employment in industry, and we count that value and add it to the bin.\nHere we can see that all of the data lies between about 0.08 and .4 - in percentage terms that means that the share of employment in industry is between 8 and 40 percent in 2010 across our dataset."
  },
  {
    "objectID": "lectures/lecture-1.html#lets-plot-the-distribution-of-the-data-1",
    "href": "lectures/lecture-1.html#lets-plot-the-distribution-of-the-data-1",
    "title": "Data visualization",
    "section": "Let‚Äôs plot the distribution of the data",
    "text": "Let‚Äôs plot the distribution of the data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nkdensity employment_share_industry if year == 2010\n\n\n\nWe can also use what is called a kernel density plot to show the distribution of the data. This is a smoothed version of the histogram, where we can see the distribution of the data in a more continuous way.\nWhat can we say about the shape of the distribution?"
  },
  {
    "objectID": "lectures/lecture-1.html#now-lets-make-breaks-based-on-this-information",
    "href": "lectures/lecture-1.html#now-lets-make-breaks-based-on-this-information",
    "title": "Data visualization",
    "section": "Now let‚Äôs make breaks based on this information",
    "text": "Now let‚Äôs make breaks based on this information\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nspmap employment_share_industry using \"nutscoord.dta\" \n  if year == 2010, id(_ID) fcolor(Spectral) legstyle(2) \n    title(\"Employment Share Industry - 2010\", size(large)) \n    osize(0.02 ..) ocolor(white ..) \n    clmethod(custom) clbreaks(0 (0.075) 0.45) \n    legend(pos(9) size(medium) rowgap(1.5) \n    label(7 \"37-45 %\") label(6 \"30-37 %\") \n    label(5 \"23-30 %\") label(4 \"15-23 %\") \n    label(3 \"8-15 %\") label(2 \"0-8 %\") \n    label(1 \"No Data\")) \n    ndfcolor(gray) ndocolor(white ..) ndsize(0.02 ..)\n\n\n\nHere instead of using the breaks covering all the way from zero to 100 percent, we trim the breaks to cover the range of the data, in this case from zero to 45 percent, which we break up into six bins.\nNow it is much more clear that in Paris, Copenagen, Oslo and Stockholm, there are relatively few people working in industry, (and we know that the majority work in services).\nIn contrast, in Northern Italy, as we spoke about yesterday, there is a strong industrial base. In the Basque country, there is a strong industrial base around Bilbao."
  },
  {
    "objectID": "lectures/lecture-1.html#colour-scales",
    "href": "lectures/lecture-1.html#colour-scales",
    "title": "Data visualization",
    "section": "Colour scales",
    "text": "Colour scales\nUses of color in data visualization\n\n\n\n\n\nDistinguish categories (qualitative)\n\n\n\n\n\n\n\n\nNow we are going to talk about the different types of colour scales that we can use in data visualization.\nWe looked yesterday at some sequential palettes, like the Blues2 palette that comes standard in Stata.\nThere are also other type, including qualitative palettes, which are used to distinguish between different categories."
  },
  {
    "objectID": "lectures/lecture-1.html#qualitative-scale-example",
    "href": "lectures/lecture-1.html#qualitative-scale-example",
    "title": "Data visualization",
    "section": "Qualitative scale example",
    "text": "Qualitative scale example\n\nPalette name: Okabe-Ito\n\nIn this graph I have chosen to plot some data about the number of solar panels installed in various Swedish towns, and the installed capacity of those solar panels.\nThe data isn‚Äôt important in this case, but we can see that there is a strong linear relationship between the number of solar panels installed and the installed capacity of those solar panels.\nIn this case, we might want to distinguish between different counties in Sweden, and so we use a qualitative palette to do so.\nWe can see that there are both the largest number of panels and the largest installed capacity in Gothenburg, followed by Stockholm and Malm√∂ - which makes sense.\nIn this instance, we can choose colours that distingish between the different counties, and we can see that the Okabe-Ito palette is a good choice for this. We aren‚Äôt saying that this town is ‚Äòmore Skane‚Äô than others, so a sequential palette is not appropriate."
  },
  {
    "objectID": "lectures/lecture-1.html#qualitative-scale-example-1",
    "href": "lectures/lecture-1.html#qualitative-scale-example-1",
    "title": "Data visualization",
    "section": "Qualitative scale example",
    "text": "Qualitative scale example\n\nPalette name: Brewer Set1"
  },
  {
    "objectID": "lectures/lecture-1.html#qualitative-scale-example-2",
    "href": "lectures/lecture-1.html#qualitative-scale-example-2",
    "title": "Data visualization",
    "section": "Qualitative scale example",
    "text": "Qualitative scale example\n\nPalette name: Brewer Dark2"
  },
  {
    "objectID": "lectures/lecture-1.html#uses-of-color-in-data-visualization",
    "href": "lectures/lecture-1.html#uses-of-color-in-data-visualization",
    "title": "Data visualization",
    "section": "Uses of color in data visualization",
    "text": "Uses of color in data visualization\n\n\n\n\nDistinguish categories (qualitative)\n\n\n\n\n\n\n\n\n\nRepresent numeric values (sequential)\n\n\n\n\n\n\n\n\nThe next palette is a sequential palette, which is used to represent numeric values, or numbers that are ordered in some way."
  },
  {
    "objectID": "lectures/lecture-1.html#sequential-scale-example",
    "href": "lectures/lecture-1.html#sequential-scale-example",
    "title": "Data visualization",
    "section": "Sequential scale example",
    "text": "Sequential scale example\n\nPalette name: inferno\n\nHere we are looking at the number of hours of sunlight in different cities around the world.\nWe can see that in Lund, because we are quite far North, we have very few hours of sunlight in the winter, and a lot of hours of sunlight in the summer.\nIn contrast, Panama City has a very consistent number of hours of sunlight throughout the year as it lies near the equator.\nWe can also see that in Cape Town and Livingstone Zambia we have the reverse pattern to Lund - with more hours of sunlight in the winter than in the summer.\nThe inferno sequential palette is a good choice for this data, as it shows the progression of the number of hours of sunlight in a clear way.\nFor a sequential palette, you want the person looking at your plot to be able to see clearly the progression of the data, as well as which is high and which is low. I think in this case it makes sense to use the brighter end of the scale as high, because we associate it with sunlight - quite neat!!."
  },
  {
    "objectID": "lectures/lecture-1.html#sequential-scale-example-1",
    "href": "lectures/lecture-1.html#sequential-scale-example-1",
    "title": "Data visualization",
    "section": "Sequential scale example",
    "text": "Sequential scale example\n\nPalette name: viridis"
  },
  {
    "objectID": "lectures/lecture-1.html#uses-of-color-in-data-visualization-1",
    "href": "lectures/lecture-1.html#uses-of-color-in-data-visualization-1",
    "title": "Data visualization",
    "section": "Uses of color in data visualization",
    "text": "Uses of color in data visualization\n\n\n\n\nDistinguish categories (qualitative)\n\n\n\n\n\n\n\n\n\nRepresent numeric values (sequential)\n\n\n\n\n\n\n\n\n\nRepresent numeric values (diverging)\n\n\n\n\n\n\n\n\nNext we can talk about a diverging palette, which is used to represent numeric values that are ordered in some way, and we want to know how far each point is away from the midpoint or median value."
  },
  {
    "objectID": "lectures/lecture-1.html#diverging-scale-example",
    "href": "lectures/lecture-1.html#diverging-scale-example",
    "title": "Data visualization",
    "section": "Diverging scale example",
    "text": "Diverging scale example\n\n\nIn this instance, we are looking at the solar panel data that we had before, this time, just in Stockholm county. We want to know how far each point is away from the median value of installed solar capacity in Stockholm county - and we can see that the red values are high, and the blue values are low, while the median is a white colour.\nIn this case we have a log scale on the y-axis because the data is quite skewed, and we want to be able to see the differences between the points more clearly. So Stockholm city has almost 10X the median installed solar capacity in the county."
  },
  {
    "objectID": "lectures/lecture-1.html#uses-of-color-in-data-visualization-2",
    "href": "lectures/lecture-1.html#uses-of-color-in-data-visualization-2",
    "title": "Data visualization",
    "section": "Uses of color in data visualization",
    "text": "Uses of color in data visualization\n\n\n\n\nDistinguish categories (qualitative)\n\n\n\n\n\n\n\n\n\nRepresent numeric values (sequential)\n\n\n\n\n\n\n\n\n\nRepresent numeric values (diverging)\n\n\n\n\n\n\n\n\n\nHighlight\n\n\n\n\n\n\n\n\nThe last type of palette that we are going to talk about is a highlight palette, which is used to highlight a particular point or set of points in a plot where you have a lot of information."
  },
  {
    "objectID": "lectures/lecture-1.html#highlight-example",
    "href": "lectures/lecture-1.html#highlight-example",
    "title": "Data visualization",
    "section": "Highlight example",
    "text": "Highlight example\n\n\nIn this example, we have information on the share of children born outside of marriage in Europe.\nWe have a lot of lines, and we are interested in highlighting two countries in order to compare them over time.\nWe can see that in Denmark, the share of children born outside of marriage was higher than Greece in 1960, and then really increased in 1970 to about 1990, before levelling off somewhat at about 50% of children born outside of marriage.\nIn contrast, in Greece, the share of children born outside of marriage was very low in 1960, and because of the importance of the Orthodox church in Greece, it has remained low throughout the period, only increasing to about 12,5% in 2021.\nI did another neat thing here, where I used the markdown in the title to colour the country names in the legend to match the colours of the lines. This way we don‚Äôt need to have a legend and a title, and we can save some space on the plot. I also used the colours from the flags of the countries, which is a nice touch, if I do say so myself."
  },
  {
    "objectID": "lectures/lecture-1.html#using-density-plots-to-set-your-legend-breaks-quick-example",
    "href": "lectures/lecture-1.html#using-density-plots-to-set-your-legend-breaks-quick-example",
    "title": "Data visualization",
    "section": "Using density plots to set your legend breaks: quick example",
    "text": "Using density plots to set your legend breaks: quick example\nDataset: Solar panels in Sweden\n\n\n\n  \n  \n\n\n\nInstalled solar capacity in Sweden\n\n\nYear: 2021\n\n\nSwedish county\nInstalled solar capacity (megawatts)\n\n\n\n\nV√§stra G√∂talands l√§n\n266.21\n\n\nSk√•ne l√§n\n256.25\n\n\nStockholms l√§n\n182.25\n\n\n√ñsterg√∂tlands l√§n\n106.81\n\n\nHallands l√§n\n94.31\n\n\nJ√∂nk√∂pings l√§n\n88.53\n\n\nS√∂dermanlands l√§n\n79.71\n\n\nUppsala l√§n\n79.11\n\n\nKalmar l√§n\n59.01\n\n\nV√§stmanlands l√§n\n49.45\n\n\n\nSource: Energimyndigheten\n\n\n\n\n\n\n\n\n\nLet‚Äôs recap quickly, we have a dataset of solar panels in Sweden, and we are interested in the installed capacity of solar panels in different counties in Sweden.\nWe want to make a choropleth, or a map that is coloured based on the installed capacity of solar panels in each county."
  },
  {
    "objectID": "lectures/lecture-1.html#how-to-decide-on-values-for-the-bins",
    "href": "lectures/lecture-1.html#how-to-decide-on-values-for-the-bins",
    "title": "Data visualization",
    "section": "How to decide on values for the bins?",
    "text": "How to decide on values for the bins?\nUse a histogram or a density plot to see where the weight of the distribution is.\n\n\nHow do we decide on the values for the bins in our choropleth?\nLet‚Äôs make a histogram of the installed capacity of solar panels in the different counties in Sweden.\nWe can see the range goes from zero to about 300."
  },
  {
    "objectID": "lectures/lecture-1.html#map-with-appropriate-breaks",
    "href": "lectures/lecture-1.html#map-with-appropriate-breaks",
    "title": "Data visualization",
    "section": "Map with appropriate breaks",
    "text": "Map with appropriate breaks\nAsk your neighbour:\n\nwhat kind of palette is this?\nIs it appropriate to use with this data?\n\n\n\n\n‚àí+\n01:00\n\n\n\n\n\nSo have a look at this map that we have created - and tell me what kind of palette is this, and is it appropriate to use with this data?\nLet‚Äôs take 1 minute to discuss with your neighbour."
  },
  {
    "objectID": "lectures/lecture-1.html#section-1",
    "href": "lectures/lecture-1.html#section-1",
    "title": "Data visualization",
    "section": "",
    "text": "Improving your maps\n\nGreat Choropleths"
  },
  {
    "objectID": "lectures/lecture-1.html#examples-of-great-maps",
    "href": "lectures/lecture-1.html#examples-of-great-maps",
    "title": "Data visualization",
    "section": "Examples of great maps",
    "text": "Examples of great maps\nFinancial Times analysis of Italian election results in 2018\n\n\nThis is a map from the FT showing the results of the Italian elections in 2018. You can all get access to the FT through Lund and I think it‚Äôs a really great resource for data journalism and data visualization.\nMaps work best when they show an emerging spatial pattern, as was the case with this map from the recent Italian elections.\nShowing the winner at municipality level clearly shows the political divisions in the country. In the north, the Northern League party triumphed largely on the back of an anti-immigration and anti-EU agenda. In the south, the anti-establishment Five Star Movement was even more successful, gaining a majority of votes in many areas.\nWhat is also clever as that they have used a column chart in the map in order to help us understand the aggregate vote share for the main parties.\nWhat kind of palette do you think they have used here? Sequential, qualitative or diverging?\nA: qualitative, because they are showing the winner in each municipality."
  },
  {
    "objectID": "lectures/lecture-1.html#examples-of-great-maps-1",
    "href": "lectures/lecture-1.html#examples-of-great-maps-1",
    "title": "Data visualization",
    "section": "Examples of great maps",
    "text": "Examples of great maps\nFinancial Times analysis of Italian election results in 2018\n\n\nAnother interesting take on the results was to show the per cent share of vote. This helped to emphasise just how strong the support was for the two parties.\nWhat kind of palette do you think they have used here? Sequential, qualitative or diverging?\nA: Sequential, because they are showing the share of the vote in each municipality for two main parties they want to compare.\nAnother thing I should mention is that they have been quite clever with the legend - you can see here the breaks are in specific places, in oder to best show that the Norhtern League‚Äôs support is really concentrated in the North, and the Five Star Movement‚Äôs support is really concentrated in the South and Sicily."
  },
  {
    "objectID": "lectures/lecture-1.html#examples-of-great-maps-2",
    "href": "lectures/lecture-1.html#examples-of-great-maps-2",
    "title": "Data visualization",
    "section": "Examples of great maps",
    "text": "Examples of great maps\nHuman Terrain from The Pudding\n\n\nThe other place I really recommend you have a look for inspiration for good data journalism is a website called ‚ÄúThe Pudding‚Äù. They have some really great data visualizations and data journalism pieces, inclduing this one that shows where people live in countries.\nHere i have a screenshow of the map showing the Oresund region, and we can see how centered the population is in Copenagenhagen and Malmo, and how the population density drops off as we move away from the cities to smaller towns.\nI will say that this is based on buildings and not people, so it is not a perfect representation of the population, but it is a really interesting way to show where people live in a country. Here you can see the Oresund bridge looks like it has people living on it, but that is not the case in reality.\nLet‚Äôs have a look at some other places - who has visited Japan before? Compare population growth‚Ä¶"
  },
  {
    "objectID": "lectures/lecture-1.html#examples-of-great-maps-3",
    "href": "lectures/lecture-1.html#examples-of-great-maps-3",
    "title": "Data visualization",
    "section": "Examples of great maps",
    "text": "Examples of great maps\nThe Coming Crisis: Exploring the U.S. Physician Shortage by Daniel Snow"
  },
  {
    "objectID": "lectures/lecture-1.html#section-2",
    "href": "lectures/lecture-1.html#section-2",
    "title": "Data visualization",
    "section": "",
    "text": "Overcoming Excel\n\nMotivation"
  },
  {
    "objectID": "lectures/lecture-1.html#overcoming-excel",
    "href": "lectures/lecture-1.html#overcoming-excel",
    "title": "Data visualization",
    "section": "Overcoming Excel",
    "text": "Overcoming Excel\n\n\n\nExcel itself is not a bad tool.\nIt is very popular! See the info on jobs that require it."
  },
  {
    "objectID": "lectures/lecture-1.html#overcoming-excel-1",
    "href": "lectures/lecture-1.html#overcoming-excel-1",
    "title": "Data visualization",
    "section": "Overcoming Excel",
    "text": "Overcoming Excel\n\n\nFormby et al (2017) Microsoft Excel: Is It An Important Job Skill for College Graduates?"
  },
  {
    "objectID": "lectures/lecture-1.html#overcoming-excel-2",
    "href": "lectures/lecture-1.html#overcoming-excel-2",
    "title": "Data visualization",
    "section": "Overcoming Excel",
    "text": "Overcoming Excel\n\nTakeaways:\n\n\n\nYou will likely use Excel in the future üìä\nExcel‚Äôs default plots and tables can be improved upon üìà\nSimple rules can help you make your message clear üíé"
  },
  {
    "objectID": "lectures/lecture-1.html#section-3",
    "href": "lectures/lecture-1.html#section-3",
    "title": "Data visualization",
    "section": "",
    "text": "Overcoming Excel\n\nCharts"
  },
  {
    "objectID": "lectures/lecture-1.html#overcoming-excel-column-plot",
    "href": "lectures/lecture-1.html#overcoming-excel-column-plot",
    "title": "Data visualization",
    "section": "Overcoming Excel: Column plot",
    "text": "Overcoming Excel: Column plot\n\n\n\n\nWe often encounter datasets containing simple amounts ü§è\nHere is some data on a sample of Swedish musical artists üéµ\nI put this data into Excel, and asked for a recommended chart üìä\n\n\n\n\n\n\n\n\n  \n  \n\n\n\nSwedish musical artists\n\n\nRank\nArtist\nMonthly listeners (m)\n\n\n\n\n1\nAvicii\n29.47\n\n\n2\nABBA\n23.48\n\n\n3\nJos√© Gonz√°lez\n‚Äá4.07\n\n\n4\nRobyn\n‚Äá3.11\n\n\n5\nTimbuktu\n‚Äá0.38\n\n\n\nDatasource: Spotify charts Nov 2022"
  },
  {
    "objectID": "lectures/lecture-1.html#your-turn",
    "href": "lectures/lecture-1.html#your-turn",
    "title": "Data visualization",
    "section": "Your turn",
    "text": "Your turn\n\n\n\n‚àí+\n02:30\n\n\n\n\nDiscuss with your neighbour:\n\nWhat do we like?\nWhat is confusing?"
  },
  {
    "objectID": "lectures/lecture-1.html#tip-1-avoid-rotated-axis-labels",
    "href": "lectures/lecture-1.html#tip-1-avoid-rotated-axis-labels",
    "title": "Data visualization",
    "section": "Tip 1: Avoid rotated axis labels",
    "text": "Tip 1: Avoid rotated axis labels\nUgly ü§¢"
  },
  {
    "objectID": "lectures/lecture-1.html#tip-1-avoid-rotated-axis-labels-1",
    "href": "lectures/lecture-1.html#tip-1-avoid-rotated-axis-labels-1",
    "title": "Data visualization",
    "section": "Tip 1: Avoid rotated axis labels",
    "text": "Tip 1: Avoid rotated axis labels\nFlip axes so that the text is easier to read üëì"
  },
  {
    "objectID": "lectures/lecture-1.html#tip-2-pay-attention-to-the-order-of-the-bars",
    "href": "lectures/lecture-1.html#tip-2-pay-attention-to-the-order-of-the-bars",
    "title": "Data visualization",
    "section": "Tip 2: Pay attention to the order of the bars",
    "text": "Tip 2: Pay attention to the order of the bars\nBad üëé"
  },
  {
    "objectID": "lectures/lecture-1.html#tip-2-pay-attention-to-the-order-of-the-bars-1",
    "href": "lectures/lecture-1.html#tip-2-pay-attention-to-the-order-of-the-bars-1",
    "title": "Data visualization",
    "section": "Tip 2: Pay attention to the order of the bars",
    "text": "Tip 2: Pay attention to the order of the bars\nIt is clear that Jos√© Gonz√°lez recieves more streams than Robyn"
  },
  {
    "objectID": "lectures/lecture-1.html#tip-3-consider-your-titles-labels-and-axes",
    "href": "lectures/lecture-1.html#tip-3-consider-your-titles-labels-and-axes",
    "title": "Data visualization",
    "section": "Tip 3: Consider your titles, labels and axes",
    "text": "Tip 3: Consider your titles, labels and axes\nUninformativeÔ∏è ‚ùó"
  },
  {
    "objectID": "lectures/lecture-1.html#tip-3-consider-your-titles-labels-and-axes-1",
    "href": "lectures/lecture-1.html#tip-3-consider-your-titles-labels-and-axes-1",
    "title": "Data visualization",
    "section": "Tip 3: Consider your titles, labels and axes",
    "text": "Tip 3: Consider your titles, labels and axes\nNote the title, x-axis title, x-axis labels üìô"
  },
  {
    "objectID": "lectures/lecture-1.html#tip-3-consider-your-titles-labels-and-axes-2",
    "href": "lectures/lecture-1.html#tip-3-consider-your-titles-labels-and-axes-2",
    "title": "Data visualization",
    "section": "Tip 3: Consider your titles, labels and axes",
    "text": "Tip 3: Consider your titles, labels and axes\nTitles and captions have different application areas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: Monthly streams for Swedish musical artists. Data sources: Spotify charts in November 2022"
  },
  {
    "objectID": "lectures/lecture-1.html#we-can-use-dots-instead-of-bars",
    "href": "lectures/lecture-1.html#we-can-use-dots-instead-of-bars",
    "title": "Data visualization",
    "section": "We can use dots instead of bars",
    "text": "We can use dots instead of bars"
  },
  {
    "objectID": "lectures/lecture-1.html#we-can-use-dots-instead-of-bars-1",
    "href": "lectures/lecture-1.html#we-can-use-dots-instead-of-bars-1",
    "title": "Data visualization",
    "section": "We can use dots instead of bars",
    "text": "We can use dots instead of bars"
  },
  {
    "objectID": "lectures/lecture-1.html#dots-are-preferable-if-we-want-to-truncate-the-axes",
    "href": "lectures/lecture-1.html#dots-are-preferable-if-we-want-to-truncate-the-axes",
    "title": "Data visualization",
    "section": "Dots are preferable if we want to truncate the axes",
    "text": "Dots are preferable if we want to truncate the axes\nDataset: Solar panels in Sweden"
  },
  {
    "objectID": "lectures/lecture-1.html#dots-are-preferable-if-we-want-to-truncate-the-axes-1",
    "href": "lectures/lecture-1.html#dots-are-preferable-if-we-want-to-truncate-the-axes-1",
    "title": "Data visualization",
    "section": "Dots are preferable if we want to truncate the axes",
    "text": "Dots are preferable if we want to truncate the axes\n\n\nBar lengths donot accuratelyrepresent thedata values"
  },
  {
    "objectID": "lectures/lecture-1.html#dots-are-preferable-if-we-want-to-truncate-the-axes-2",
    "href": "lectures/lecture-1.html#dots-are-preferable-if-we-want-to-truncate-the-axes-2",
    "title": "Data visualization",
    "section": "Dots are preferable if we want to truncate the axes",
    "text": "Dots are preferable if we want to truncate the axes\n\n\nKey featuresof the dataare obscured"
  },
  {
    "objectID": "lectures/lecture-1.html#dots-are-preferable-if-we-want-to-truncate-the-axes-3",
    "href": "lectures/lecture-1.html#dots-are-preferable-if-we-want-to-truncate-the-axes-3",
    "title": "Data visualization",
    "section": "Dots are preferable if we want to truncate the axes",
    "text": "Dots are preferable if we want to truncate the axes"
  },
  {
    "objectID": "lectures/lecture-1.html#section-4",
    "href": "lectures/lecture-1.html#section-4",
    "title": "Data visualization",
    "section": "",
    "text": "Overcoming Excel\n\nTables"
  },
  {
    "objectID": "lectures/lecture-1.html#overcoming-excel-tables",
    "href": "lectures/lecture-1.html#overcoming-excel-tables",
    "title": "Data visualization",
    "section": "Overcoming Excel: Tables",
    "text": "Overcoming Excel: Tables\n\n\n\nWe often encounter datasets containing simple amounts ü§è\nHere is some data on a sample of Swedish musical artists üéµ\nI put this data into Excel, and asked it to insert a table üóÉÔ∏è\n\n\n\n\n\n\n\n  \n  \n\n\n\nSwedish musical artists\n\n\nRank\nArtist\nMonthly listeners (m)\n\n\n\n\n1\nAvicii\n29.47\n\n\n2\nABBA\n23.48\n\n\n3\nJos√© Gonz√°lez\n‚Äá4.07\n\n\n4\nRobyn\n‚Äá3.11\n\n\n5\nTimbuktu\n‚Äá0.38\n\n\n\nDatasource: Spotify charts Nov 2022"
  },
  {
    "objectID": "lectures/lecture-1.html#your-turn-again",
    "href": "lectures/lecture-1.html#your-turn-again",
    "title": "Data visualization",
    "section": "Your turn again",
    "text": "Your turn again\n\n\n\n‚àí+\n02:30\n\n\n\n\nDiscuss with your neighbour:\n\nWhat do we like?\nWhat is confusing?"
  },
  {
    "objectID": "lectures/lecture-1.html#section-5",
    "href": "lectures/lecture-1.html#section-5",
    "title": "Data visualization",
    "section": "",
    "text": "Key rules for table layout\n\n\nNumber\nRule\n\n\n\n\n1\nDo not use vertical lines.\n\n\n2\nDo not use heavy horizontal lines between data rows. (Horizontal lines as separator between the title row and the first data row or as frame for the entire table are fine.)\n\n\n3\nText columns should be left aligned.\n\n\n4\nNumber columns should be right aligned and should use the same number of decimal digits throughout.\n\n\n5\nColumns containing single characters are centred.\n\n\n6\nThe header fields are aligned with their data, i.e., the heading for a text column will be left aligned and the heading for a number column will be right aligned.\n\n\n\nSource: Claus Wilke‚Äôs Fundamentals of Data Visualization"
  },
  {
    "objectID": "lectures/lecture-1.html#lets-apply-these-rules",
    "href": "lectures/lecture-1.html#lets-apply-these-rules",
    "title": "Data visualization",
    "section": "Let‚Äôs apply these rules",
    "text": "Let‚Äôs apply these rules\n\n\n\n\n\n‚àí+\n01:30\n\n\n\n\n  \n  \n\n\n\nKey rules for table layout\n\n\nNumber\nRule\n\n\n\n\n1\nDo not use vertical lines.\n\n\n2\nDo not use heavy horizontal lines between data rows. (Horizontal lines as separator between the title row and the first data row or as frame for the entire table are fine.)\n\n\n3\nText columns should be left aligned.\n\n\n4\nNumber columns should be right aligned and should use the same number of decimal digits throughout.\n\n\n5\nColumns containing single characters are centred.\n\n\n6\nThe header fields are aligned with their data, i.e., the heading for a text column will be left aligned and the heading for a number column will be right aligned.\n\n\n\nSource: Claus Wilke‚Äôs Fundamentals of Data Visualization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable A\n\n\n\n\n\n\n\n\n\nTable B"
  },
  {
    "objectID": "lectures/lecture-1.html#lets-apply-these-rules-1",
    "href": "lectures/lecture-1.html#lets-apply-these-rules-1",
    "title": "Data visualization",
    "section": "Let‚Äôs apply these rules",
    "text": "Let‚Äôs apply these rules\n\n\n\n\n\n‚àí+\n01:30\n\n\n\n\n  \n  \n\n\n\nKey rules for table layout\n\n\nNumber\nRule\n\n\n\n\n1\nDo not use vertical lines.\n\n\n2\nDo not use heavy horizontal lines between data rows. (Horizontal lines as separator between the title row and the first data row or as frame for the entire table are fine.)\n\n\n3\nText columns should be left aligned.\n\n\n4\nNumber columns should be right aligned and should use the same number of decimal digits throughout.\n\n\n5\nColumns containing single characters are centred.\n\n\n6\nThe header fields are aligned with their data, i.e., the heading for a text column will be left aligned and the heading for a number column will be right aligned.\n\n\n\nSource: Claus Wilke‚Äôs Fundamentals of Data Visualization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable C\n\n\n\n\n\n\n\n\n\nTable D"
  },
  {
    "objectID": "lectures/lecture-1.html#section-6",
    "href": "lectures/lecture-1.html#section-6",
    "title": "Data visualization",
    "section": "",
    "text": "Storytelling with data\n\nRelated time series"
  },
  {
    "objectID": "lectures/lecture-1.html#plotting-related-time-series",
    "href": "lectures/lecture-1.html#plotting-related-time-series",
    "title": "Data visualization",
    "section": "Plotting related time series",
    "text": "Plotting related time series\nDataset: Fertility and births outside of marriage in Denmark and Greece.\nDefault choice for plotting is two line plots"
  },
  {
    "objectID": "lectures/lecture-1.html#plotting-related-time-series-1",
    "href": "lectures/lecture-1.html#plotting-related-time-series-1",
    "title": "Data visualization",
    "section": "Plotting related time series",
    "text": "Plotting related time series\n\n\n\n\n\n\n\n\n\n\n\n\n\nPros üëç\n\nFamiliar\n\nCons üëé\n\nHard to keep track of each series\nDifficult to compare movements across short periods"
  },
  {
    "objectID": "lectures/lecture-1.html#an-alternative-time-on-a-third-axis",
    "href": "lectures/lecture-1.html#an-alternative-time-on-a-third-axis",
    "title": "Data visualization",
    "section": "An alternative: time on a third axis",
    "text": "An alternative: time on a third axis"
  },
  {
    "objectID": "lectures/lecture-1.html#what-have-we-learned",
    "href": "lectures/lecture-1.html#what-have-we-learned",
    "title": "Data visualization",
    "section": "What have we learned?",
    "text": "What have we learned?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBoth countries saw a large drop in fertility from the 1960s until the 1980s\nIn Denmark, after 1970 we see an increase in the share of children born outside of marriage\nIn contrast, Greek families have relatively few children outside of marriage.\nAfter 1990, Danish fertility increased from 1.3 to 1.8, while Greek fertility remained at ‚Äòlowest-low‚Äô levels, below replacement."
  },
  {
    "objectID": "lectures/lecture-1.html#what-have-we-changed",
    "href": "lectures/lecture-1.html#what-have-we-changed",
    "title": "Data visualization",
    "section": "What have we changed?",
    "text": "What have we changed?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIndicators on the x- and y-axis and then show time with text labels\nLegend is replaced with colour coded title\nColours have meaning (main colour of country flag)\nPercentage labels on the y-axis"
  },
  {
    "objectID": "lectures/lecture-1.html#section-7",
    "href": "lectures/lecture-1.html#section-7",
    "title": "Data visualization",
    "section": "",
    "text": "Storytelling with data\n\nGiving context"
  },
  {
    "objectID": "lectures/lecture-1.html#giving-context",
    "href": "lectures/lecture-1.html#giving-context",
    "title": "Data visualization",
    "section": "Giving context",
    "text": "Giving context\nSometimes we may want to show a particular series of data in its correct context.\nFor instance, in our line graph above which showed the evolution of the share of births outside of marriage in Denmark and Greece, we might want to know if these two represent the extremes within Europe."
  },
  {
    "objectID": "lectures/lecture-1.html#giving-context-1",
    "href": "lectures/lecture-1.html#giving-context-1",
    "title": "Data visualization",
    "section": "Giving context",
    "text": "Giving context\nDo Denmark and Greece represent the extremes of the share of children born outside of marriage in Europe?"
  },
  {
    "objectID": "lectures/lecture-1.html#giving-context-with-an-average",
    "href": "lectures/lecture-1.html#giving-context-with-an-average",
    "title": "Data visualization",
    "section": "Giving context with an average",
    "text": "Giving context with an average\nOne way to do this would be to show an average for Europe"
  },
  {
    "objectID": "lectures/lecture-1.html#giving-context-with-an-interval-ribbon",
    "href": "lectures/lecture-1.html#giving-context-with-an-interval-ribbon",
    "title": "Data visualization",
    "section": "Giving context with an interval ribbon",
    "text": "Giving context with an interval ribbon"
  },
  {
    "objectID": "lectures/lecture-1.html#giving-context-with-all-of-the-data",
    "href": "lectures/lecture-1.html#giving-context-with-all-of-the-data",
    "title": "Data visualization",
    "section": "Giving context with all of the data",
    "text": "Giving context with all of the data\nThis is silly"
  },
  {
    "objectID": "lectures/lecture-1.html#giving-context-with-all-of-the-data-1",
    "href": "lectures/lecture-1.html#giving-context-with-all-of-the-data-1",
    "title": "Data visualization",
    "section": "Giving context with all of the data",
    "text": "Giving context with all of the data\nHere we highlight the series we are interested in and draw in the remaining series in grey"
  },
  {
    "objectID": "lectures/lecture-1.html#what-have-we-changed-1",
    "href": "lectures/lecture-1.html#what-have-we-changed-1",
    "title": "Data visualization",
    "section": "What have we changed?",
    "text": "What have we changed?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShows each of the series\nWe can see that Denmark is a leader in the beginning, but is caught up by other nations\nDoes not hide outliers\nMakes clear the trends in your countries of interest"
  },
  {
    "objectID": "lectures/lecture-1.html#section-8",
    "href": "lectures/lecture-1.html#section-8",
    "title": "Data visualization",
    "section": "",
    "text": "Storytelling with data\n\nTips for polished figures"
  },
  {
    "objectID": "lectures/lecture-1.html#tips-for-polishing-your-figures",
    "href": "lectures/lecture-1.html#tips-for-polishing-your-figures",
    "title": "Data visualization",
    "section": "Tips for polishing your figures",
    "text": "Tips for polishing your figures\nWhere to get great colours from for your plots:\n\n\n\n\n\nhelp spmap # Look for the palettes under fcolor"
  },
  {
    "objectID": "lectures/lecture-1.html#recreating-published-figures",
    "href": "lectures/lecture-1.html#recreating-published-figures",
    "title": "Data visualization",
    "section": "Recreating published figures",
    "text": "Recreating published figures\n\nA FT chart published without the underlying data"
  },
  {
    "objectID": "lectures/lecture-1.html#recreating-published-figures-1",
    "href": "lectures/lecture-1.html#recreating-published-figures-1",
    "title": "Data visualization",
    "section": "Recreating published figures",
    "text": "Recreating published figures"
  },
  {
    "objectID": "lectures/lecture-1.html#recreating-published-figures-2",
    "href": "lectures/lecture-1.html#recreating-published-figures-2",
    "title": "Data visualization",
    "section": "Recreating published figures",
    "text": "Recreating published figures"
  },
  {
    "objectID": "lectures/lecture-1.html#you-pay-a-heavy-price",
    "href": "lectures/lecture-1.html#you-pay-a-heavy-price",
    "title": "Data visualization",
    "section": "You pay a heavy price",
    "text": "You pay a heavy price"
  },
  {
    "objectID": "lectures/lecture-1.html#additional-data-demo",
    "href": "lectures/lecture-1.html#additional-data-demo",
    "title": "Data visualization",
    "section": "Additional data demo",
    "text": "Additional data demo"
  }
]